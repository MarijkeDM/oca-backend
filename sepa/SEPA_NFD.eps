%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: IBAN_NFD.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.0%AI9_PrintingDataBegin%%For: Bart Vanreepinghen%%CreationDate: 14-02-2007%%BoundingBox: 0 0 596 283%%HiResBoundingBox: 0 0 595.2754 282.3311%%CropBox: 0 0 595.2754 282.3311%%LanguageLevel: 3%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors: %%DocumentCustomColors: (PMS OCR Warm Red)%%CMYKCustomColor: 0 0.7900 0.9100 0 (PMS OCR Warm Red)%%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x5199 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 16054 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3BFFCAFFFFFFCFFFCFFD15FFCFFFFFFFCFFFFFFFCFFD0BFFCFFD%07FFCFFFFFFFCFFD07FFCFFD38FFCAC29AC2A0C3C2C299C299CFCAFFCACF%CAFFCACFCAFFCACFCAFFCACFCAFFC9C29AC2A0C299C2C2C2A0C399C39AC2%99BC99C9A0C39AC299C299C3A0C3A0C399C9FD40FFCFC2C9C9C9C3CAC9CA%CACFFD12FFCFCAC2C299C2BCC2A0C3BCC2A0C2BBC299BBBBC29AC2C2C29A%C2BBC299BBC2C29AC2CAFD40FFA1BB93C299BB99C2C9CFFD12FFCACFFFCF%FFCFA8FFCACFA8FFA1C299BB99BB99C9A0BC99C299C2A0BB99BB99BC9ABC%99C9FFFFCAFD3EFFC2C9C9C3C3CAC3C3C9FD13FFCAFD0AFFCAFD04C2BCC2%C2CAC2C3C3C9BCC3C2C2BBC2BCC2BBC9CFFFCACFCAFD58FFCFCFFD05FFC9%C2CAA7CAC3C9CAC9C2C9A0C9C3C9A1C9C9CAA7C9C2C9A0C9C3CFA1FFCFFF%CAFD5AFFCFFD05FFC2C293BB99C2BBC299C2BBC2C2BBBBBBC2C3BBC299C2%C9C299BBC3BCC3FD5CFFCACFFD05FFC9A0C299C2A0C2A0C999C2A0C2A0C3%A0C2A0C2A0C2A0CFA1C299C9A0C9CACFCACFCAFD84FFCFCAFFCAFFFFFFCA%FFCACFCAFFCACFFFCFFD08FFCAFFFFCFCAFFFFFFCAFFCAFFCAFFCAFFCFCA%A7CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CA%C9CAC9CAC9CAC9CAC9CAC9CACACAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CA%C9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CFCACAC9CACAFFFF99C9FFCACA%FFCACAC9CAC9C9C9CAC9FFC3FFC9FFCAC9C9FFC3C9C9CAC3CACACAC3CAC9%CACACACFC9C9CAC2BB99C2BBBB99BCBBBB93BBBBBB93BBBBBB93BBBBBB93%BBBBBB93BBBBBB93BBBBBB93BBBBBB93BBBBBB93BBBBBB93BBBBBB93BBBB%BB93BBBBBB93BBBBBB93BBBBBB93BBBBBB93BBBBBB93BBBBBB93BBBBBB93%C2FFFFBBA0C9C3CAA8CAC9C9A1FFCAC3A7FFCACAA0CAC9CAA0C9CACAA7CA%C9CFA8CAA1C9A8CAC9C9A8CAC9CAA8CACAC9CACAC3FFA0CAA0B592BB93BB%92BB93BB92BB93BB92BB93BB92BB93BB92BB93BB92BB93BB92BB93BB92BB%93BB92BB93BB92BB93BB92BB93BB92BB93BB92BB93BB92BB93BB92BB93BB%92BB93BB92BB93BB99FFFF99C3C9CAC3FFCACFC9CFCACAC3C9CACACAC3CA%C9C3CFC9CFCACACACFC3FFC3CFC9CAC9CFC9CFC3CAFFC9C9CFC9CAC3CAC3%BCBBBC99C2BBBC99BCBBBC99C2BBBB99C2BBBB99C2BBBC99C2BBBC99BCBB%BB99BBBBBB99BBBBBB99BBBBBC99BCBBBB99C2BBBC99BCBBBC99C2BBBB99%BBBBBB99C2BBBB99BBBBBB99C2BBBC99C2FFFFCAA0BB99C299C2A0C299C2%A0C299C299C29AC29AC299C299BB99C39ABC99C29ABB99C299C299C299C2%99C29ABB99C2A0BB99C39ABB99BC99BC99C299C299BCA0C299BC9ABC99C3%9AC299C29AC299C9C9C9A1C9C3C9A1C9C3C9A1C999BB99BCA0C299C299BC%A0C299C299C9C9C9A1C9C3BC99BCC2C9A1C9C3C29AC299C2A7FFFFCFC9A0%C9C3C9C2C9C3C9C2C9C2C3C2C9C3C9C2C9C3C9C3C9C2C9C9C9C2C9C3C9C2%C9C3C9C3C9C2C9C3C9C2C9C2C9C3C9C3C9C9C9C2C9C2C9C3C9C3C9C3C9C2%CAC2C2C2C9C3C9C9C9C3C9C3C9C3C9CAFFCACFCACFCACFCACFCACFCAC9C2%C999C9C9C3C3C9C3C9C2C9C3C2C9CFCACFCACABBBB99C9CFCFCACAC2C299%C2C3FFFFFFCACAFFA8CACFCAA7FFCACAA8CFC9FFCACACAFFA7CFCACAA8CF%CACAA8CFCACAA8CFCACAA8CFCACFA8CFCACFA8CFCACAA8CFCACAA8CFCACF%A8CFCACAA8CFCACFA8CFCACFA8CFCACAA8CFCACAA8CFCACAA7CACACAA7CA%CACAA7CACACAA8FFFD05CAFFA8CACACFA7FFCACAA8CFC9CFA8C9CACFA7CA%CACAA7CFC9CAA8CACAFFFFCACFFFFFCFFD05FFCAFD05FFCAFFFFCFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCAFFFFFFCFFD05FFCFFD05FFCAFD05FFCFFFFFFFCACFCA%FD05FFCACFFFFFCACAFFCAFFFFFFC9FFFFCFFFFFC9FFFFCFFFFFC9CFCACA%C9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CF%CACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACA%C9CFCACAC9CFCACACAFFCAFFFFCFCAFFCAFFFFFFCAFFCACAFFFFCAFFFFCF%FFFFCACAC9CACFFFCAFFFFCFCAFFFFCACFCFCACAFFC9C3CACFCAFFCAC2CA%FFC9FFCACACACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCAFFC2C9FFCAC9FFFD04CA%C2FFCACACACFC9FFCACFC9C2CACFCACACAFFCACFFFFFCAA7CAC9CAA7CAC9%CAA7CAC9C9A7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7%CAC9CAA7CAC9CAA7CACACAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9%CAA7CAC9CAA7CACACAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7%CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA1CAC9CAA7CAC9CAA8FFFF%CAC9FD05C2C3C2C3BCC3BBC2C2C3C2C3C2C9CACFCACACACFCACFC9CFCACA%C9CFCACACACFCACFCACFCACFC9CFCACACACFC9CFCACFCACFC9CFCACAC9CF%CACACACFCACFFD04CAC9CFCACAC9CFC9CAC9CACACAC9CFCACAC9CFC9CACA%CAC9CFC9CACACAC9CFC9CAC9CFCACAC9CACACAC9CFCACACACFC9CAC9CACA%CFC9CFFFFFCFA0C2A0C299C2A0C2A0C3C2C29AC3C2C2A0C2C2FFFFCFCFFF%CAFFFFCFCAFFCACFFFFFCAFFCACFFFFFCAFFFFCAFFFFCAFFFFCAFFFFCAFF%FFCACAFFCACFFFFFCAFFCACFFFFFC9FFCACACAFFC9FFCACACAFFC9FFCACA%CAFFCACFCACFCAFFC9CFCFCAC9FFCACACACFCAFFCACACAFFC9FFCACACAFF%C9CFCACACAFFC9CFCFCAC9FFFFCAC999C2C2C3C2C3C2C2C2C9C2C3C2C3C2%C3A0C9FFFFCAFD05FFCFFD09FFCAFD05FFCFFD05FFCAFD05FFCFFD05FFCF%FFFFFFCAFFFFCFCAFFCAFFCACFCFFFCAFFCFCFCAFFCAFFCFFFCFFFCAFFFF%CFCAFFCACFCFFFCAFFCAFFFFFFCAFFCFCFCAFFCAFFCACFCFFFCAFFFFCFCA%FFCACFFFFFCFA0C299C2A0C2A0C2A0C299C29AC29AC39AC2A0FFCACAA8FF%C9CACACAC9FFA0C9FFCAA7FFCACAA8CFC9FFA8C2CACFA1FFCAC9A8FFC9CA%CAC3C3FFA7CACACAA7FFC9CACAC9A0CAA7CACACAA1CACAC9A7CA9ACAA8C9%CACAA1CACAC9A1FFA0C3A8CAC9CFA1CACACAA1CFC3C2A7CAC3CAA7C9CACA%A1CACAC2A1CFC9CAA8CACAFFFFCACAC3CAC9C9C3CAC3CAC3C2C2C9C3CAC9%C9C3C9CACACACFCACACACFFD04CAC9CFC9CFCACACACFCACFCACFC9CACACF%CACACACFCACFCACFC9CACACFCACACACFCACACACFC9CAC9CFCACAC9CFCACA%C9CFCAC9C9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CF%CACAC9CFCACAC9CFCACAC9FD04CACFCACFFFFFCFCAFFCACFCACFCAFFCACF%CAFFCACFCACFCACFFD04CAC9CACACAC9CFCACACACFCACAC9CACACAC9CACA%CAC9CFCACAC9CACACAC9CACACAC9CFCACAC9CACACAC9CACACAC9CFCACAC9%CFCACAC9CACACAC9CACACAC9CFCACAC9CFCACAC9CACACAC9CFCACAC9CFCA%CACACFCACACACFCACACACFCACACACFCACACACFCACAC9CFCAFFFFCAC9C2C2%C2C3C3C2C2C3C2C2A0FD04C2C3C3CFCFFFCAFFCFFFCFFFCAFFFFFFCAFFCF%FFCFFFCAFFCAFFFFFFCAFFFFFFCFFFCAFFCFFFCFFFCAFFFFFFCAFFCFFFCF%FFCAFFCAFFFFFFCAFFCFFFCFFFCAFFCFFFCFFFCAFFFFFFCAFFCAFFCFFFCF%FFCAFFFFFFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFC9%CAFFFFCAA1C2A0C3A0C3A0C2A0C3A0C39AC999C2A0C3C9FD05FFA8FFFFFF%CAFFCAFFFFFFCAFFCAFFFFFFA8FD05FFCAFD05FFA8FFFFFFCAFFCAFFFFFF%CAFFCAFFFFFFA8FD05FFCAFD05FFA8FD05FFCAFFFFFFCFFFCAFFFFFFCAFF%FFCAA7CACACAA7CACACAA7CACACAA7CACACAA7CACACAA7CACAC2A0FFFFCA%C9BBC2BCC2BBC2BBBCFD06C2BCC2BBC3FFFFCFFD05FFCFFFFFFFCFFD05FF%CFFD05FFCAFD05FFCFFD05FFCAFD09FFCFFFCFFFFFFFCAFD05FFCFFD05FF%CAFD05FFCFFD05FFCFFFFFFFCACFCACFCACFCACFCACFCACFCACFCACFCACF%CACFCACFCACFC9CFFFFFCFA0C2A0C299C29AC299C299C299C29ABC93C2A0%FFFFFFCFFFCAFFFFFFCAFFCAFFFFFFCAFFCAFFFFFFCAFFFFCFFFFFCAFFCF%FFFFFFCAFFFFCFCAFFCAFFFFFFCAFFCAFFFFFFCAFFCFCFFFFFCAFFCAFFFF%FFCAFFFFCFCAFFCAFFFFFFCFFFCAFFFFFFCAFFCFCAC9CFCACAC9CFCACAC9%CFCACAC9CFCACAC9CFCACAC9CFCACACAFFFFCACACACFCACFCACFCACACACF%FD04CAC3CACACFFFFFCAFFFFFFCFFFCFFD09FFCAFD05FFCFFD05FFCAFD05%FFCFFD05FFCFFFFFFFCAFD05FFCFFD05FFCAFD05FFCFFD05FFCFFFFFFFCF%FD05FFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFFF%FFCFCACAA7CACACAA7CACACAA7CACACAA7CFCACAA8FFFFCFCAFFCAFFCAFF%CAFFA8FFFFFFA8FFCACFCAFFCAFFCAFFCFFFA8FFCFCFCAFFCAFFCACFCAFF%A8FFFFFFA8FFCACFCAFFCAFFCAFFFFFFA8FFCACFCAFFCAFFCAFFCAFFA8FF%FFCFCAFFCAFFCAFFCAFFCACAC9CAA7CACACAA7CACACAA7CACACAA7CACACA%A7CACACAA7CACAFFFFCACFCACFCACFCACFCACFCACFCACFCACFCACFCAFFFF%FFCAFD05FFCFFD09FFCAFD05FFCFFD05FFCAFD05FFCFFD05FFCFFFFFFFCF%FD05FFCFFD05FFCAFD05FFCFFD05FFCFFFFFFFCFFD05FFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFFFFFCFCACAC9CFCACAC9CF%CACAC9CFCACAC9CFCACACAFFFFFFCAFFCAFFFFFFCAFFCAFFFFFFCAFFCFFF%FFFFCAFD05FFCAFFFFCFFFFFCAFFFFFFCFFFCAFFFFFFCAFFCAFFFFFFCAFF%CAFFFFFFCAFFFFCFFFFFCAFD05FFCAFFFFFFCAFFCAFFFFFFCAFFCACFCACA%C9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CACAFFFFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCAFFCACFCACFCACFCACFCACFCAFFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCAFFCACFCA%CFCACFCACFCACFCAFFCACFCACFCACFCACFCACFCACFCACFCAFFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFFFFFCAA7CACACAA7CAC9CAA7CAC9CAA7CAC9CAA7CACACAA7CAC9CAA7CA%C9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CA%A7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CA%C9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CACACA%A7CAC9CAA7CAC9CAA8FFFFCAC9FD05C2C3BBC3BBC3C2C2C3C2C2C2C9CFCA%CFCACACACFCACFC9CFCACAC9CFCACACACFCACFCACFCACFC9CFCACACACFC9%CFCACFCACFC9CFCACAC9CFCACACACFCACFFD04CAC9CFCACAC9CFC9CAC9CA%CACAC9CFCACAC9CFC9CACACAC9CAC9CACACAC9CFC9CAC9CAC9CAC9CACACA%C9CFCACAC9CFC9CAC9CAC9CAC9CFFFFFCFA0C2A0C299C2A0BCA0C3A0C2A0%C2A0C3A1CAC9FFFFCFCFFFCAFFFFCFCAFFCACFFFFFCAFFCACFFFFFCAFFFF%CAFFFFCAFFFFCAFFFFCAFFFFCACAFFCACFFFCFCAFFCACFFFFFC9FFCACACA%FFC9FFCACACAFFC9FFCACACAFFCACFCACACAFFC9CFCFCAC9FFCACACACFCA%FFCACACAFFC9FFCACACAFFC9CFCACACAFFC9CFCFCAC9FFFFCAC999FD04C2%C3C2C9C2C2C2C39AC2C3CFCACAFFFFCAFD0FFFCAFD0BFFCAFD05FFCFFD05%FFCFFFFFFFCFFFFFFFCFFFCAFFCAFFCFFFCAFFCFCFCAFFCAFFCFFFCFFFCA%FFFFFFCAFFCACFCFFFCAFFCAFFFFFFCAFFCFCFCAFFCAFFCAFFCFFFCAFFFF%CFCAFFCACFFFFFCFA0C299C2A0C2A0C299C2A0C299C2A0C29AC2A1FFCACA%A8FFC9CACACAC9FFA0C9FFCAA7FFCACAA8CFC9FFA8C3CACFA1FFCAC9A8FF%C9CACAC3C3FFA7CACACAA7FFC9CACAC9A0CAA7CACACAA1CACAC9A7CAA0CA%A8C9CACAA1CACACAA7FFA0C3A8CAC9CFA7CACACAA1CFC3C2A7CAC3CAA7C9%CACAA1CACAC2A1CFC9CAA8CACAFFFFCACAC9CAC9CAC9CFC3C3C9CAC2C9C3%C9C9C9C3FD04CACFCACFCACFCACFCACAC9CFCACFCACFCACFCACFCACFC9CF%CACFCACFCACFCACFC9CFC9CACACFCACAC9CFCACACACFC9CAC9CFCACAC9CF%CACAC9CFCAC9C9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACA%C9CFCACAC9CFCACAC9CFCACAC9CACACAC9CFCACFFFFFCFC9CAC9CAC9CAA1%CAC9CACACFCACFCACFCACAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9%CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CFCACACACFCACACACFCACAC9%CFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCA%CACACFCACACACFCACACACFCACACACFCACACACFCACACACFCACACACFCAFFFF%CAC2BBC299BCBBBC99BBBCCACACFCACFCACFCACACAFFCACFCACACAFFC9CF%FFCAC9FFCACAFFCFC9FFCACACFFFC9CFCAC9CACFC9CFCACACACFCACFCACF%CACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACF%CACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACF%CACFCACFCACFFFFFCFA0C2A0C299C2A0C299C3CACAA7CACACAA7CAC9FD05%FFA8FFFFFFCAFFCAFFFFFFCAFFCAFFFFFFA8FFFFFFCAFFCAFFCACFCACFA7%CACACAA7CACACAA7CACACAA7CACACAA7CACACAA7CACACAA7CACACAA7CACA%CAA7CACACAA7CACACAA7CACACAA7CACACAA7CACACAA7CACACAA7CACACAA7%CACACAA7CACACAA7CACACAA8FFFFCAC9C2C9C2C3C2C2C2C3C2C9CACFCACF%CACFCACACFFFCAFFFFCFCAFFCACFFFCFCAFFCACFFFFFCAFFCACFFFFFC3FF%CACACAFFC9CFCACACACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACF%CACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACF%CACFCACFCACFCACFCACFCACFCACFCACFCACFCAFFFFFFCFA1C9C3C999C3C2%C39AC9C3CAC9CFCACAC9CFC9CAC9CAC9CAA7CACACAC9CAC9CAC9CAC9CAC9%CAC9CAC9CAC9C3C9CAC9CAC9CAC9CAC9CFCACAC9CFCACAC9CFCACAC9CFCA%CAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9%CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACACAFFFF%CACFCFFFCFFFCAFFCACFCAFFCACFCAFFCACFCACFCACACACFCACFCACFCACF%CACFCACACACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACF%CACACACFCACFCACFCACFCACFCACACACFCACACACFCACFCACFCACACACFCACA%CACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACF%CACFCACFCACFFFFFCFA1C2A0C3A0C99AC3A0C3A0C3A0C2A0C2A1CAA7CFCA%CAA8CFCACAA8CFCACFA8CFCACAA8CFCACAA8CFCACFA8CFCACFA8CFCACAA8%CFCACAA8CFCACFA8CFCACAA8CFCACAA8CFCACFA8CFCACAA8CFCACAA8CFCA%CAA8CFCACFA8CFCACAA8CFCACAA8CFCACFA8CACACAA7CACACAA7CACACAA7%CACACAA7CACACAA7CACACAA7CACAFFFFCAC9C2C3C3FD04C2C3C2C2BCC9C2%C2C2C9CAFFFFFFCFFD05FFCFFD09FFCAFD05FFCFFD05FFCAFD05FFCFFD09%FFCFFD05FFCFFD05FFCAFD05FFCFFD05FFCFFFFFFFCFFD05FFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFFFFFCFC3C29AC9A0C2%A0C29AC999C3A0C3A0C2C9CFCAFFFFFFCAFFCAFFFFFFCAFFCAFFFFFFCAFF%CFCFFFFFCAFFCFFFFFFFCAFFFFCFCFFFCAFFFFFFCFFFCAFFFFFFCAFFCAFF%FFFFCAFFCAFFFFFFCAFFFFCFFFFFCAFD05FFCAFFFFFFCAFFCAFFFFFFCAFF%CACFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CFCACAC9CACAFFFFCA%C9C2C3C2C9C2C39AC2C3C2C3C9C2C2C2C3C2C9FFFFCFFD05FFCAFFFFFFCF%FD05FFCFFFCFFFFFFFCAFD05FFCAFD05FFCAFFFFFFCFFD05FFCFFFCFFFFF%FFCAFD05FFCAFD05FFCAFFFFFFCFFFCFFFFFFFCFFFCAFFFFFFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFFFFFCAA0C2A0C2A0C3%A0C299C3A0C9A0BB99C999C2A0FD05FFA8FFFFFFCAFFCAFFFFFFCAFFCAFF%FFFFA8FD05FFCAFD05FFA8FFFFCFCAFFCAFFFFFFCAFFCAFFFFFFA8FD05FF%CAFD05FFA8FFFFFFCAFFCAFFFFFFCAFFA8FFFFFFA8FFCFCAA7CACACAA7CA%CACAA7CACACAA7CACACAA7CACACAA7CACACAA8FFFFCACFCACFCAFFCAFFCA%FFCAFFCAFFCACFCACFCAFFFFFFCFFD05FFCAFFFFFFCFFD05FFCFFD05FFCA%FD05FFCAFD05FFCAFFFFFFCFFFCFFFFFFFCFFFCFFFFFFFCAFD05FFCAFD05%FFCAFD05FFCFFFFFFFCFFFCFFFFFFFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCAFFFFFFCAC9CFCACAC9CFCACAC9CFCACAC9CFCACA%CACFCAFFFFFFCFFFCAFFFFFFCAFFCAFFFFFFCAFFCAFFFFFFCAFD05FFCAFF%CFFFFFFFCAFFFFCFCAFFCAFFFFFFCAFFCAFFFFFFCAFFCFCFFFFFCAFFCAFF%FFFFCAFFFFFFCAFFCAFFFFFFCFFFCAFFFFFFCAFFCFCAC9CFCACAC9CFCACA%C9CFCACAC9CFCACAC9CFCACAC9CFCACACAFFFFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFFFFFCAFD0FFFCAFD05FFCFFD05FFCAFD05FFCFFD05%FFCFFFFFFFCFFD05FFCFFD05FFCAFD05FFCFFD05FFCFFFFFFFCFFD05FFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFFFFFCFC9CA%A7CACACAA7CACACAA7CACACAA7CACACAA7FFCACFA8FFCACFCACFCAFFA8CF%CACFA8FFCACFCAFFCAFFA8CFCAFFA8FFCACAA8FFCACFCACFCAFFA8FFCACF%A8FFCACFCACFCAFFA8CFCACFA8FFCACAA8FFCAFFCACFCAFFA8FFCACFA8FF%CACFCACFCAFFA8CAC9CAA7CACACAA7CACACAA7CACACAA7CACACAA7CACACA%A7CACAFFFFCACFCAFFCACFCAFFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFFFFFCFC9C9A1C9C9CAA7CFCACAC9CFCACAC9CF%CACAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CA%C9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CA%C9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CA%C9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CACAFFFFCAC3BBBC99FD04C2CA%CACFCACFCACFCACFCACACAFFCACFCACACAFFC9CFFFCAC9FFCACAFFCFC9FF%CACACFFFC9FFCFCACAFFC9FFCACACAFFC9CFFFCACAFFCACAFFCFCAFFCACA%CFCFC9FFCFCACAFFC9FFCACACFFFC9FFCFCACAFFCACAFFCFCAFFC9CFFFCA%C9FFCACACACFC9FFCACACFFFC9FFCFCACAFFC9CFCACACAFFCACFFFFFCFA0%BC99C3A0C299C299CACACAA7CACACAA7CAC9FD05FFA8FFFFFFCAFFCAFFFF%FFCAFFCAFFFFFFA8FD05FFCAFD05FFA8FFFFFFCAFFCAFFFFFFCAFFCAFFFF%FFA8FD05FFCAFD05FFA8FD05FFCAFD05FFCAFFFFFFCAFD05FFCAFD05FFA8%FD05FFCAFD05FFA8FFFFCAA7FFFFCAC9C2C3C3C9C2CACACFCACFCACFCACF%CACFCACACFFFCAFFFFCFCAFFCACFFFCFCAFFCACFFFFFCAFFCACFFFFFCAFF%FFCAFFFFCAFFFFCFCFFFCAFFFFCFCAFFCACFFFCFCAFFCACFFFFFCAFFFFCA%FFFFCAFFFFCFFFFFCAFFFFCFCAFFCACFFFCFCAFFCACFFFCFCAFFCACFFFFF%CAFFFFCFFFFFCAFFFFCACFFFCAFFFFCFCAFFCACFFFFFCFA0C9C2C9A0C2C3%CAC9CACACAC9CACACAC9CAC9CAC9CAC9CAA7CAC9CAA7CAC9CAC9CAC9CAC9%CAC9CAA7CAC9C9C9CAC9CAC9CAC9CAA7CAC9CAC9CAC9CAC9CAC9CAA7CAC9%CAA7CAC9CAC9CAC9CAC9CAC9CAA7CAC9C9C9CAC9CAC9CAC9CAA7CAC9CAA7%CAC9CAC9CAC9CAC9CAC9CAA7CAC9C9C9CAC9CAC9CAC9CAA7CAC9CACAFFFF%CAFFCAFFCFFFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCAFFCAFFCAFF%CAFFCACFCAFFCAFFCAFFCAFFCAFFCACFCAFFCACFCAFFCAFFCAFFCAFFCAFF%CACFCAFFCAFFCAFFCAFFCAFFCACFCAFFCACFCAFFCAFFCAFFCACFCAFFCACF%CAFFCAFFCAFFCAFFCAFFCACFCAFFCAFFCAFFCAFFCAFFCACFCAFFCACFCAFF%CAFFCAFFCAFD81FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin3 3010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">test</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2007-02-14T12:45:22+01:00</xap:CreateDate>
         <xap:ModifyDate>2007-02-14T12:45:55+01:00</xap:ModifyDate>
         <xap:MetadataDate>2007-02-14T12:45:55+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>124</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9UKqqoVRRVFAB2AxASTb&#xA;eKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXm+t+br1NbvLKLWruBY3lpBFYW7siwLzfi7ycyGBIVuH&#xA;UeFa6fNqiJkCR6/wjp8XpdN2fE4ozOOJ5bmcuu3ICvhfVTtvOV7cMsQ16aOSRYkib6lbcOTc4S9f&#xA;VfkDIvPb2A60yMdZI/xn/Sj3d7KfZ0Y7+GCBf8cvI/ze7ZkuhweZJpILmbzBBewKqrPBbpCyMSm8&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:1964EFC7BDBB11DBA6A3C7E13B36A7D3</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:A44A2E5ABDBB11DBA6A3C7E13B36A7D3</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:e3035008-af8e-11db-9e68-001124337c9e</stRef:instanceID>
            <stRef:documentID>uuid:AE07D2E4AE1111DBA946DAF0B9A70728</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -282.331 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 282.331 li595.275 282.331 li595.275 0 licpclp[1 0 0 1 0 0 ] concat589.606 282.331 mo5.66992 282.331 li5.66992 59.2725 li589.606 59.2725 li589.606 282.331 licpfalse sop/0 <</Name (PMS OCR Warm Red)/0 [/DeviceCMYK] /CSA add_res/CSA /0 get_csa_by_name/MappedCSA /0 /CSA get_res/TintMethod /Subtractive/TintProc null/NComponents 4 /Components [ 0 0.79 0.91 0 ] >>/CSD add_res1 /0 /CSD get_res sepcs0.2 sepf569.544 180.509 mo558.347 180.509 li558.347 164.72 li569.544 164.72 li569.544 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf0.28 lw0 lc0 lj4 ml[] 0 dshtrue sadj558.347 169.071 mo558.347 164.72 li569.544 164.72 li569.544 169.071 li1 /0 /CSD get_res sepcs1 sep@569.544 176.157 mo569.544 180.509 li558.347 180.509 li558.347 176.157 li@569.544 108.397 mo558.347 108.397 li558.347 92.6084 li569.544 92.6084 li569.544 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf558.347 96.96 mo558.347 92.6084 li569.544 92.6084 li569.544 96.96 li1 /0 /CSD get_res sepcs1 sep@569.544 104.045 mo569.544 108.397 li558.347 108.397 li558.347 104.045 li@223.934 276.661 mo212.736 276.661 li212.736 260.872 li223.934 260.872 li223.934 276.661 licp0 0 0 0 cmykf212.736 265.224 mo212.736 260.872 li223.934 260.872 li223.934 265.224 li1 /0 /CSD get_res sepcs1 sep@223.934 272.31 mo223.934 276.661 li212.736 276.661 li212.736 272.31 li@238.332 276.661 mo227.135 276.661 li227.135 260.872 li238.332 260.872 li238.332 276.661 licp0 0 0 0 cmykf227.135 265.224 mo227.135 260.872 li238.332 260.872 li238.332 265.224 li1 /0 /CSD get_res sepcs1 sep@238.332 272.31 mo238.332 276.661 li227.135 276.661 li227.135 272.31 li@252.731 276.661 mo241.535 276.661 li241.535 260.872 li252.731 260.872 li252.731 276.661 licp0 0 0 0 cmykf241.535 265.224 mo241.535 260.872 li252.731 260.872 li252.731 265.224 li1 /0 /CSD get_res sepcs1 sep@252.731 272.31 mo252.731 276.661 li241.535 276.661 li241.535 272.31 li@267.131 276.661 mo255.935 276.661 li255.935 260.872 li267.131 260.872 li267.131 276.661 licp0 0 0 0 cmykf255.935 265.224 mo255.935 260.872 li267.131 260.872 li267.131 265.224 li1 /0 /CSD get_res sepcs1 sep@267.131 272.31 mo267.131 276.661 li255.935 276.661 li255.935 272.31 li@281.531 276.661 mo270.334 276.661 li270.334 260.872 li281.531 260.872 li281.531 276.661 licp0 0 0 0 cmykf270.334 265.224 mo270.334 260.872 li281.531 260.872 li281.531 265.224 li1 /0 /CSD get_res sepcs1 sep@281.531 272.31 mo281.531 276.661 li270.334 276.661 li270.334 272.31 li@295.932 276.661 mo284.734 276.661 li284.734 260.872 li295.932 260.872 li295.932 276.661 licp0 0 0 0 cmykf284.734 265.224 mo284.734 260.872 li295.932 260.872 li295.932 265.224 li1 /0 /CSD get_res sepcs1 sep@295.932 272.31 mo295.932 276.661 li284.734 276.661 li284.734 272.31 li@310.33 276.661 mo299.135 276.661 li299.135 260.872 li310.33 260.872 li310.33 276.661 licp0 0 0 0 cmykf299.135 265.224 mo299.135 260.872 li310.33 260.872 li310.33 265.224 li1 /0 /CSD get_res sepcs1 sep@310.33 272.31 mo310.33 276.661 li299.135 276.661 li299.135 272.31 li@324.73 276.661 mo313.533 276.661 li313.533 260.872 li324.73 260.872 li324.73 276.661 licp0 0 0 0 cmykf313.533 265.224 mo313.533 260.872 li324.73 260.872 li324.73 265.224 li1 /0 /CSD get_res sepcs1 sep@324.73 272.31 mo324.73 276.661 li313.533 276.661 li313.533 272.31 li@339.131 276.661 mo327.934 276.661 li327.934 260.872 li339.131 260.872 li339.131 276.661 licp0 0 0 0 cmykf327.934 265.224 mo327.934 260.872 li339.131 260.872 li339.131 265.224 li1 /0 /CSD get_res sepcs1 sep@339.131 272.31 mo339.131 276.661 li327.934 276.661 li327.934 272.31 li@353.531 276.661 mo342.334 276.661 li342.334 260.872 li353.531 260.872 li353.531 276.661 licp0 0 0 0 cmykf342.334 265.224 mo342.334 260.872 li353.531 260.872 li353.531 265.224 li1 /0 /CSD get_res sepcs1 sep@353.531 272.31 mo353.531 276.661 li342.334 276.661 li342.334 272.31 li@97.5371 260.872 mo108.734 260.872 li108.734 276.661 li97.5371 276.661 li0 0 0 0 cmykf108.734 272.31 mo108.734 276.661 li97.5371 276.661 li97.5371 272.31 li97.5371 265.224 li97.5371 260.872 li108.734 260.872 li108.734 265.224 li1 /0 /CSD get_res sepcs1 sep@123.134 276.661 mo111.937 276.661 li111.937 260.872 li123.134 260.872 li123.134 276.661 licp0 0 0 0 cmykf111.937 265.224 mo111.937 260.872 li123.134 260.872 li123.134 265.224 li1 /0 /CSD get_res sepcs1 sep@123.134 272.31 mo123.134 276.661 li111.937 276.661 li111.937 272.31 li@137.534 276.661 mo126.337 276.661 li126.337 260.872 li137.534 260.872 li137.534 276.661 licp0 0 0 0 cmykf126.337 265.224 mo126.337 260.872 li137.534 260.872 li137.534 265.224 li1 /0 /CSD get_res sepcs1 sep@137.534 272.31 mo137.534 276.661 li126.337 276.661 li126.337 272.31 li@151.934 276.661 mo140.737 276.661 li140.737 260.872 li151.934 260.872 li151.934 276.661 licp0 0 0 0 cmykf140.737 265.224 mo140.737 260.872 li151.934 260.872 li151.934 265.224 li1 /0 /CSD get_res sepcs1 sep@151.934 272.31 mo151.934 276.661 li140.737 276.661 li140.737 272.31 li@166.333 276.661 mo155.137 276.661 li155.137 260.872 li166.333 260.872 li166.333 276.661 licp0 0 0 0 cmykf155.137 265.224 mo155.137 260.872 li166.333 260.872 li166.333 265.224 li1 /0 /CSD get_res sepcs1 sep@166.333 272.31 mo166.333 276.661 li155.137 276.661 li155.137 272.31 li@180.733 276.661 mo169.537 276.661 li169.537 260.872 li180.733 260.872 li180.733 276.661 licp0 0 0 0 cmykf169.537 265.224 mo169.537 260.872 li180.733 260.872 li180.733 265.224 li1 /0 /CSD get_res sepcs1 sep@180.733 272.31 mo180.733 276.661 li169.537 276.661 li169.537 272.31 li@195.133 276.661 mo183.937 276.661 li183.937 260.872 li195.133 260.872 li195.133 276.661 licp0 0 0 0 cmykf183.937 265.224 mo183.937 260.872 li195.133 260.872 li195.133 265.224 li1 /0 /CSD get_res sepcs1 sep@195.133 272.31 mo195.133 276.661 li183.937 276.661 li183.937 272.31 li@209.533 276.661 mo198.336 276.661 li198.336 260.872 li209.533 260.872 li209.533 276.661 licp0 0 0 0 cmykf198.336 265.224 mo198.336 260.872 li209.533 260.872 li209.533 265.224 li1 /0 /CSD get_res sepcs1 sep@209.533 272.31 mo209.533 276.661 li198.336 276.661 li198.336 272.31 li@367.932 276.661 mo356.734 276.661 li356.734 260.872 li367.932 260.872 li367.932 276.661 licp0 0 0 0 cmykf356.734 265.224 mo356.734 260.872 li367.932 260.872 li367.932 265.224 li1 /0 /CSD get_res sepcs1 sep@367.932 272.31 mo367.932 276.661 li356.734 276.661 li356.734 272.31 li@382.332 276.661 mo371.135 276.661 li371.135 260.872 li382.332 260.872 li382.332 276.661 licp0 0 0 0 cmykf371.135 265.224 mo371.135 260.872 li382.332 260.872 li382.332 265.224 li1 /0 /CSD get_res sepcs1 sep@382.332 272.31 mo382.332 276.661 li371.135 276.661 li371.135 272.31 li@396.732 276.661 mo385.535 276.661 li385.535 260.872 li396.732 260.872 li396.732 276.661 licp0 0 0 0 cmykf385.535 265.224 mo385.535 260.872 li396.732 260.872 li396.732 265.224 li1 /0 /CSD get_res sepcs1 sep@396.732 272.31 mo396.732 276.661 li385.535 276.661 li385.535 272.31 li@411.133 276.661 mo399.936 276.661 li399.936 260.872 li411.133 260.872 li411.133 276.661 licp0 0 0 0 cmykf399.936 265.224 mo399.936 260.872 li411.133 260.872 li411.133 265.224 li1 /0 /CSD get_res sepcs1 sep@411.133 272.31 mo411.133 276.661 li399.936 276.661 li399.936 272.31 li@425.533 276.661 mo414.336 276.661 li414.336 260.872 li425.533 260.872 li425.533 276.661 licp0 0 0 0 cmykf414.336 265.224 mo414.336 260.872 li425.533 260.872 li425.533 265.224 li1 /0 /CSD get_res sepcs1 sep@425.533 272.31 mo425.533 276.661 li414.336 276.661 li414.336 272.31 li@439.934 276.661 mo428.736 276.661 li428.736 260.872 li439.934 260.872 li439.934 276.661 licp0 0 0 0 cmykf428.736 265.224 mo428.736 260.872 li439.934 260.872 li439.934 265.224 li1 /0 /CSD get_res sepcs1 sep@439.934 272.31 mo439.934 276.661 li428.736 276.661 li428.736 272.31 li@454.334 276.661 mo443.137 276.661 li443.137 260.872 li454.334 260.872 li454.334 276.661 licp0 0 0 0 cmykf443.137 265.224 mo443.137 260.872 li454.334 260.872 li454.334 265.224 li1 /0 /CSD get_res sepcs1 sep@454.334 272.31 mo454.334 276.661 li443.137 276.661 li443.137 272.31 li@468.734 276.661 mo457.537 276.661 li457.537 260.872 li468.734 260.872 li468.734 276.661 licp0 0 0 0 cmykf457.537 265.224 mo457.537 260.872 li468.734 260.872 li468.734 265.224 li1 /0 /CSD get_res sepcs1 sep@468.734 272.31 mo468.734 276.661 li457.537 276.661 li457.537 272.31 li@483.135 276.661 mo471.938 276.661 li471.938 260.872 li483.135 260.872 li483.135 276.661 licp0 0 0 0 cmykf471.938 265.224 mo471.938 260.872 li483.135 260.872 li483.135 265.224 li1 /0 /CSD get_res sepcs1 sep@483.135 272.31 mo483.135 276.661 li471.938 276.661 li471.938 272.31 li@497.535 276.661 mo486.338 276.661 li486.338 260.872 li497.535 260.872 li497.535 276.661 licp0 0 0 0 cmykf486.338 265.224 mo486.338 260.872 li497.535 260.872 li497.535 265.224 li1 /0 /CSD get_res sepcs1 sep@497.535 272.31 mo497.535 276.661 li486.338 276.661 li486.338 272.31 li@511.936 276.661 mo500.738 276.661 li500.738 260.872 li511.936 260.872 li511.936 276.661 licp0 0 0 0 cmykf500.738 265.224 mo500.738 260.872 li511.936 260.872 li511.936 265.224 li1 /0 /CSD get_res sepcs1 sep@511.936 272.31 mo511.936 276.661 li500.738 276.661 li500.738 272.31 li@526.336 276.661 mo515.139 276.661 li515.139 260.872 li526.336 260.872 li526.336 276.661 licp0 0 0 0 cmykf515.139 265.224 mo515.139 260.872 li526.336 260.872 li526.336 265.224 li1 /0 /CSD get_res sepcs1 sep@526.336 272.31 mo526.336 276.661 li515.139 276.661 li515.139 272.31 li@540.736 276.661 mo529.539 276.661 li529.539 260.872 li540.736 260.872 li540.736 276.661 licp0 0 0 0 cmykf529.539 265.224 mo529.539 260.872 li540.736 260.872 li540.736 265.224 li1 /0 /CSD get_res sepcs1 sep@540.736 272.31 mo540.736 276.661 li529.539 276.661 li529.539 272.31 li@555.137 276.661 mo543.939 276.661 li543.939 260.872 li555.137 260.872 li555.137 276.661 licp0 0 0 0 cmykf543.939 265.224 mo543.939 260.872 li555.137 260.872 li555.137 265.224 li1 /0 /CSD get_res sepcs1 sep@555.137 272.31 mo555.137 276.661 li543.939 276.661 li543.939 272.31 li@569.537 276.661 mo558.34 276.661 li558.34 260.872 li569.537 260.872 li569.537 276.661 licp0 0 0 0 cmykf558.34 265.224 mo558.34 260.872 li569.537 260.872 li569.537 265.224 li1 /0 /CSD get_res sepcs1 sep@569.537 272.31 mo569.537 276.661 li558.34 276.661 li558.34 272.31 li@583.938 276.661 mo572.74 276.661 li572.74 260.872 li583.938 260.872 li583.938 276.661 licp0 0 0 0 cmykf572.74 265.224 mo572.74 260.872 li583.938 260.872 li583.938 265.224 li583.938 272.31 li583.938 276.661 li572.74 276.661 li572.74 272.31 li1 /0 /CSD get_res sepcs1 sep@238.333 226.161 mo227.136 226.161 li227.136 215.22 li238.333 215.22 li238.333 226.161 licp0 0 0 0 cmykf252.731 226.161 mo241.535 226.161 li241.535 215.22 li252.731 215.22 li252.731 226.161 licpf267.131 226.161 mo255.935 226.161 li255.935 215.22 li267.131 215.22 li267.131 226.161 licpf281.531 226.161 mo270.334 226.161 li270.334 215.22 li281.531 215.22 li281.531 226.161 licpf295.931 226.161 mo284.734 226.161 li284.734 215.22 li295.931 215.22 li295.931 226.161 licpf310.331 226.161 mo299.135 226.161 li299.135 215.22 li310.331 215.22 li310.331 226.161 licpf324.729 226.161 mo313.534 226.161 li313.534 215.22 li324.729 215.22 li324.729 226.161 licpf339.13 226.161 mo327.933 226.161 li327.933 215.22 li339.13 215.22 li339.13 226.161 licpf353.53 226.161 mo342.333 226.161 li342.333 215.22 li353.53 215.22 li353.53 226.161 licpf367.931 226.161 mo356.733 226.161 li356.733 215.22 li367.931 215.22 li367.931 226.161 licpf108.734 226.161 mo97.5371 226.161 li97.5371 215.22 li108.734 215.22 li108.734 226.161 licpf123.134 226.161 mo111.937 226.161 li111.937 215.22 li123.134 215.22 li123.134 226.161 licpf137.534 226.161 mo126.337 226.161 li126.337 215.22 li137.534 215.22 li137.534 226.161 licpf151.934 226.161 mo140.737 226.161 li140.737 215.22 li151.934 215.22 li151.934 226.161 licpf166.333 226.161 mo155.137 226.161 li155.137 215.22 li166.333 215.22 li166.333 226.161 licpf180.733 226.161 mo169.537 226.161 li169.537 215.22 li180.733 215.22 li180.733 226.161 licpf195.133 226.161 mo183.937 226.161 li183.937 215.22 li195.133 215.22 li195.133 226.161 licpf209.533 226.161 mo198.336 226.161 li198.336 215.22 li209.533 215.22 li209.533 226.161 licpf223.933 226.161 mo212.736 226.161 li212.736 215.22 li223.933 215.22 li223.933 226.161 licpf382.331 226.161 mo371.134 226.161 li371.134 215.22 li382.331 215.22 li382.331 226.161 licpf396.731 226.161 mo385.534 226.161 li385.534 215.22 li396.731 215.22 li396.731 226.161 licpf411.132 226.161 mo399.935 226.161 li399.935 215.22 li411.132 215.22 li411.132 226.161 licpf425.532 226.161 mo414.335 226.161 li414.335 215.22 li425.532 215.22 li425.532 226.161 licpf439.933 226.161 mo428.735 226.161 li428.735 215.22 li439.933 215.22 li439.933 226.161 licpf454.333 226.161 mo443.136 226.161 li443.136 215.22 li454.333 215.22 li454.333 226.161 licpf468.733 226.161 mo457.536 226.161 li457.536 215.22 li468.733 215.22 li468.733 226.161 licpf238.333 238.166 mo227.136 238.166 li227.136 227.252 li238.333 227.252 li238.333 238.166 licpf252.731 238.166 mo241.535 238.166 li241.535 227.252 li252.731 227.252 li252.731 238.166 licpf267.131 238.166 mo255.935 238.166 li255.935 227.252 li267.131 227.252 li267.131 238.166 licpf281.531 238.166 mo270.334 238.166 li270.334 227.252 li281.531 227.252 li281.531 238.166 licpf295.931 238.166 mo284.734 238.166 li284.734 227.252 li295.931 227.252 li295.931 238.166 licpf310.331 238.166 mo299.135 238.166 li299.135 227.252 li310.331 227.252 li310.331 238.166 licpf324.729 238.166 mo313.534 238.166 li313.534 227.252 li324.729 227.252 li324.729 238.166 licpf339.13 238.166 mo327.933 238.166 li327.933 227.252 li339.13 227.252 li339.13 238.166 licpf353.53 238.166 mo342.333 238.166 li342.333 227.252 li353.53 227.252 li353.53 238.166 licpf367.931 238.166 mo356.733 238.166 li356.733 227.252 li367.931 227.252 li367.931 238.166 licpf108.734 238.166 mo97.5371 238.166 li97.5371 227.252 li108.734 227.252 li108.734 238.166 licpf123.134 238.166 mo111.937 238.166 li111.937 227.252 li123.134 227.252 li123.134 238.166 licpf137.534 238.166 mo126.337 238.166 li126.337 227.252 li137.534 227.252 li137.534 238.166 licpf151.934 238.166 mo140.737 238.166 li140.737 227.252 li151.934 227.252 li151.934 238.166 licpf166.333 238.166 mo155.137 238.166 li155.137 227.252 li166.333 227.252 li166.333 238.166 licpf180.733 238.166 mo169.537 238.166 li169.537 227.252 li180.733 227.252 li180.733 238.166 licpf195.133 238.166 mo183.937 238.166 li183.937 227.252 li195.133 227.252 li195.133 238.166 licpf209.533 238.166 mo198.336 238.166 li198.336 227.252 li209.533 227.252 li209.533 238.166 licpf223.933 238.166 mo212.736 238.166 li212.736 227.252 li223.933 227.252 li223.933 238.166 licpf382.331 238.166 mo371.134 238.166 li371.134 227.252 li382.331 227.252 li382.331 238.166 licpf396.731 238.166 mo385.534 238.166 li385.534 227.252 li396.731 227.252 li396.731 238.166 licpf411.132 238.166 mo399.935 238.166 li399.935 227.252 li411.132 227.252 li411.132 238.166 licpf425.532 238.166 mo414.335 238.166 li414.335 227.252 li425.532 227.252 li425.532 238.166 licpf439.933 238.166 mo428.735 238.166 li428.735 227.252 li439.933 227.252 li439.933 238.166 licpf454.333 238.166 mo443.136 238.166 li443.136 227.252 li454.333 227.252 li454.333 238.166 licpf468.733 238.166 mo457.536 238.166 li457.536 227.252 li468.733 227.252 li468.733 238.166 licpf238.333 250.186 mo227.136 250.186 li227.136 239.271 li238.333 239.271 li238.333 250.186 licpf252.731 250.186 mo241.535 250.186 li241.535 239.271 li252.731 239.271 li252.731 250.186 licpf267.131 250.186 mo255.935 250.186 li255.935 239.271 li267.131 239.271 li267.131 250.186 licpf281.531 250.186 mo270.334 250.186 li270.334 239.271 li281.531 239.271 li281.531 250.186 licpf295.931 250.186 mo284.734 250.186 li284.734 239.271 li295.931 239.271 li295.931 250.186 licpf310.331 250.186 mo299.135 250.186 li299.135 239.271 li310.331 239.271 li310.331 250.186 licpf324.729 250.186 mo313.534 250.186 li313.534 239.271 li324.729 239.271 li324.729 250.186 licpf339.13 250.186 mo327.933 250.186 li327.933 239.271 li339.13 239.271 li339.13 250.186 licpf353.53 250.186 mo342.333 250.186 li342.333 239.271 li353.53 239.271 li353.53 250.186 licpf367.931 250.186 mo356.733 250.186 li356.733 239.271 li367.931 239.271 li367.931 250.186 licpf108.734 250.186 mo97.5371 250.186 li97.5371 239.271 li108.734 239.271 li108.734 250.186 licpf123.134 250.186 mo111.937 250.186 li111.937 239.271 li123.134 239.271 li123.134 250.186 licpf137.534 250.186 mo126.337 250.186 li126.337 239.271 li137.534 239.271 li137.534 250.186 licpf151.934 250.186 mo140.737 250.186 li140.737 239.271 li151.934 239.271 li151.934 250.186 licpf166.333 250.186 mo155.137 250.186 li155.137 239.271 li166.333 239.271 li166.333 250.186 licpf180.733 250.186 mo169.537 250.186 li169.537 239.271 li180.733 239.271 li180.733 250.186 licpf195.133 250.186 mo183.937 250.186 li183.937 239.271 li195.133 239.271 li195.133 250.186 licpf209.533 250.186 mo198.336 250.186 li198.336 239.271 li209.533 239.271 li209.533 250.186 licpf223.933 250.186 mo212.736 250.186 li212.736 239.271 li223.933 239.271 li223.933 250.186 licpf382.331 250.186 mo371.134 250.186 li371.134 239.271 li382.331 239.271 li382.331 250.186 licpf396.731 250.186 mo385.534 250.186 li385.534 239.271 li396.731 239.271 li396.731 250.186 licpf411.132 250.186 mo399.935 250.186 li399.935 239.271 li411.132 239.271 li411.132 250.186 licpf425.532 250.186 mo414.335 250.186 li414.335 239.271 li425.532 239.271 li425.532 250.186 licpf439.933 250.186 mo428.735 250.186 li428.735 239.271 li439.933 239.271 li439.933 250.186 licpf454.333 250.186 mo443.136 250.186 li443.136 239.271 li454.333 239.271 li454.333 250.186 licpf468.733 250.186 mo457.536 250.186 li457.536 239.271 li468.733 239.271 li468.733 250.186 licpf238.333 130.007 mo227.136 130.007 li227.136 119.066 li238.333 119.066 li238.333 130.007 licpf252.731 130.007 mo241.535 130.007 li241.535 119.066 li252.731 119.066 li252.731 130.007 licpf267.131 130.007 mo255.935 130.007 li255.935 119.066 li267.131 119.066 li267.131 130.007 licpf281.531 130.007 mo270.334 130.007 li270.334 119.066 li281.531 119.066 li281.531 130.007 licpf295.931 130.007 mo284.734 130.007 li284.734 119.066 li295.931 119.066 li295.931 130.007 licpf310.331 130.007 mo299.135 130.007 li299.135 119.066 li310.331 119.066 li310.331 130.007 licpf324.729 130.007 mo313.534 130.007 li313.534 119.066 li324.729 119.066 li324.729 130.007 licpf339.13 130.007 mo327.933 130.007 li327.933 119.066 li339.13 119.066 li339.13 130.007 licpf353.53 130.007 mo342.333 130.007 li342.333 119.066 li353.53 119.066 li353.53 130.007 licpf367.931 130.007 mo356.733 130.007 li356.733 119.066 li367.931 119.066 li367.931 130.007 licpf108.734 130.007 mo97.5371 130.007 li97.5371 119.066 li108.734 119.066 li108.734 130.007 licpf123.134 130.007 mo111.937 130.007 li111.937 119.066 li123.134 119.066 li123.134 130.007 licpf137.534 130.007 mo126.337 130.007 li126.337 119.066 li137.534 119.066 li137.534 130.007 licpf151.934 130.007 mo140.737 130.007 li140.737 119.066 li151.934 119.066 li151.934 130.007 licpf166.333 130.007 mo155.137 130.007 li155.137 119.066 li166.333 119.066 li166.333 130.007 licpf180.733 130.007 mo169.537 130.007 li169.537 119.066 li180.733 119.066 li180.733 130.007 licpf195.133 130.007 mo183.937 130.007 li183.937 119.066 li195.133 119.066 li195.133 130.007 licpf209.533 130.007 mo198.336 130.007 li198.336 119.066 li209.533 119.066 li209.533 130.007 licpf223.933 130.007 mo212.736 130.007 li212.736 119.066 li223.933 119.066 li223.933 130.007 licpf382.331 130.007 mo371.134 130.007 li371.134 119.066 li382.331 119.066 li382.331 130.007 licpf396.731 130.007 mo385.534 130.007 li385.534 119.066 li396.731 119.066 li396.731 130.007 licpf411.132 130.007 mo399.935 130.007 li399.935 119.066 li411.132 119.066 li411.132 130.007 licpf425.532 130.007 mo414.335 130.007 li414.335 119.066 li425.532 119.066 li425.532 130.007 licpf439.933 130.007 mo428.735 130.007 li428.735 119.066 li439.933 119.066 li439.933 130.007 licpf454.333 130.007 mo443.136 130.007 li443.136 119.066 li454.333 119.066 li454.333 130.007 licpf468.733 130.007 mo457.536 130.007 li457.536 119.066 li468.733 119.066 li468.733 130.007 licpf238.333 142.012 mo227.136 142.012 li227.136 131.098 li238.333 131.098 li238.333 142.012 licpf252.731 142.012 mo241.535 142.012 li241.535 131.098 li252.731 131.098 li252.731 142.012 licpf267.131 142.012 mo255.935 142.012 li255.935 131.098 li267.131 131.098 li267.131 142.012 licpf281.531 142.012 mo270.334 142.012 li270.334 131.098 li281.531 131.098 li281.531 142.012 licpf295.931 142.012 mo284.734 142.012 li284.734 131.098 li295.931 131.098 li295.931 142.012 licpf310.331 142.012 mo299.135 142.012 li299.135 131.098 li310.331 131.098 li310.331 142.012 licpf324.729 142.012 mo313.534 142.012 li313.534 131.098 li324.729 131.098 li324.729 142.012 licpf339.13 142.012 mo327.933 142.012 li327.933 131.098 li339.13 131.098 li339.13 142.012 licpf353.53 142.012 mo342.333 142.012 li342.333 131.098 li353.53 131.098 li353.53 142.012 licpf367.931 142.012 mo356.733 142.012 li356.733 131.098 li367.931 131.098 li367.931 142.012 licpf108.734 142.012 mo97.5371 142.012 li97.5371 131.098 li108.734 131.098 li108.734 142.012 licpf123.134 142.012 mo111.937 142.012 li111.937 131.098 li123.134 131.098 li123.134 142.012 licpf137.534 142.012 mo126.337 142.012 li126.337 131.098 li137.534 131.098 li137.534 142.012 licpf151.934 142.012 mo140.737 142.012 li140.737 131.098 li151.934 131.098 li151.934 142.012 licpf166.333 142.012 mo155.137 142.012 li155.137 131.098 li166.333 131.098 li166.333 142.012 licpf180.733 142.012 mo169.537 142.012 li169.537 131.098 li180.733 131.098 li180.733 142.012 licpf195.133 142.012 mo183.937 142.012 li183.937 131.098 li195.133 131.098 li195.133 142.012 licpf209.533 142.012 mo198.336 142.012 li198.336 131.098 li209.533 131.098 li209.533 142.012 licpf223.933 142.012 mo212.736 142.012 li212.736 131.098 li223.933 131.098 li223.933 142.012 licpf382.331 142.012 mo371.134 142.012 li371.134 131.098 li382.331 131.098 li382.331 142.012 licpf396.731 142.012 mo385.534 142.012 li385.534 131.098 li396.731 131.098 li396.731 142.012 licpf411.132 142.012 mo399.935 142.012 li399.935 131.098 li411.132 131.098 li411.132 142.012 licpf425.532 142.012 mo414.335 142.012 li414.335 131.098 li425.532 131.098 li425.532 142.012 licpf439.933 142.012 mo428.735 142.012 li428.735 131.098 li439.933 131.098 li439.933 142.012 licpf454.333 142.012 mo443.136 142.012 li443.136 131.098 li454.333 131.098 li454.333 142.012 licpf468.733 142.012 mo457.536 142.012 li457.536 131.098 li468.733 131.098 li468.733 142.012 licpf238.333 154.031 mo227.136 154.031 li227.136 143.117 li238.333 143.117 li238.333 154.031 licpf252.731 154.031 mo241.535 154.031 li241.535 143.117 li252.731 143.117 li252.731 154.031 licpf267.131 154.031 mo255.935 154.031 li255.935 143.117 li267.131 143.117 li267.131 154.031 licpf281.531 154.031 mo270.334 154.031 li270.334 143.117 li281.531 143.117 li281.531 154.031 licpf295.931 154.031 mo284.734 154.031 li284.734 143.117 li295.931 143.117 li295.931 154.031 licpf310.331 154.031 mo299.135 154.031 li299.135 143.117 li310.331 143.117 li310.331 154.031 licpf324.729 154.031 mo313.534 154.031 li313.534 143.117 li324.729 143.117 li324.729 154.031 licpf339.13 154.031 mo327.933 154.031 li327.933 143.117 li339.13 143.117 li339.13 154.031 licpf353.53 154.031 mo342.333 154.031 li342.333 143.117 li353.53 143.117 li353.53 154.031 licpf367.931 154.031 mo356.733 154.031 li356.733 143.117 li367.931 143.117 li367.931 154.031 licpf108.734 154.031 mo97.5371 154.031 li97.5371 143.117 li108.734 143.117 li108.734 154.031 licpf123.134 154.031 mo111.937 154.031 li111.937 143.117 li123.134 143.117 li123.134 154.031 licpf137.534 154.031 mo126.337 154.031 li126.337 143.117 li137.534 143.117 li137.534 154.031 licpf151.934 154.031 mo140.737 154.031 li140.737 143.117 li151.934 143.117 li151.934 154.031 licpf166.333 154.031 mo155.137 154.031 li155.137 143.117 li166.333 143.117 li166.333 154.031 licpf180.733 154.031 mo169.537 154.031 li169.537 143.117 li180.733 143.117 li180.733 154.031 licpf195.133 154.031 mo183.937 154.031 li183.937 143.117 li195.133 143.117 li195.133 154.031 licpf209.533 154.031 mo198.336 154.031 li198.336 143.117 li209.533 143.117 li209.533 154.031 licpf223.933 154.031 mo212.736 154.031 li212.736 143.117 li223.933 143.117 li223.933 154.031 licpf382.331 154.031 mo371.134 154.031 li371.134 143.117 li382.331 143.117 li382.331 154.031 licpf396.731 154.031 mo385.534 154.031 li385.534 143.117 li396.731 143.117 li396.731 154.031 licpf411.132 154.031 mo399.935 154.031 li399.935 143.117 li411.132 143.117 li411.132 154.031 licpf425.532 154.031 mo414.335 154.031 li414.335 143.117 li425.532 143.117 li425.532 154.031 licpf439.933 154.031 mo428.735 154.031 li428.735 143.117 li439.933 143.117 li439.933 154.031 licpf454.333 154.031 mo443.136 154.031 li443.136 143.117 li454.333 143.117 li454.333 154.031 licpf468.733 154.031 mo457.536 154.031 li457.536 143.117 li468.733 143.117 li468.733 154.031 licpf238.333 204.547 mo227.136 204.547 li227.136 188.758 li238.333 188.758 li238.333 204.547 licp1 /0 /CSD get_res sepcs0.1 sepf227.136 193.109 mo227.136 188.758 li238.333 188.758 li238.333 193.109 li1 /0 /CSD get_res sepcs1 sep@238.333 200.195 mo238.333 204.547 li227.136 204.547 li227.136 200.195 li@252.731 204.547 mo241.535 204.547 li241.535 188.758 li252.731 188.758 li252.731 204.547 licp1 /0 /CSD get_res sepcs0.1 sepf241.535 193.109 mo241.535 188.758 li252.731 188.758 li252.731 193.109 li252.731 200.195 li252.731 204.547 li241.535 204.547 li241.535 200.195 li1 /0 /CSD get_res sepcs1 sep@108.734 204.547 mo97.5371 204.547 li97.5371 188.758 li108.734 188.758 li108.734 204.547 licp0 0 0 0 cmykf108.734 200.195 mo108.734 204.547 li97.5371 204.547 li97.5371 200.195 li97.5371 193.109 li97.5371 188.758 li108.734 188.758 li108.734 193.109 li1 /0 /CSD get_res sepcs1 sep@123.134 204.547 mo111.937 204.547 li111.937 188.758 li123.134 188.758 li123.134 204.547 licp0 0 0 0 cmykf111.937 193.109 mo111.937 188.758 li123.134 188.758 li123.134 193.109 li1 /0 /CSD get_res sepcs1 sep@123.134 200.195 mo123.134 204.547 li111.937 204.547 li111.937 200.195 li@137.534 204.547 mo126.337 204.547 li126.337 188.758 li137.534 188.758 li137.534 204.547 licp0 0 0 0 cmykf126.337 193.109 mo126.337 188.758 li137.534 188.758 li137.534 193.109 li1 /0 /CSD get_res sepcs1 sep@137.534 200.195 mo137.534 204.547 li126.337 204.547 li126.337 200.195 li@151.934 204.547 mo140.737 204.547 li140.737 188.758 li151.934 188.758 li151.934 204.547 licp0 0 0 0 cmykf140.737 193.109 mo140.737 188.758 li151.934 188.758 li151.934 193.109 li1 /0 /CSD get_res sepcs1 sep@151.934 200.195 mo151.934 204.547 li140.737 204.547 li140.737 200.195 li@166.333 204.547 mo155.137 204.547 li155.137 188.758 li166.333 188.758 li166.333 204.547 licp0 0 0 0 cmykf155.137 193.109 mo155.137 188.758 li166.333 188.758 li166.333 193.109 li1 /0 /CSD get_res sepcs1 sep@166.333 200.195 mo166.333 204.547 li155.137 204.547 li155.137 200.195 li@180.733 204.547 mo169.537 204.547 li169.537 188.758 li180.733 188.758 li180.733 204.547 licp0 0 0 0 cmykf169.537 193.109 mo169.537 188.758 li180.733 188.758 li180.733 193.109 li1 /0 /CSD get_res sepcs1 sep@180.733 200.195 mo180.733 204.547 li169.537 204.547 li169.537 200.195 li@195.133 204.547 mo183.937 204.547 li183.937 188.758 li195.133 188.758 li195.133 204.547 licp0 0 0 0 cmykf183.937 193.109 mo183.937 188.758 li195.133 188.758 li195.133 193.109 li1 /0 /CSD get_res sepcs1 sep@195.133 200.195 mo195.133 204.547 li183.937 204.547 li183.937 200.195 li@209.533 204.547 mo198.336 204.547 li198.336 188.758 li209.533 188.758 li209.533 204.547 licp0 0 0 0 cmykf198.336 193.109 mo198.336 188.758 li209.533 188.758 li209.533 193.109 li1 /0 /CSD get_res sepcs1 sep@209.533 200.195 mo209.533 204.547 li198.336 204.547 li198.336 200.195 li@223.933 204.547 mo212.736 204.547 li212.736 188.758 li223.933 188.758 li223.933 204.547 licp1 /0 /CSD get_res sepcs0.1 sepf212.736 193.109 mo212.736 188.758 li223.933 188.758 li223.933 193.109 li1 /0 /CSD get_res sepcs1 sep@223.933 200.195 mo223.933 204.547 li212.736 204.547 li212.736 200.195 li@238.333 180.509 mo227.136 180.509 li227.136 164.72 li238.333 164.72 li238.333 180.509 licp0 0 0 0 cmykf227.136 169.071 mo227.136 164.72 li238.333 164.72 li238.333 169.071 li1 /0 /CSD get_res sepcs1 sep@238.333 176.157 mo238.333 180.509 li227.136 180.509 li227.136 176.157 li@252.731 180.509 mo241.535 180.509 li241.535 164.72 li252.731 164.72 li252.731 180.509 licp0 0 0 0 cmykf241.535 169.071 mo241.535 164.72 li252.731 164.72 li252.731 169.071 li1 /0 /CSD get_res sepcs1 sep@252.731 176.157 mo252.731 180.509 li241.535 180.509 li241.535 176.157 li@267.131 180.509 mo255.935 180.509 li255.935 164.72 li267.131 164.72 li267.131 180.509 licp0 0 0 0 cmykf255.935 169.071 mo255.935 164.72 li267.131 164.72 li267.131 169.071 li1 /0 /CSD get_res sepcs1 sep@267.131 176.157 mo267.131 180.509 li255.935 180.509 li255.935 176.157 li@281.531 180.509 mo270.334 180.509 li270.334 164.72 li281.531 164.72 li281.531 180.509 licp0 0 0 0 cmykf270.334 169.071 mo270.334 164.72 li281.531 164.72 li281.531 169.071 li1 /0 /CSD get_res sepcs1 sep@281.531 176.157 mo281.531 180.509 li270.334 180.509 li270.334 176.157 li@295.931 180.509 mo284.734 180.509 li284.734 164.72 li295.931 164.72 li295.931 180.509 licp0 0 0 0 cmykf284.734 169.071 mo284.734 164.72 li295.931 164.72 li295.931 169.071 li1 /0 /CSD get_res sepcs1 sep@295.931 176.157 mo295.931 180.509 li284.734 180.509 li284.734 176.157 li@310.331 180.509 mo299.135 180.509 li299.135 164.72 li310.331 164.72 li310.331 180.509 licp0 0 0 0 cmykf299.135 169.071 mo299.135 164.72 li310.331 164.72 li310.331 169.071 li1 /0 /CSD get_res sepcs1 sep@310.331 176.157 mo310.331 180.509 li299.135 180.509 li299.135 176.157 li@324.729 180.509 mo313.534 180.509 li313.534 164.72 li324.729 164.72 li324.729 180.509 licp0 0 0 0 cmykf313.534 169.071 mo313.534 164.72 li324.729 164.72 li324.729 169.071 li1 /0 /CSD get_res sepcs1 sep@324.729 176.157 mo324.729 180.509 li313.534 180.509 li313.534 176.157 li@339.13 180.509 mo327.933 180.509 li327.933 164.72 li339.13 164.72 li339.13 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf327.933 169.071 mo327.933 164.72 li339.13 164.72 li339.13 169.071 li1 /0 /CSD get_res sepcs1 sep@339.13 176.157 mo339.13 180.509 li327.933 180.509 li327.933 176.157 li@353.53 180.509 mo342.333 180.509 li342.333 164.72 li353.53 164.72 li353.53 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf342.333 169.071 mo342.333 164.72 li353.53 164.72 li353.53 169.071 li1 /0 /CSD get_res sepcs1 sep@353.53 176.157 mo353.53 180.509 li342.333 180.509 li342.333 176.157 li@367.931 180.509 mo356.733 180.509 li356.733 164.72 li367.931 164.72 li367.931 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf356.733 169.071 mo356.733 164.72 li367.931 164.72 li367.931 169.071 li1 /0 /CSD get_res sepcs1 sep@367.931 176.157 mo367.931 180.509 li356.733 180.509 li356.733 176.157 li@108.734 180.509 mo97.5371 180.509 li97.5371 164.72 li108.734 164.72 li108.734 180.509 licp0 0 0 0 cmykf108.734 176.157 mo108.734 180.509 li97.5371 180.509 li97.5371 176.157 li97.5371 169.071 li97.5371 164.72 li108.734 164.72 li108.734 169.071 li1 /0 /CSD get_res sepcs1 sep@123.134 180.509 mo111.937 180.509 li111.937 164.72 li123.134 164.72 li123.134 180.509 licp0 0 0 0 cmykf111.937 169.071 mo111.937 164.72 li123.134 164.72 li123.134 169.071 li1 /0 /CSD get_res sepcs1 sep@123.134 176.157 mo123.134 180.509 li111.937 180.509 li111.937 176.157 li@137.534 180.509 mo126.337 180.509 li126.337 164.72 li137.534 164.72 li137.534 180.509 licp0 0 0 0 cmykf126.337 169.071 mo126.337 164.72 li137.534 164.72 li137.534 169.071 li1 /0 /CSD get_res sepcs1 sep@137.534 176.157 mo137.534 180.509 li126.337 180.509 li126.337 176.157 li@151.934 180.509 mo140.737 180.509 li140.737 164.72 li151.934 164.72 li151.934 180.509 licp0 0 0 0 cmykf140.737 169.071 mo140.737 164.72 li151.934 164.72 li151.934 169.071 li1 /0 /CSD get_res sepcs1 sep@151.934 176.157 mo151.934 180.509 li140.737 180.509 li140.737 176.157 li@166.333 180.509 mo155.137 180.509 li155.137 164.72 li166.333 164.72 li166.333 180.509 licp0 0 0 0 cmykf155.137 169.071 mo155.137 164.72 li166.333 164.72 li166.333 169.071 li1 /0 /CSD get_res sepcs1 sep@166.333 176.157 mo166.333 180.509 li155.137 180.509 li155.137 176.157 li@180.733 180.509 mo169.537 180.509 li169.537 164.72 li180.733 164.72 li180.733 180.509 licp0 0 0 0 cmykf169.537 169.071 mo169.537 164.72 li180.733 164.72 li180.733 169.071 li1 /0 /CSD get_res sepcs1 sep@180.733 176.157 mo180.733 180.509 li169.537 180.509 li169.537 176.157 li@195.133 180.509 mo183.937 180.509 li183.937 164.72 li195.133 164.72 li195.133 180.509 licp0 0 0 0 cmykf183.937 169.071 mo183.937 164.72 li195.133 164.72 li195.133 169.071 li1 /0 /CSD get_res sepcs1 sep@195.133 176.157 mo195.133 180.509 li183.937 180.509 li183.937 176.157 li@209.533 180.509 mo198.336 180.509 li198.336 164.72 li209.533 164.72 li209.533 180.509 licp0 0 0 0 cmykf198.336 169.071 mo198.336 164.72 li209.533 164.72 li209.533 169.071 li1 /0 /CSD get_res sepcs1 sep@209.533 176.157 mo209.533 180.509 li198.336 180.509 li198.336 176.157 li@223.933 180.509 mo212.736 180.509 li212.736 164.72 li223.933 164.72 li223.933 180.509 licp0 0 0 0 cmykf212.736 169.071 mo212.736 164.72 li223.933 164.72 li223.933 169.071 li1 /0 /CSD get_res sepcs1 sep@223.933 176.157 mo223.933 180.509 li212.736 180.509 li212.736 176.157 li@382.331 180.509 mo371.134 180.509 li371.134 164.72 li382.331 164.72 li382.331 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf371.134 169.071 mo371.134 164.72 li382.331 164.72 li382.331 169.071 li1 /0 /CSD get_res sepcs1 sep@382.331 176.157 mo382.331 180.509 li371.134 180.509 li371.134 176.157 li@396.731 180.509 mo385.534 180.509 li385.534 164.72 li396.731 164.72 li396.731 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf385.534 169.071 mo385.534 164.72 li396.731 164.72 li396.731 169.071 li1 /0 /CSD get_res sepcs1 sep@396.731 176.157 mo396.731 180.509 li385.534 180.509 li385.534 176.157 li@411.132 180.509 mo399.935 180.509 li399.935 164.72 li411.132 164.72 li411.132 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf399.935 169.071 mo399.935 164.72 li411.132 164.72 li411.132 169.071 li1 /0 /CSD get_res sepcs1 sep@411.132 176.157 mo411.132 180.509 li399.935 180.509 li399.935 176.157 li@425.532 180.509 mo414.335 180.509 li414.335 164.72 li425.532 164.72 li425.532 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf414.335 169.071 mo414.335 164.72 li425.532 164.72 li425.532 169.071 li1 /0 /CSD get_res sepcs1 sep@425.532 176.157 mo425.532 180.509 li414.335 180.509 li414.335 176.157 li@439.933 180.509 mo428.735 180.509 li428.735 164.72 li439.933 164.72 li439.933 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf428.735 169.071 mo428.735 164.72 li439.933 164.72 li439.933 169.071 li1 /0 /CSD get_res sepcs1 sep@439.933 176.157 mo439.933 180.509 li428.735 180.509 li428.735 176.157 li@454.333 180.509 mo443.136 180.509 li443.136 164.72 li454.333 164.72 li454.333 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf443.136 169.071 mo443.136 164.72 li454.333 164.72 li454.333 169.071 li1 /0 /CSD get_res sepcs1 sep@454.333 176.157 mo454.333 180.509 li443.136 180.509 li443.136 176.157 li@468.733 180.509 mo457.536 180.509 li457.536 164.72 li468.733 164.72 li468.733 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf457.536 169.071 mo457.536 164.72 li468.733 164.72 li468.733 169.071 li1 /0 /CSD get_res sepcs1 sep@468.733 176.157 mo468.733 180.509 li457.536 180.509 li457.536 176.157 li@483.134 180.509 mo471.937 180.509 li471.937 164.72 li483.134 164.72 li483.134 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf471.937 169.071 mo471.937 164.72 li483.134 164.72 li483.134 169.071 li1 /0 /CSD get_res sepcs1 sep@483.134 176.157 mo483.134 180.509 li471.937 180.509 li471.937 176.157 li@497.534 180.509 mo486.337 180.509 li486.337 164.72 li497.534 164.72 li497.534 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf486.337 169.071 mo486.337 164.72 li497.534 164.72 li497.534 169.071 li1 /0 /CSD get_res sepcs1 sep@497.534 176.157 mo497.534 180.509 li486.337 180.509 li486.337 176.157 li@511.935 180.509 mo500.737 180.509 li500.737 164.72 li511.935 164.72 li511.935 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf500.737 169.071 mo500.737 164.72 li511.935 164.72 li511.935 169.071 li1 /0 /CSD get_res sepcs1 sep@511.935 176.157 mo511.935 180.509 li500.737 180.509 li500.737 176.157 li@526.335 180.509 mo515.138 180.509 li515.138 164.72 li526.335 164.72 li526.335 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf515.138 169.071 mo515.138 164.72 li526.335 164.72 li526.335 169.071 li1 /0 /CSD get_res sepcs1 sep@526.335 176.157 mo526.335 180.509 li515.138 180.509 li515.138 176.157 li@540.735 180.509 mo529.538 180.509 li529.538 164.72 li540.735 164.72 li540.735 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf529.538 169.071 mo529.538 164.72 li540.735 164.72 li540.735 169.071 li1 /0 /CSD get_res sepcs1 sep@540.735 176.157 mo540.735 180.509 li529.538 180.509 li529.538 176.157 li@555.136 180.509 mo543.938 180.509 li543.938 164.72 li555.136 164.72 li555.136 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf543.938 169.071 mo543.938 164.72 li555.136 164.72 li555.136 169.071 li1 /0 /CSD get_res sepcs1 sep@555.136 176.157 mo555.136 180.509 li543.938 180.509 li543.938 176.157 li@238.333 108.397 mo227.136 108.397 li227.136 92.6084 li238.333 92.6084 li238.333 108.397 licp0 0 0 0 cmykf227.136 96.96 mo227.136 92.6084 li238.333 92.6084 li238.333 96.96 li1 /0 /CSD get_res sepcs1 sep@238.333 104.045 mo238.333 108.397 li227.136 108.397 li227.136 104.045 li@252.731 108.397 mo241.535 108.397 li241.535 92.6084 li252.731 92.6084 li252.731 108.397 licp0 0 0 0 cmykf241.535 96.96 mo241.535 92.6084 li252.731 92.6084 li252.731 96.96 li1 /0 /CSD get_res sepcs1 sep@252.731 104.045 mo252.731 108.397 li241.535 108.397 li241.535 104.045 li@267.131 108.397 mo255.935 108.397 li255.935 92.6084 li267.131 92.6084 li267.131 108.397 licp0 0 0 0 cmykf255.935 96.96 mo255.935 92.6084 li267.131 92.6084 li267.131 96.96 li1 /0 /CSD get_res sepcs1 sep@267.131 104.045 mo267.131 108.397 li255.935 108.397 li255.935 104.045 li@281.531 108.397 mo270.334 108.397 li270.334 92.6084 li281.531 92.6084 li281.531 108.397 licp0 0 0 0 cmykf270.334 96.96 mo270.334 92.6084 li281.531 92.6084 li281.531 96.96 li1 /0 /CSD get_res sepcs1 sep@281.531 104.045 mo281.531 108.397 li270.334 108.397 li270.334 104.045 li@295.931 108.397 mo284.734 108.397 li284.734 92.6084 li295.931 92.6084 li295.931 108.397 licp0 0 0 0 cmykf284.734 96.96 mo284.734 92.6084 li295.931 92.6084 li295.931 96.96 li1 /0 /CSD get_res sepcs1 sep@295.931 104.045 mo295.931 108.397 li284.734 108.397 li284.734 104.045 li@310.331 108.397 mo299.135 108.397 li299.135 92.6084 li310.331 92.6084 li310.331 108.397 licp0 0 0 0 cmykf299.135 96.96 mo299.135 92.6084 li310.331 92.6084 li310.331 96.96 li1 /0 /CSD get_res sepcs1 sep@310.331 104.045 mo310.331 108.397 li299.135 108.397 li299.135 104.045 li@324.729 108.397 mo313.534 108.397 li313.534 92.6084 li324.729 92.6084 li324.729 108.397 licp0 0 0 0 cmykf313.534 96.96 mo313.534 92.6084 li324.729 92.6084 li324.729 96.96 li1 /0 /CSD get_res sepcs1 sep@324.729 104.045 mo324.729 108.397 li313.534 108.397 li313.534 104.045 li@339.13 108.397 mo327.933 108.397 li327.933 92.6084 li339.13 92.6084 li339.13 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf327.933 96.96 mo327.933 92.6084 li339.13 92.6084 li339.13 96.96 li1 /0 /CSD get_res sepcs1 sep@339.13 104.045 mo339.13 108.397 li327.933 108.397 li327.933 104.045 li@353.53 108.397 mo342.333 108.397 li342.333 92.6084 li353.53 92.6084 li353.53 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf342.333 96.96 mo342.333 92.6084 li353.53 92.6084 li353.53 96.96 li1 /0 /CSD get_res sepcs1 sep@353.53 104.045 mo353.53 108.397 li342.333 108.397 li342.333 104.045 li@367.931 108.397 mo356.733 108.397 li356.733 92.6084 li367.931 92.6084 li367.931 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf356.733 96.96 mo356.733 92.6084 li367.931 92.6084 li367.931 96.96 li1 /0 /CSD get_res sepcs1 sep@367.931 104.045 mo367.931 108.397 li356.733 108.397 li356.733 104.045 li@108.734 108.397 mo97.5371 108.397 li97.5371 92.6084 li108.734 92.6084 li108.734 108.397 licp0 0 0 0 cmykf108.734 104.045 mo108.734 108.397 li97.5371 108.397 li97.5371 104.045 li97.5371 96.96 li97.5371 92.6084 li108.734 92.6084 li108.734 96.96 li1 /0 /CSD get_res sepcs1 sep@123.134 108.397 mo111.937 108.397 li111.937 92.6084 li123.134 92.6084 li123.134 108.397 licp0 0 0 0 cmykf111.937 96.96 mo111.937 92.6084 li123.134 92.6084 li123.134 96.96 li1 /0 /CSD get_res sepcs1 sep@123.134 104.045 mo123.134 108.397 li111.937 108.397 li111.937 104.045 li@137.534 108.397 mo126.337 108.397 li126.337 92.6084 li137.534 92.6084 li137.534 108.397 licp0 0 0 0 cmykf126.337 96.96 mo126.337 92.6084 li137.534 92.6084 li137.534 96.96 li1 /0 /CSD get_res sepcs1 sep@137.534 104.045 mo137.534 108.397 li126.337 108.397 li126.337 104.045 li@151.934 108.397 mo140.737 108.397 li140.737 92.6084 li151.934 92.6084 li151.934 108.397 licp0 0 0 0 cmykf140.737 96.96 mo140.737 92.6084 li151.934 92.6084 li151.934 96.96 li1 /0 /CSD get_res sepcs1 sep@151.934 104.045 mo151.934 108.397 li140.737 108.397 li140.737 104.045 li@166.333 108.397 mo155.137 108.397 li155.137 92.6084 li166.333 92.6084 li166.333 108.397 licp0 0 0 0 cmykf155.137 96.96 mo155.137 92.6084 li166.333 92.6084 li166.333 96.96 li1 /0 /CSD get_res sepcs1 sep@166.333 104.045 mo166.333 108.397 li155.137 108.397 li155.137 104.045 li@180.733 108.397 mo169.537 108.397 li169.537 92.6084 li180.733 92.6084 li180.733 108.397 licp0 0 0 0 cmykf169.537 96.96 mo169.537 92.6084 li180.733 92.6084 li180.733 96.96 li1 /0 /CSD get_res sepcs1 sep@180.733 104.045 mo180.733 108.397 li169.537 108.397 li169.537 104.045 li@195.133 108.397 mo183.937 108.397 li183.937 92.6084 li195.133 92.6084 li195.133 108.397 licp0 0 0 0 cmykf183.937 96.96 mo183.937 92.6084 li195.133 92.6084 li195.133 96.96 li1 /0 /CSD get_res sepcs1 sep@195.133 104.045 mo195.133 108.397 li183.937 108.397 li183.937 104.045 li@209.533 108.397 mo198.336 108.397 li198.336 92.6084 li209.533 92.6084 li209.533 108.397 licp0 0 0 0 cmykf198.336 96.96 mo198.336 92.6084 li209.533 92.6084 li209.533 96.96 li1 /0 /CSD get_res sepcs1 sep@209.533 104.045 mo209.533 108.397 li198.336 108.397 li198.336 104.045 li@223.933 108.397 mo212.736 108.397 li212.736 92.6084 li223.933 92.6084 li223.933 108.397 licp0 0 0 0 cmykf212.736 96.96 mo212.736 92.6084 li223.933 92.6084 li223.933 96.96 li1 /0 /CSD get_res sepcs1 sep@223.933 104.045 mo223.933 108.397 li212.736 108.397 li212.736 104.045 li@382.331 108.397 mo371.134 108.397 li371.134 92.6084 li382.331 92.6084 li382.331 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf371.134 96.96 mo371.134 92.6084 li382.331 92.6084 li382.331 96.96 li1 /0 /CSD get_res sepcs1 sep@382.331 104.045 mo382.331 108.397 li371.134 108.397 li371.134 104.045 li@396.731 108.397 mo385.534 108.397 li385.534 92.6084 li396.731 92.6084 li396.731 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf385.534 96.96 mo385.534 92.6084 li396.731 92.6084 li396.731 96.96 li1 /0 /CSD get_res sepcs1 sep@396.731 104.045 mo396.731 108.397 li385.534 108.397 li385.534 104.045 li@411.132 108.397 mo399.935 108.397 li399.935 92.6084 li411.132 92.6084 li411.132 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf399.935 96.96 mo399.935 92.6084 li411.132 92.6084 li411.132 96.96 li1 /0 /CSD get_res sepcs1 sep@411.132 104.045 mo411.132 108.397 li399.935 108.397 li399.935 104.045 li@425.532 108.397 mo414.335 108.397 li414.335 92.6084 li425.532 92.6084 li425.532 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf414.335 96.96 mo414.335 92.6084 li425.532 92.6084 li425.532 96.96 li1 /0 /CSD get_res sepcs1 sep@425.532 104.045 mo425.532 108.397 li414.335 108.397 li414.335 104.045 li@439.933 108.397 mo428.735 108.397 li428.735 92.6084 li439.933 92.6084 li439.933 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf428.735 96.96 mo428.735 92.6084 li439.933 92.6084 li439.933 96.96 li1 /0 /CSD get_res sepcs1 sep@439.933 104.045 mo439.933 108.397 li428.735 108.397 li428.735 104.045 li@454.333 108.397 mo443.136 108.397 li443.136 92.6084 li454.333 92.6084 li454.333 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf443.136 96.96 mo443.136 92.6084 li454.333 92.6084 li454.333 96.96 li1 /0 /CSD get_res sepcs1 sep@454.333 104.045 mo454.333 108.397 li443.136 108.397 li443.136 104.045 li@468.733 108.397 mo457.536 108.397 li457.536 92.6084 li468.733 92.6084 li468.733 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf457.536 96.96 mo457.536 92.6084 li468.733 92.6084 li468.733 96.96 li1 /0 /CSD get_res sepcs1 sep@468.733 104.045 mo468.733 108.397 li457.536 108.397 li457.536 104.045 li@483.134 108.397 mo471.937 108.397 li471.937 92.6084 li483.134 92.6084 li483.134 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf471.937 96.96 mo471.937 92.6084 li483.134 92.6084 li483.134 96.96 li1 /0 /CSD get_res sepcs1 sep@483.134 104.045 mo483.134 108.397 li471.937 108.397 li471.937 104.045 li@497.534 108.397 mo486.337 108.397 li486.337 92.6084 li497.534 92.6084 li497.534 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf486.337 96.96 mo486.337 92.6084 li497.534 92.6084 li497.534 96.96 li1 /0 /CSD get_res sepcs1 sep@497.534 104.045 mo497.534 108.397 li486.337 108.397 li486.337 104.045 li@511.935 108.397 mo500.737 108.397 li500.737 92.6084 li511.935 92.6084 li511.935 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf500.737 96.96 mo500.737 92.6084 li511.935 92.6084 li511.935 96.96 li1 /0 /CSD get_res sepcs1 sep@511.935 104.045 mo511.935 108.397 li500.737 108.397 li500.737 104.045 li@526.335 108.397 mo515.138 108.397 li515.138 92.6084 li526.335 92.6084 li526.335 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf515.138 96.96 mo515.138 92.6084 li526.335 92.6084 li526.335 96.96 li1 /0 /CSD get_res sepcs1 sep@526.335 104.045 mo526.335 108.397 li515.138 108.397 li515.138 104.045 li@540.735 108.397 mo529.538 108.397 li529.538 92.6084 li540.735 92.6084 li540.735 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf529.538 96.96 mo529.538 92.6084 li540.735 92.6084 li540.735 96.96 li1 /0 /CSD get_res sepcs1 sep@540.735 104.045 mo540.735 108.397 li529.538 108.397 li529.538 104.045 li@555.136 108.397 mo543.938 108.397 li543.938 92.6084 li555.136 92.6084 li555.136 108.397 licp1 /0 /CSD get_res sepcs0.1 sepf543.938 96.96 mo543.938 92.6084 li555.136 92.6084 li555.136 96.96 li1 /0 /CSD get_res sepcs1 sep@555.136 104.045 mo555.136 108.397 li543.938 108.397 li543.938 104.045 li@583.944 180.509 mo572.747 180.509 li572.747 164.72 li583.944 164.72 li583.944 180.509 licp1 /0 /CSD get_res sepcs0.1 sepf572.747 169.071 mo572.747 164.72 li583.944 164.72 li583.944 169.071 li583.944 176.157 li583.944 180.509 li572.747 180.509 li572.747 176.157 li1 /0 /CSD get_res sepcs1 sep@583.944 108.397 mo572.747 108.397 li572.747 92.6084 li583.944 92.6084 li583.944 108.397 licp0 0 0 0 cmykf572.747 96.96 mo572.747 92.6084 li583.944 92.6084 li583.944 96.96 li583.944 104.045 li583.944 108.397 li572.747 108.397 li572.747 104.045 li1 /0 /CSD get_res sepcs0.1 sepf572.747 96.96 mo572.747 92.6084 li583.944 92.6084 li583.944 96.96 li583.944 104.045 li583.944 108.397 li572.747 108.397 li572.747 104.045 li1 /0 /CSD get_res sepcs1 sep@22.3291 84.3584 mo11.1318 84.3584 li11.1318 68.5693 li22.3291 68.5693 li22.3291 84.3584 licp0 0 0 0 cmykf22.3291 80.0068 mo22.3291 84.3584 li11.1318 84.3584 li11.1318 80.0068 li11.1318 72.9209 li11.1318 68.5693 li22.3291 68.5693 li22.3291 72.9209 lif22.3291 80.0068 mo22.3291 84.3584 li11.1318 84.3584 li11.1318 80.0068 li11.1318 72.9209 li11.1318 68.5693 li22.3291 68.5693 li22.3291 72.9209 li1 /0 /CSD get_res sepcs1 sep@36.729 84.3584 mo25.5317 84.3584 li25.5317 68.5693 li36.729 68.5693 li36.729 84.3584 licp0 0 0 0 cmykf25.5317 72.9209 mo25.5317 68.5693 li36.729 68.5693 li36.729 72.9209 lif25.5317 72.9209 mo25.5317 68.5693 li36.729 68.5693 li36.729 72.9209 li1 /0 /CSD get_res sepcs1 sep@36.729 80.0068 mo36.729 84.3584 li25.5317 84.3584 li25.5317 80.0068 li0 0 0 0 cmykf36.729 80.0068 mo36.729 84.3584 li25.5317 84.3584 li25.5317 80.0068 li1 /0 /CSD get_res sepcs1 sep@51.1289 84.3584 mo39.9316 84.3584 li39.9316 68.5693 li51.1289 68.5693 li51.1289 84.3584 licp0 0 0 0 cmykf39.9316 72.9209 mo39.9316 68.5693 li51.1289 68.5693 li51.1289 72.9209 lif39.9316 72.9209 mo39.9316 68.5693 li51.1289 68.5693 li51.1289 72.9209 li1 /0 /CSD get_res sepcs1 sep@51.1289 80.0068 mo51.1289 84.3584 li39.9316 84.3584 li39.9316 80.0068 li0 0 0 0 cmykf51.1289 80.0068 mo51.1289 84.3584 li39.9316 84.3584 li39.9316 80.0068 li1 /0 /CSD get_res sepcs1 sep@65.5288 84.3584 mo54.3315 84.3584 li54.3315 68.5693 li65.5288 68.5693 li65.5288 84.3584 licp0 0 0 0 cmykf54.3315 72.9209 mo54.3315 68.5693 li65.5288 68.5693 li65.5288 72.9209 lif54.3315 72.9209 mo54.3315 68.5693 li65.5288 68.5693 li65.5288 72.9209 li1 /0 /CSD get_res sepcs1 sep@65.5288 80.0068 mo65.5288 84.3584 li54.3315 84.3584 li54.3315 80.0068 li0 0 0 0 cmykf65.5288 80.0068 mo65.5288 84.3584 li54.3315 84.3584 li54.3315 80.0068 li1 /0 /CSD get_res sepcs1 sep@79.9287 84.3584 mo68.7314 84.3584 li68.7314 68.5693 li79.9287 68.5693 li79.9287 84.3584 licp0 0 0 0 cmykf68.7314 72.9209 mo68.7314 68.5693 li79.9287 68.5693 li79.9287 72.9209 lif68.7314 72.9209 mo68.7314 68.5693 li79.9287 68.5693 li79.9287 72.9209 li1 /0 /CSD get_res sepcs1 sep@79.9287 80.0068 mo79.9287 84.3584 li68.7314 84.3584 li68.7314 80.0068 li0 0 0 0 cmykf79.9287 80.0068 mo79.9287 84.3584 li68.7314 84.3584 li68.7314 80.0068 li1 /0 /CSD get_res sepcs1 sep@94.3291 84.3584 mo83.1318 84.3584 li83.1318 68.5693 li94.3291 68.5693 li94.3291 84.3584 licp0 0 0 0 cmykf83.1318 72.9209 mo83.1318 68.5693 li94.3291 68.5693 li94.3291 72.9209 li94.3291 80.0068 li94.3291 84.3584 li83.1318 84.3584 li83.1318 80.0068 lif83.1318 72.9209 mo83.1318 68.5693 li94.3291 68.5693 li94.3291 72.9209 li94.3291 80.0068 li94.3291 84.3584 li83.1318 84.3584 li83.1318 80.0068 li1 /0 /CSD get_res sepcs1 sep@439.924 84.3584 mo428.727 84.3584 li428.727 68.5693 li439.924 68.5693 li439.924 84.3584 licp0 0 0 0 cmykf439.924 80.0068 mo439.924 84.3584 li428.727 84.3584 li428.727 80.0068 li428.727 72.9209 li428.727 68.5693 li439.924 68.5693 li439.924 72.9209 lif439.924 80.0068 mo439.924 84.3584 li428.727 84.3584 li428.727 80.0068 li428.727 72.9209 li428.727 68.5693 li439.924 68.5693 li439.924 72.9209 li1 /0 /CSD get_res sepcs1 sep@454.324 84.3584 mo443.127 84.3584 li443.127 68.5693 li454.324 68.5693 li454.324 84.3584 licp0 0 0 0 cmykf443.127 72.9209 mo443.127 68.5693 li454.324 68.5693 li454.324 72.9209 lif443.127 72.9209 mo443.127 68.5693 li454.324 68.5693 li454.324 72.9209 li1 /0 /CSD get_res sepcs1 sep@454.324 80.0068 mo454.324 84.3584 li443.127 84.3584 li443.127 80.0068 li0 0 0 0 cmykf454.324 80.0068 mo454.324 84.3584 li443.127 84.3584 li443.127 80.0068 li1 /0 /CSD get_res sepcs1 sep@468.725 84.3584 mo457.527 84.3584 li457.527 68.5693 li468.725 68.5693 li468.725 84.3584 licp0 0 0 0 cmykf457.527 72.9209 mo457.527 68.5693 li468.725 68.5693 li468.725 72.9209 lif457.527 72.9209 mo457.527 68.5693 li468.725 68.5693 li468.725 72.9209 li1 /0 /CSD get_res sepcs1 sep@468.725 80.0068 mo468.725 84.3584 li457.527 84.3584 li457.527 80.0068 li0 0 0 0 cmykf468.725 80.0068 mo468.725 84.3584 li457.527 84.3584 li457.527 80.0068 li1 /0 /CSD get_res sepcs1 sep@483.125 84.3584 mo471.928 84.3584 li471.928 68.5693 li483.125 68.5693 li483.125 84.3584 licp0 0 0 0 cmykf471.928 72.9209 mo471.928 68.5693 li483.125 68.5693 li483.125 72.9209 lif471.928 72.9209 mo471.928 68.5693 li483.125 68.5693 li483.125 72.9209 li1 /0 /CSD get_res sepcs1 sep@483.125 80.0068 mo483.125 84.3584 li471.928 84.3584 li471.928 80.0068 li0 0 0 0 cmykf483.125 80.0068 mo483.125 84.3584 li471.928 84.3584 li471.928 80.0068 li1 /0 /CSD get_res sepcs1 sep@497.525 84.3584 mo486.328 84.3584 li486.328 68.5693 li497.525 68.5693 li497.525 84.3584 licp0 0 0 0 cmykf486.328 72.9209 mo486.328 68.5693 li497.525 68.5693 li497.525 72.9209 lif486.328 72.9209 mo486.328 68.5693 li497.525 68.5693 li497.525 72.9209 li1 /0 /CSD get_res sepcs1 sep@497.525 80.0068 mo497.525 84.3584 li486.328 84.3584 li486.328 80.0068 li0 0 0 0 cmykf497.525 80.0068 mo497.525 84.3584 li486.328 84.3584 li486.328 80.0068 li1 /0 /CSD get_res sepcs1 sep@511.926 84.3584 mo500.729 84.3584 li500.729 68.5693 li511.926 68.5693 li511.926 84.3584 licp0 0 0 0 cmykf500.729 72.9209 mo500.729 68.5693 li511.926 68.5693 li511.926 72.9209 lif500.729 72.9209 mo500.729 68.5693 li511.926 68.5693 li511.926 72.9209 li1 /0 /CSD get_res sepcs1 sep@511.926 80.0068 mo511.926 84.3584 li500.729 84.3584 li500.729 80.0068 li0 0 0 0 cmykf511.926 80.0068 mo511.926 84.3584 li500.729 84.3584 li500.729 80.0068 li1 /0 /CSD get_res sepcs1 sep@526.326 84.3584 mo515.129 84.3584 li515.129 68.5693 li526.326 68.5693 li526.326 84.3584 licp0 0 0 0 cmykf515.129 72.9209 mo515.129 68.5693 li526.326 68.5693 li526.326 72.9209 lif515.129 72.9209 mo515.129 68.5693 li526.326 68.5693 li526.326 72.9209 li1 /0 /CSD get_res sepcs1 sep@526.326 80.0068 mo526.326 84.3584 li515.129 84.3584 li515.129 80.0068 li0 0 0 0 cmykf526.326 80.0068 mo526.326 84.3584 li515.129 84.3584 li515.129 80.0068 li1 /0 /CSD get_res sepcs1 sep@540.727 84.3584 mo529.529 84.3584 li529.529 68.5693 li540.727 68.5693 li540.727 84.3584 licp0 0 0 0 cmykf529.529 72.9209 mo529.529 68.5693 li540.727 68.5693 li540.727 72.9209 lif529.529 72.9209 mo529.529 68.5693 li540.727 68.5693 li540.727 72.9209 li1 /0 /CSD get_res sepcs1 sep@540.727 80.0068 mo540.727 84.3584 li529.529 84.3584 li529.529 80.0068 li0 0 0 0 cmykf540.727 80.0068 mo540.727 84.3584 li529.529 84.3584 li529.529 80.0068 li1 /0 /CSD get_res sepcs1 sep@569.527 84.3584 mo558.33 84.3584 li558.33 68.5693 li569.527 68.5693 li569.527 84.3584 licp0 0 0 0 cmykf558.33 72.9209 mo558.33 68.5693 li569.527 68.5693 li569.527 72.9209 lif558.33 72.9209 mo558.33 68.5693 li569.527 68.5693 li569.527 72.9209 li1 /0 /CSD get_res sepcs1 sep@569.527 80.0068 mo569.527 84.3584 li558.33 84.3584 li558.33 80.0068 li0 0 0 0 cmykf569.527 80.0068 mo569.527 84.3584 li558.33 84.3584 li558.33 80.0068 li1 /0 /CSD get_res sepcs1 sep@583.928 84.3584 mo572.73 84.3584 li572.73 68.5693 li583.928 68.5693 li583.928 84.3584 licp0 0 0 0 cmykf572.73 72.9209 mo572.73 68.5693 li583.928 68.5693 li583.928 72.9209 li583.928 80.0068 li583.928 84.3584 li572.73 84.3584 li572.73 80.0068 lif572.73 72.9209 mo572.73 68.5693 li583.928 68.5693 li583.928 72.9209 li583.928 80.0068 li583.928 84.3584 li572.73 84.3584 li572.73 80.0068 li1 /0 /CSD get_res sepcs1 sep@39.9346 84.5 mo36.7144 84.5 li36.7144 81.2969 li39.9346 81.2969 li39.9346 84.5 licpf68.7207 84.5 mo65.5005 84.5 li65.5005 81.2969 li68.7207 81.2969 li68.7207 84.5 licpf155.126 108.538 mo151.906 108.538 li151.906 105.334 li155.126 105.334 li155.126 108.538 licpf212.724 108.538 mo209.503 108.538 li209.503 105.334 li212.724 105.334 li212.724 108.538 licpf270.321 108.538 mo267.101 108.538 li267.101 105.334 li270.321 105.334 li270.321 108.538 licpf327.919 108.538 mo324.698 108.538 li324.698 105.334 li327.919 105.334 li327.919 108.538 licpf385.515 108.538 mo382.296 108.538 li382.296 105.334 li385.515 105.334 li385.515 108.538 licpf443.112 108.538 mo439.894 108.538 li439.894 105.334 li443.112 105.334 li443.112 108.538 licpf500.71 108.538 mo497.491 108.538 li497.491 105.334 li500.71 105.334 li500.71 108.538 licpf558.308 108.538 mo555.089 108.538 li555.089 105.334 li558.308 105.334 li558.308 108.538 licpf155.126 180.65 mo151.906 180.65 li151.906 177.447 li155.126 177.447 li155.126 180.65 licpf212.724 180.65 mo209.503 180.65 li209.503 177.447 li212.724 177.447 li212.724 180.65 licpf270.321 180.65 mo267.101 180.65 li267.101 177.447 li270.321 177.447 li270.321 180.65 licpf327.919 180.65 mo324.698 180.65 li324.698 177.447 li327.919 177.447 li327.919 180.65 licpf385.515 180.65 mo382.296 180.65 li382.296 177.447 li385.515 177.447 li385.515 180.65 licpf443.112 180.65 mo439.894 180.65 li439.894 177.447 li443.112 177.447 li443.112 180.65 licpf500.71 180.65 mo497.491 180.65 li497.491 177.447 li500.71 177.447 li500.71 180.65 licpf558.308 180.65 mo555.089 180.65 li555.089 177.447 li558.308 177.447 li558.308 180.65 licpf212.717 204.688 mo209.497 204.688 li209.497 201.485 li212.717 201.485 li212.717 204.688 licpf457.545 84.5 mo454.324 84.5 li454.324 81.2969 li457.545 81.2969 li457.545 84.5 licpf500.73 84.5 mo497.51 84.5 li497.51 81.2969 li500.73 81.2969 li500.73 84.5 licpf551.713 84.2119 mo551.713 86.042 550.76 86.7119 549.494 87.0098 cv549.48 87.0098 li549.48 86.2207 li550.045 86.0273 550.656 85.7598 550.73 84.5098 cv549.961 84.5176 li548.508 84.5176 li548.508 81.3145 li551.711 81.3145 li551.711 83.7129 li551.713 84.2119 licpf589.606 59.2715 mo5.66992 59.2715 li5.66992 44.3896 li589.606 44.3896 li589.606 59.2715 licpf314.725 6.33154 mo397.39 6.33154 li@0.283 lw397.389 6.18994 mo397.389 52 li@0.28 lw560.441 36.5479 mo574.841 36.5479 li@560.441 20.3906 mo574.841 20.3906 li@560.583 20.5322 mo560.583 25.8047 li@567.643 20.5322 mo567.643 25.8047 li@574.702 20.5322 mo574.702 25.8047 li@560.583 31.1621 mo560.583 36.4346 li@567.643 31.1621 mo567.643 36.4346 li@574.702 31.1621 mo574.702 36.4346 li@586.144 128.126 mo585.113 128.126 li585.113 122.286 li583.283 122.286 li583.283 121.346 li587.974 121.346 li587.974 122.286 li586.144 122.286 li586.144 128.126 licpf0.25 2.83398 mo0 2.83398 li0 0 li0.25 0 li0.25 2.83398 licpf595.275 2.83398 mo595.025 2.83398 li595.025 0 li595.275 0 li595.275 2.83398 licpf%ADOBeginSubsetFont: HelveticaNeue-Medium Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /HelveticaNeue-Medium def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1988, 1990, 1993 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle -0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 78 /N putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 103 /g putdup 104 /h putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 118 /v putdef/UniqueID 41365 def/FontBBox {-165 -221 1066 952} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-17 0 714 731 517 531 700 700] def/OtherBlues [264 273 373 382 -205 -191] def/FamilyBlues [-17 0 714 731 517 529] def/FamilyOtherBlues [273 280 380 387 -210 -198] def/StdHW [90] def/StdVW [114] def/StemSnapH [90] def/StemSnapV [114] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings17 dict dup begin/space <1C60D8A8C9B854D00D> |-/N <1C60D8A8C9B6079F3517E074AC7F02A1BD9EF22272889EB0BBCD89CE350BAE551347C333023E153F820EDA3C8052A9C1AFB602319A1444C6C468A308E243BD> |-/a <1C60D8A8C9B7EF32A1D98A7EA636FF9C69B4A61D98BB82A810921E00CA360F51C61C52A4583F7E5447FFE1BC87FC9C0A6A7DDB77366F32E4AC6CDC8136C28F8AE596CAF5E2CD59A3D8DE42560ECDFB2E676CBC54F154DF2178E43C06EFC5A45FABE6CDC10F8D3225746399213D99A97EE0C6AA56A15C2C7A11DE20F2FCCC60BDDF16C9E15FA4E5C0B693C4B8F7A64F336F1A4F54F84A726EA204565D2161358975F564283BB77CB98AC60C431F0E373749C0C9061B24CD13A62451632C58D5DF4EED7FA1FD5F> |-/c <1C60D8A8C9B7EF32A1D98A71C32EF22CA548BECF6AB714DCF79099931A227194E15CD2A1288F2D84EA5B3E968107347264CAF538B774F1F7FC88C7E46691E43D1935B5F3F9E8883628A430D62C198A7C3B6632C282D0DCF7> |-/d <1C60D8A8C9B7D8BE9CD446F8181D17BDE712C002E5C3D0A033665A18F50A0D96FAD83E8FDC364BFD41CFDC24A848D96B9F1CF280CB5C341308F3E0F0A47222971A7C14C6CF55479437F4E13202C1FAE725F80C3FE7206372EBEDF613542619FE2D20F30EE646050C457F93556A66234B111A8C2D5B> |-/e <1C60D8A8C9B7EF32A1D98A7E73F60CD218BEB5E09899EDB236D92B3D61B60C76004E9A1524DD9F033ED19329DFB17222616D2ECF397A3F17E8C71E983607CD721A6342B4E3F3096C625F6FDAB0B849F9A2F4A441EABA6E2B49BF7AE1C93CC25CCE> |-/g <1C60D8A8C9B7CA6426117310E94B1819E2B5FA2CF7F1F44DA2BC701576D4944343728649B5981E28C4C1AB7037CD4FB0E77F2998AAF39D36B1CCB7E0BA4DF62EB16F0E9F2142F8ECE5CF0D72912552A92FDA37DA6CD5598ACAB28591F2B354E8D07884A2880135C3EA191CE0FC70ED437A82FE42B94FACE508EFC3A8241403DE5B96DA9FB18F86E71D9A0EF2B0EAA273FE0C3D412A324E0049DE64A9142318D49A19CE96FF> |-/h <1C60D8A8C9B7FD84CD08F293A36A266D338B5526967B3E46D3FC6D0672088031743405BD29BC4ACEF22FD35931CB6C149D4BD23AA589F9A8170FB852A83D82D2962C2C76036F4B0C876EE26C49FF14012E> |-/m <1C60D8A8C9B69BE4859437A1831175F981C1E2A380F618C9FD482BEBFA08BC4971D8D07A2F5CFC560BFB0DA5F01FD33EFFD1FF8B23A41A07F14F86BFFB3A962681848CF58F3D52177BAAEAAB1A43F18720C2D45DA64A0D9D0A32B76B7FC7DB355E0F931042434893CFE85021178BA6D19B2E86BFA490D5B2943E1D4AD79E746768F234DDADF6> |-/n <1C60D8A8C9B7FD84CD08F293A358A24ED0AD89F7DC18F917CD2E71E791B742AFDCAC9EA4BD0A3490F6BD1D5A923792DC3A688B509993EB3E0080C3B84E0FC56CBFA2D12D2233AA21124DA451698F4BAC9AF67BF02D2365E788452CA388DB086B14E088E71DF829DA36> |-/o <1C60D8A8C9B7CA64A03530571D8F8D5910CBB6956082221DC40A38B810F1C6E0DD0F7EF112EFC9C285CD301752D055030F1FD73919BB6DEAB02350A8F805B842B230B3C8494AE79E3DDB447DC66CDB777DB807C35F> |-/p <1C60D8A8C9B7D8BE1A63B6555CA3095AC8D8954057C20C4EE63D5619206064BDC3D23C00C41BE27A0360912E166BE652FBA3714A1FCEE6FD17E4B262B1106138B7D7B6A10C98F8A8F62A4D7EC3B04298770EA61B3FCEBF3475F17F8707259B246399985D9DFA237264ABDF2F1B32B25FBAD2D7C92F> |-/r <1C60D8A8C9B80A3FD544F768E9CFAB56730D7C6F1C47545B3DEB92C1B32E7AA820F4B977B0907979DD13FDC8A6DCC603296899BD4F61C331A3FF0C0462BB7921B650CBDB5B16D60197882A1DEE0F6DF98107454CC46B> |-/s <1C60D8A8C9B7B4A1B5B73BAFA72EE4DCED114CA54775BB9C0302A4674C6B3E6D9DF51FF4D233D17F01DBF7078EA2C5053B0F468054356B2F38022E7795F05AC248656DFCBCC3D9A7C38925687847BD589A516D30C18306E3391214124A704B54F151512A5AA276E513B91864BBC2A18C6C9F39F7C2EC422B3AE49AB9824F04C92AF18DE589CC67F6EC212A7859> |-/t <1C60D8A8C9B81F2C4B9427A66BCBB3515432236C8B99C2785594A79EF0F8B7C57D382A90F79A9F5AE2865D19C2D4CACF638BCE5E79DE7AF45C03ECEC21A7A0A0A0AD1B9853DF1AD96C4340AF7F2585> |-/v <1C60D8A8C9B7B4A1684D51778B5AC2B04C6AC55C5EA41B728E06AEA04842ADD91DCD3D53367349710108D64A84DD6A5D3926> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium /HelveticaNeue-Medium findfont def/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space 45{/.notdef}repeat /N 18{/.notdef}repeat /a /.notdef /c /d /e /.notdef /g /h 4{/.notdef}repeat /m /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 123.445 mov-0.000320435 -0 97 (Naam e) wsh31.5044 123.445 mov0.000610352 -0 97 -0.000244141 -0 (n adr) awsh44.917 123.445 mov-0.00038147 -0 32 0.000244141 -0 (es o) awsh56.0093 123.445 mov0.000244141 -0 114 -0.000228882 -0 (pdra) awsh68.1499 123.445 mov0.000244141 -0 103 -0.000244141 -0 (chtge) awsh83.0376 123.445 mov0.000228882 -0 (ver) ash%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/quoteright <1C60D8A8C9B854D0FB9C025DC1BBECB357DEDDF129370EC35B4E1ACC9116B740086E91B15476BB4AC58C8D0EADE6249C77D7> |-/u <1C60D8A8C9B7FD84E670E2D50B589A094790C4EBD4C16BB17E11762FFE28959AC06911D8B65EA8C7EF35DEEDF6419B2AEBD36F34C71277940859E51759AFC948AEE5617506BD4BE9996DC738D1D42CD475C5F85254717A2B58E2859E2857867DD96031D7A762C70AC5> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 39 /quoteright putdup 117 /u putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space 6{/.notdef}repeat /quoteright 38{/.notdef}repeat /N 18{/.notdef}repeat /a /.notdef /c /d /e /.notdef /g /h 4{/.notdef}repeat /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.64 0 -0 -6 0 0 ]mfnt sfnt11.3384 129.445 mov0.000366211 -0 32 -0.000213623 -0 (Nom et adr) awsh40.2769 129.445 mov-0.000396729 -0 111 (esse donneur d'or) wsh87.4043 129.445 mov-0.100632 -0 114 (dre) wsh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B64EDF870894F44B406ABDCBE05E4D8CE7033ED447B55EDB35FBFE327ADC8F90F49DE80F292BCF28641C65F8B24CAC3782B6D4DE6FDC686CF290B9ED2702C5DCCFCF> |-/b <1C60D8A8C9B7D8BE9CD446F8181D17BDE712C05450E191014666B5C2EAB94428A53644A85C1D9DC14FA6B544A979DDE2334A22898529CB49A120485B6660B609F08EF5BC833474E4AF11DD7D00887104754CA688A37FDC3B84C8B81E48EE641F6B9BC78CDA4E000F2B99264CEBC8169AFF52BF88343BEFA076B5FDBDEFE0CEA3BCA8F4BDB28A5D33664B> |-/f <1C60D8A8C9B831A9D4E5ACEC40895097851785174CEEB7FA8EBFB738E5A0105A0DC37840691DB165418565CDAF548838280C17FE59DCBFDDF52BF0BE8F19165F1BF562E2DBEF2C22AD5DC1D041E923> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 65 /A putdup 98 /b putdup 102 /f putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space 6{/.notdef}repeat /quoteright 25{/.notdef}repeat /A 12{/.notdef}repeat /N 18{/.notdef}repeat /a /b /c /d /e /f /g /h 4{/.notdef}repeat /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [4.8 0 -0 -6 0 0 ]mfnt sfnt11.3384 135.445 mov-0.000213623 -0 109 (Name ) wsh25.6519 135.445 mov-0.000366211 -0 100 0.000228882 -0 (und A) awsh38.6313 135.445 mov-0.0856781 -0 114 (dress) wsh50.8193 135.445 mov0.000228882 -0 32 (e des Au) wsh70.207 135.445 mov0.000488281 -0 97 -0.000213623 -0 (ftragge) awsh86.0366 135.445 mov(bers) sh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/i <1C60D8A8C9B87B5D6E7F9C58AB6E11418EC6DE5D5453ADA01B00F1BA9368FB5F7400E65C98B0BD12EAC86E2172F82AD059243417CDF670F8B9FE2100CB69> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 105 /i putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space 6{/.notdef}repeat /quoteright 25{/.notdef}repeat /A 12{/.notdef}repeat /N 18{/.notdef}repeat /a /b /c /d /e /f /g /h /i 3{/.notdef}repeat /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 219.599 mov-0.000320435 -0 97 (Naam e) wsh31.5044 219.599 mov0.000610352 -0 97 -0.000244141 -0 (n adr) awsh44.917 219.599 mov-0.00038147 -0 32 0.000244141 -0 (es b) awsh56.1118 219.599 mov0.000579834 -0 115 -0.000244141 -0 (egunsti) awsh75.4336 219.599 mov-0.000366211 -0 100 (gde) wsh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eacute <1C60D8A8C9B7EF325767CE84D1C3657F38D9D0> |-/acute <1C60D8A8C9B87B5D3601CB1C7C68DAFB83C9E2B42584E9B658286C90A33D158D26> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 33 /eacute putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute 5{/.notdef}repeat /quoteright 25{/.notdef}repeat /A 12{/.notdef}repeat /N 18{/.notdef}repeat /a /b /c /d /e /f /g /h /i 3{/.notdef}repeat /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 225.599 mov-0.000213623 -0 111 (Nom et a) wsh35.1978 225.599 mov-0.101318 -0 114 -0.000228882 -0 (dre) awsh43.7544 225.599 mov-0.000473022 -0 101 0.000228882 -0 (sse ) awsh54.4248 225.599 mov0.000473022 -0 33 -0.000228882 -0 (b!n!) awsh67.5171 225.599 mov-0.000396729 -0 99 (ficiair) wsh81.6763 225.599 mov(e) sh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B635A4D71E4055E227366B693CD7189AC5F552E3974B54426D7C4DD597AE526D1A6F7096E36415980138457004804E6909798F8E1247C02987A9EBF8F95369F90A2CBF5ACB6193BA3F036C14F8320945D0D20C77590EEE69D98A73942CD01195D62E87FDB29A6310D98DC165335B97990DD18123783FA19CC901F648758A4B> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute 5{/.notdef}repeat /quoteright 25{/.notdef}repeat /A /B 11{/.notdef}repeat /N 18{/.notdef}repeat /a /b /c /d /e /f /g /h /i 3{/.notdef}repeat /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [4.92 0 -0 -6 0 0 ]mfnt sfnt11.3384 231.599 mov-0.000305176 -0 101 (Name un) wsh31.6577 231.599 mov0.00050354 -0 65 -0.000213623 -0 (d Adr) awsh43.9629 231.599 mov-0.00038147 -0 115 (esse d) wsh58.9136 231.599 mov-0.00038147 -0 115 (es Beg) wsh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/udieresis <1C60D8A8C9B7FD84E6502D66B9B2188086D96A8C> |-/dieresis <1C60D8A8C9B87B5D360A8974C4332EE9FDDEB986FF611BEBC29562F0BD6AA4F4C4AC821B651071A1EC78EE55A9EF5CAA9444FFDB6C35928E643FBD8D449FF0FC> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 34 /udieresis putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright 25{/.notdef}repeat /A /B 11{/.notdef}repeat /N 18{/.notdef}repeat /a /b /c /d /e /f /g /h /i 3{/.notdef}repeat /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [4.92 0 -0 -6 0 0 ]mfnt sfnt74.6865 231.599 mov0.000396729 -0 110 ("ns) wsh82.8882 231.599 mov-0.000289917 -0 105 (tigte) wsh93.0029 231.599 mov(n) sh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B854D0F8533E96E3BA8D26DF03413F8D2D7F4601600D34334730AA9BFA170C42796C6168D2F2B02C1D0C7FB296D912BC6B041FAA372867F07620A1FA5C6BC6AB> |-/parenright <1C60D8A8C9B854D0F8533E96E3BA8D26947D9D3FAF3C96A275C050ECD1CEE61BA2783B7A0ECD9743E8757879790CDB3C368CC0B229C337D40BDBE049CBA5BF9E84D0DFFD02> |-/I <1C60D8A8C9B854D0A3953AFD6AC0AE9B763499D1D3F8FA08846CE2B7C7D5B2CB> |-/R <1C60D8A8C9B635A4FCB3B92ECD0E77123557DEDC9543A828BD063D12D924B29D4D4B84619D47C32FF371407B67A5E44CC250A723767287D5225CCCBBEBC1B7404D0C7766284EC14C85477E5DD71C2475476E8F60D0D26A79178CE243EDF2603D5B534579B1CF63E8BB403F7C7B5BD8E36D3E4B995797666EB710FFC1A33544A8335B64701DE135F615DD983CC4C157F119CCDF4074CAD11D734BD04D93D34C3EEDBC81312536D5F09196> |-/k <1C60D8A8C9B78256AE62151DC8930ED8E7A5421778EDEA232E9753A370206A846B33033DD9ADEF00C4B0C348F36925087EB80A455D2105704ABAA47341440153AFE0B414D7> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 73 /I putdup 82 /R putdup 107 /k putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 23{/.notdef}repeat /A /B 6{/.notdef}repeat /I 4{/.notdef}repeat /N 3{/.notdef}repeat /R 14{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /.notdef /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 168.521 mov-0.000305176 -0 101 (Rek) wsh21.5811 168.521 mov-0.000488281 -0 110 0.000244141 -0 (eni) awsh29.3955 168.521 mov-0.00038147 -0 103 0.000244141 -0 (ng ) awsh37.6318 168.521 mov0.000473022 -0 101 -0.000228882 -0 (beguns) awsh57.165 168.521 mov-0.000244141 -0 105 (tigd) wsh67.2988 168.521 mov-0.000366211 -0 32 0.000244141 -0 (e \() awsh73.6372 168.521 mov-0.000274658 -0 65 (IBAN\)) wsh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B6079FEFAD07DE6495FE2647C7F7CE5FB94DD801671E3AC4472FFE6ED6198C1BEFDE4EDD10FD82931F8C8B1AC770CBE02007FFABBFF74CF1FE1BDB97C9CD86906D7456968B0195D8D1499E573C22C734C00EDB336EC850183C4EFC21338500A44B5DB7> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 67 /C putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 23{/.notdef}repeat /A /B /C 5{/.notdef}repeat /I 4{/.notdef}repeat /N 3{/.notdef}repeat /R 14{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /.notdef /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 174.521 mov-0.000213623 -0 111 (Comp) wsh27.2749 174.521 mov-0.000213623 -0 98 (te b!) wsh40.5786 174.521 mov0.000228882 -0 102 -0.000244141 -0 (n!fici) awsh54.7305 174.521 mov-0.00038147 -0 105 0.000244141 -0 (air) awsh61.1782 174.521 mov0.000244141 -0 40 -0.000244141 -0 (e \(IB) awsh73.1133 174.521 mov(AN\)) sh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/K <1C60D8A8C9B620B78FA331B0FB745D037EB0B4BAE9B3C96E68598AE66C77D2FD4EAB2A4DD1F29620A6CCA1179C56F990CF57D2499AC8B4B9C9DD1E6D67A9896FA4> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 75 /K putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 23{/.notdef}repeat /A /B /C 5{/.notdef}repeat /I /.notdef /K 2{/.notdef}repeat /N 3{/.notdef}repeat /R 14{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /.notdef /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 180.521 mov-0.000320435 -0 111 (Kon) wsh21.894 180.521 mov-0.000244141 -0 111 (to d) wsh32.2388 180.521 mov0.000473022 -0 115 -0.000244141 -0 (es B) awsh43.9634 180.521 mov-0.000244141 -0 (eg) ashFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt50.5122 180.521 mov0.000473022 -0 115 -0.000244141 -0 ("nsti) awsh63.2852 180.521 mov-0.000244141 -0 116 (gte) wsh71.7319 180.521 mov(n) shFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt75.0034 180.521 mov-0.000244141 -0 40 ( \(IBA) wsh87.5713 180.521 mov(N\)) shFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 192.562 mov-0.000259399 -0 67 (BIC b) wsh26.1177 192.562 mov0.000579834 -0 115 -0.000244141 -0 (egunsti) awsh45.4395 192.562 mov-0.000366211 -0 100 (gde) wshFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 198.562 mov-0.000259399 -0 67 (BIC b) wsh26.1177 198.562 mov0.000228882 -0 102 -0.000244141 -0 (!n!fici) awsh43.4385 198.562 mov-0.00038147 -0 105 0.000244141 -0 (air) awsh49.8862 198.562 mov(e) shFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 204.562 mov-0.000259399 -0 67 (BIC Be) wsh29.8169 204.562 mov(g) shFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt33.1968 204.562 mov(") shFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt36.4683 204.562 mov0.000473022 -0 115 -0.000244141 -0 (nsti) awsh45.9697 204.562 mov-0.000244141 -0 116 (gte) wsh54.4165 204.562 mov(n) shFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 96.4102 mov-0.000305176 -0 101 (Rek) wsh21.5811 96.4102 mov-0.000488281 -0 110 0.000244141 -0 (eni) awsh29.3955 96.4102 mov-0.00038147 -0 103 0.000244141 -0 (ng ) awsh37.6318 96.4102 mov-0.000366211 -0 112 (opd) wsh47.9766 96.4102 mov-0.000228882 -0 97 (rac) wsh56.3208 96.4102 mov0.000244141 -0 103 -0.000244141 -0 (htge) awsh68.0396 96.4102 mov-0.000549316 -0 32 0.000228882 -0 (ver \() awsh79.3428 96.4102 mov-0.000274658 -0 65 (IBAN\)) wshFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 102.41 mov-0.000213623 -0 111 (Comp) wsh27.2749 102.41 mov-0.000213623 -0 100 (te donne) wsh50.5015 102.41 mov0.000259399 -0 114 -0.000244141 -0 (ur d') awsh62.4307 102.41 mov-0.101685 -0 114 (ord) wsh71.1978 102.41 mov0.101791 -0 101 -0.101547 -0 (re ) awsh77.8564 102.41 mov-0.000244141 -0 73 (\(IBAN) wsh92.9551 102.41 mov(\)) shFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 108.41 mov-0.000320435 -0 111 (Kon) wsh21.894 108.41 mov-0.000244141 -0 111 (to d) wsh32.2388 108.41 mov0.000473022 -0 115 -0.000244141 -0 (es A) awsh43.7524 108.41 mov0.000228882 -0 102 -0.000244141 -0 (uftr) awsh52.7236 108.41 mov-0.00038147 -0 103 0.000244141 -0 (agge) awsh65.8218 108.41 mov0.000228882 -0 114 -0.000228882 -0 (bers) awsh77.438 108.41 mov-0.000244141 -0 40 ( \(IBA) wsh90.0059 108.41 mov(N\)) sh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B80A3FFA7E0D5AED5CF797D68E5D5305AFBF6465B8B2273B2ACF3C04D8AE> |-/D <1C60D8A8C9B6079F1E27E8CA871A3A9D691460937FBCC418DA07DE6F2A7001B1C53EB7C63D07F6BA3EEB844A53A52A62602FCC48992C0BAAB04072A7833D92840284DF7DCE8192AE5545A6FEC56A08C1> |-/G <1C60D8A8C9B6EA914CA163FA616D279E53880041FD6AA3792A1477E02EBEA022117017685F2947EA57A15AE03A86AB8C891540DF706AB7A5ADB3D3F9E532BA1E6FC4DB9AEC5BF25180092C1D877EB3682BFA774B4229A85B84DACB9255F00B2517D79A6589D2659B234173E8384376D701D08124D6C44F23A7A2440E280B401F> |-/l <1C60D8A8C9B87B5D6E7F9C595EEAD9CCDC0277CC4169E5ED87DDD9E1A639F6B0> |-/w <1C60D8A8C9B6FF86892F06BA0CEAA92EB05CEE2B80E201F420A55E331F0A6A95381722A215A2385E33711F3EE90689DFFC29D5BC27ED9AFCC1EDCF09BF85499B05BF04FF1950CF36> |-/x <1C60D8A8C9B78256AE628EAC8C31CCD4E903236E7D3D0E57357D844087EC675D64BF7DDFDB12F6AEA03C99004B7D8063A6558535441E9C1B68894433389F38BE7B6F9396> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 47 /slash putdup 68 /D putdup 71 /G putdup 108 /l putdup 119 /w putdup 120 /x putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 5{/.notdef}repeat /slash 17{/.notdef}repeat /A /B /C /D 2{/.notdef}repeat /G /.notdef /I /.notdef /K 2{/.notdef}repeat /N 3{/.notdef}repeat /R 14{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x 135{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 65.6768 mov-0.000289917 -0 101 (Gewen) wsh29.7085 65.6768 mov-0.000335693 -0 116 0.000228882 -0 (ste) awsh37.7339 65.6768 mov0.000213623 -0 101 ( uitvoerin) wsh62.021 65.6768 mov0.000244141 -0 117 (gsdatum i) wsh88.0981 65.6768 mov0.00062561 -0 101 -0.000244141 -0 (n de t) awsh103.088 65.6768 mov-0.00038147 -0 101 (oek) wsh112.698 65.6768 mov(omst / ) sh131.069 65.6768 mov-0.000320435 -0 97 (Date d) wsh148.487 65.6768 mov-0.000366211 -0 101 ('ex) wsh156.302 65.6768 mov-0.000488281 -0 99 0.000244141 -0 (!cu) awsh165.912 65.6768 mov-0.000244141 -0 105 (tion) wsh175.834 65.6768 mov-0.000274658 -0 117 ( souh) wsh190.3 65.6768 mov0.000244141 -0 116 -0.000244141 -0 (ait!e da) awsh211.315 65.6768 mov0.000473022 -0 115 -0.000244141 -0 (ns l) awsh220.503 65.6768 mov-0.000366211 -0 32 0.000244141 -0 (e f) awsh227.052 65.6768 mov-0.000244141 -0 (utu) ash235.494 65.6768 mov(r / ) sh242.675 65.6768 mov-0.000289917 -0 101 (Gew) wsh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Z <1C60D8A8C9B66B392CA70476D8AEAEE161A8826D7783C92B2305C0CADBC2D4C2BC40DE64C43E3E7C521A37912A3013860F917FD92B233B240674FAE53845416D69589637B4> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 90 /Z putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 5{/.notdef}repeat /slash 17{/.notdef}repeat /A /B /C /D 2{/.notdef}repeat /G /.notdef /I /.notdef /K 2{/.notdef}repeat /N 3{/.notdef}repeat /R 7{/.notdef}repeat /Z 6{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x 135{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt254.605 65.6768 mov0.000488281 -0 115 -0.000244141 -0 ("nsc) awsh267.276 65.6768 mov0.000640869 -0 101 -0.000244141 -0 (htes) awsh278.573 65.6768 mov-0.000213623 -0 65 ( Au) wsh287.231 65.6768 mov-0.000244141 -0 102 0.000244141 -0 (sf") awsh295.256 65.6768 mov0.000274658 -0 114 -0.000244141 -0 (hru) awsh303.806 65.6768 mov0.000610352 -0 115 -0.000244141 -0 (ngsda) awsh320.068 65.6768 mov-0.000640869 -0 117 0.000396729 -0 (tum) awsh330.197 65.6768 mov-0.000610352 -0 110 0.000366211 -0 ( in d) awsh341.495 65.6768 mov-0.000213623 -0 114 -0.000244141 -0 (er ) awsh348.254 65.6768 mov-0.000335693 -0 117 (Zuk) wsh358.177 65.6768 mov0.000732422 -0 102 -0.000244141 -0 (unft) awsh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B59F85B01BCAF1D584631147934B6242911B90D6FCF71F7A29155CA9F4C81331789FD110077FAB935D11137C3C80B5123FED2889EC054DEC4714B887880A9E6AA1992B32FD1D3B34F924AAEC6DB6F116775C65F16CB49A4CB08AB2A4> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 77 /M putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 5{/.notdef}repeat /slash 17{/.notdef}repeat /A /B /C /D 2{/.notdef}repeat /G /.notdef /I /.notdef /K /.notdef /M /N 3{/.notdef}repeat /R 7{/.notdef}repeat /Z 6{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x 135{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt428.464 65.6768 mov-0.000305176 -0 101 (Bed) wsh439.128 65.6768 mov0.000274658 -0 97 (rag ) wsh449.269 65.6768 mov0.000335693 -0 97 (/ Montan) wsh472.917 65.6768 mov-0.000213623 -0 32 (t / Bet) wsh489.07 65.6768 mov-0.000213623 -0 97 (rag) wsh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/H <1C60D8A8C9B6079F3517E07A1F02988D4DDCA7A8ECCBFBB533B8774CC75FA717E558701311A9E667640346D30776E9051942B668E9F465B727E5F9931A812A068EDC> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 72 /H putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 5{/.notdef}repeat /slash 17{/.notdef}repeat /A /B /C /D 2{/.notdef}repeat /G /H /I /.notdef /K /.notdef /M /N 3{/.notdef}repeat /R 7{/.notdef}repeat /Z 6{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x 135{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [6 0 -0 -6 0 0 ]mfnt sfnt263.104 9.1875 mov0.000305176 -0 107 (Handtekeni) wsh294.663 9.1875 mov(ng\(en\)) sh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/S <1C60D8A8C9B67DB5051CBE5070B2EC800CA551DE1422CA5E68BA1006CCF3E9DA0FD3ABA69E445391F5779ED69C0BB41E1EA10B8653C5DD36AA1F85AA39379C7D64CE158703A2A845FB58573EEB8AD7D234BE5E0F6E9E7C55261FAD49FE563B67C85ECA5D099AFABBBC1AA5F436AED21E8058A3C7C7EF56C056246155A070FD43D93EFAF0762747F4C30D0D11E9084EE746DEF437D3648A6B5A48072319E38A16> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 83 /S putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 5{/.notdef}repeat /slash 17{/.notdef}repeat /A /B /C /D 2{/.notdef}repeat /G /H /I /.notdef /K /.notdef /M /N 3{/.notdef}repeat /R /S 6{/.notdef}repeat /Z 6{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x 135{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [6 0 -0 -6 0 0 ]mfnt sfnt263.104 15.1875 mov-0.000396729 -0 105 0.000213623 -0 (Sign) awsh275.439 15.1875 mov-0.107117 -0 114 (ature\(s) wsh294.34 15.1875 mov(\)) sh%ADOBeginSubsetFont: HelveticaNeue-Medium AddGlyphs
%ADOt1write: (1.0.24)systemdict beginFBBNPO+HelveticaNeue-Medium dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/U <1C60D8A8C9B6079FEFAB69F92C9ACC615CDBD395ABD4938AF68AC68B5776B4B89AFD82607492749FDC9DF65F08C92BBF1C02C32FB108DC3408C8BA78085925109310DC2B0202CDE156DBF29C> |-systemdict /gcheck known {setglobal} if end {end} ifendFBBNPO+HelveticaNeue-Medium /Encoding getdup 85 /U putpop%ADOEndSubsetFont
/FBBNPO+HelveticaNeue-Medium*1 [32{/.notdef}repeat /space /eacute /udieresis 4{/.notdef}repeat /quoteright /parenleft /parenright 5{/.notdef}repeat /slash 17{/.notdef}repeat /A /B /C /D 2{/.notdef}repeat /G /H /I /.notdef /K /.notdef /M /N 3{/.notdef}repeat /R /S /.notdef /U 4{/.notdef}repeat /Z 6{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x 135{/.notdef}repeat] FBBNPO+HelveticaNeue-Medium nfntFBBNPO+HelveticaNeue-Medium*1  [6 0 -0 -6 0 0 ]mfnt sfnt263.104 21.1875 mov-0.000274658 -0 115 (Unterschr) wsh290.331 21.1875 mov(ift\(en\)) sh%ADOBeginSubsetFont: HelveticaNeue-Bold Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /HelveticaNeue-Bold def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1988, 1990, 1993 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def/Weight (Bold) def/ItalicAngle -0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 65 /A putdup 67 /C putdup 68 /D putdup 69 /E putdup 71 /G putdup 72 /H putdup 73 /I putdup 74 /J putdup 78 /N putdup 79 /O putdup 80 /P putdup 82 /R putdup 83 /S putdup 84 /T putdup 86 /V putdef/UniqueID 41353 def/FontBBox {-166 -218 1078 975} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-17 0 714 731 517 531 700 700] def/OtherBlues [264 273 375 384 -196 -182] def/FamilyBlues [-17 0 714 731 517 529] def/FamilyOtherBlues [273 280 380 387 -210 -198] def/StdHW [107] def/StdVW [142] def/StemSnapH [107 117] def/StemSnapV [142 157] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings16 dict dup begin/A <1C60D8A8C9B620B7A43CC51579C8D121C58BBE933C07AB94D996447A678F4949EA32ACEE213F8A4439C799E8BE68DF3C6CD527046F55ABAEC874FA31DFA22A9238967C> |-/C <1C60D8A8C9B6184A36046A485CC32551579D6D08B181C8223B6A468F99CE9ECB396E0A60E664886DD7FDFE4B7E8976D6FDDAF89D222084E6E7178536CDA218425BEE56E793A5046315BACBEDE5F7EEC9AF390DD5A823C1CFBAF894F213C2302DC1F8B273> |-/D <1C60D8A8C9B6184AC728F715EA440622B82B157180BDF47A05CECF52E82E6E719C86DD7D13A8D4CA32A136A32C83A1AB4458D91B048587C4F6F92701DA7E5CEC11315B4F37660B49286EC50DA8C0> |-/E <1C60D8A8C9B67DB5F4526A7E94FABE07028B57E65A9AF78EF96609CDB235DFD7B75910D70BC0B14BEA79534BD3B17C069550E4D1F4DA03EF7FB66E8D54DEA6> |-/G <1C60D8A8C9B6EA91968DE5AA117AB1A67F349296AE4C849796FB6469D044844B8501E917503B1B525E30272F800BCCD924D85508689347E094D9CF3789A2B4EC06F3B2E910191B8CC33702D359969916E1F49AEA25FA7C9CAB36861A5F29FFD5F23C64CD9460A7E06708675B4790CC15000A1E0E4E2D280CE2622E62E5F2B0FC> |-/H <1C60D8A8C9B6184AECC26C5F013D64FB9C2A65825780230B2BF53143C074BB70EA9EADD4EF52F7603C90E245AD948A1F8890532B5EFF4C47F135ED63CCE0F7681FEA> |-/I <1C60D8A8C9B845C8233CEACBA01AA3521650A1EAFE358A2C4AF7C59726DE306E> |-/J <1C60D8A8C9B7EF32A6B3F3793681A02C77519FF9C3107479374C44CEA12C70D3759BCF7530D18C7F3788B6159194E2DE182FF31B554C1B6C0ECDBA61685079BC0448C479E53E> |-/N <1C60D8A8C9B6184AECC26C51215199BB99023F3D7D4A172ED01B7B8B7B36300294556101613158F5EA09C4A48339F2AB4D70B72F9EB7B2E16B4ACD0E316EBA> |-/O <1C60D8A8C9B6FF8678D4C46F3D07688C99CF5474BF9659DE7E32C2B19039A9733D80CEE3177B145B818F9CD81AB56BE716E5A569EBE32C858846AAF0E9C800E42690323C49737AFC7BD13214D568DAEC6129A3D306F2CB68FA603D92D28C3891C08CD3C6F5E78B92> |-/P <1C60D8A8C9B64EDFA3F30AE4FCEDDC7CF99B0D740A9F584574459917E7D0631B355E53AFF3AFB824EAE9B47F216213DE90354F303C307A10B5FB37D09DFABE1CBE87A7A56C1334165D3650F7FC8EE5F138FA1CA0> |-/R <1C60D8A8C9B6079F3517E07A620C16A5BE4108A83EFC9C17EA8097E05C96E33980A3DE475F475E05D4CB6D236F5F496A0B0BA68736212EA856BBBBBAA0323ECC721ED1311C345F6FD8EE6DAC84685A500CC1BF8BAFF1E4713D0D03CB12BBF82B9E37915EE82FE46FE846AD53FF79E3303934647EC6B7E2A2C5A6D6247B381261AF9136CADFF78734> |-/S <1C60D8A8C9B67CE74CEE4AFD7E12E3DCC0B35C3C9B5DCF7DEED7AB92E30E48D46B442DFB12851F0928A343F92B2C544E76EAD732DEBABD6B848927D51266AC800469E7E87AF2F893C1C75A3F15CA4430FCBD6CC3DCAF2F75DD94CFD911D39796EC179AA7305BADE59CCCF89B18AE4244516FF2AD1454149428F7AC602AE8DFDD1E507589B3FA586E84FB35C1C55B4B9736811DB0> |-/T <1C60D8A8C9B7D8BE41A64DAA4F1C36A5BC537C07513FCF51433853C1AF3BA4DB1654B144F15BC7FC3B2AEB0BBD2E66> |-/V <1C60D8A8C9B66B39070D84FD139E013B04C4A72ADA231E86FF714AE86E3A485C1DFAC17E0955C121C593B86DBF52065DB2B5E9F4> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/DBBNPO+HelveticaNeue-Bold /HelveticaNeue-Bold findfont def/DBBNPO+HelveticaNeue-Bold*1 [65{/.notdef}repeat /A /.notdef /C /D /E /.notdef /G /H /I /J 3{/.notdef}repeat /N /O /P /.notdef /R /S /T /.notdef /V 169{/.notdef}repeat] DBBNPO+HelveticaNeue-Bold nfntDBBNPO+HelveticaNeue-Bold*1  [10 0 -0 -10 0 0 ]mfnt sfnt402.926 14.1982 mov0.000366211 -0 69 -0.000213623 -0 (OVERSC) awsh444.605 14.1982 mov0.000274658 -0 73 (HRIJVINGSO) wsh506.265 14.1982 mov0.000366211 -0 67 (PDRACHT) wsh%ADOBeginSubsetFont: HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDBBNPO+HelveticaNeue-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/M <1C60D8A8C9B58D099743A044C25BCB009F954079D06977A10F9CB9BD761EC0E5547BA094A73350FF542E475232FFF88C654AFFDDCF82460922936B0EACAB0789D264D1AA6BAA43B954C5865B217F23AE8609DCA77558CD0E50FD3F99EB339B0A897E> |-systemdict /gcheck known {setglobal} if end {end} ifendDBBNPO+HelveticaNeue-Bold /Encoding getdup 32 /space putdup 77 /M putpop%ADOEndSubsetFont
/DBBNPO+HelveticaNeue-Bold*1 [32{/.notdef}repeat /space 32{/.notdef}repeat /A /.notdef /C /D /E /.notdef /G /H /I /J 2{/.notdef}repeat /M /N /O /P /.notdef /R /S /T /.notdef /V 169{/.notdef}repeat] DBBNPO+HelveticaNeue-Bold nfntDBBNPO+HelveticaNeue-Bold*1  [10 0 -0 -10 0 0 ]mfnt sfnt447.765 24.1982 mov0.000488281 -0 68 -0.000213623 -0 (ORDRE) awsh483.875 24.1982 mov0.000396729 -0 68 -0.000213623 -0 ( DE) awsh500.544 24.1982 mov0.000610352 -0 73 -0.000213623 -0 ( VIRE) awsh526.274 24.1982 mov(MENT) sh1 /0 /CSD get_res sepcs1 sep%ADOBeginSubsetFont: HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDBBNPO+HelveticaNeue-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Udieresis <1C60D8A8C9B6184AC7286A9564B69E5AB32396B9> |-/B <1C60D8A8C9B635A4D71865DBDA3FC777F96778AD46859EFEF1229FD71B1D16366CC373FE0BCA561A027947C2E690A01E3032A2239348EBAB7F9D30CAD6C4C1B9752A5577C53B60E37B6771CAFBF184FC88B9F0982071E8AFC9A2CAF4CF51E5AD78F75026185BAF7140072C59E916F0AD283A8A2EFDD5733A6DA377F4AB00113E0A4DC3BA6805AD53> |-/F <1C60D8A8C9B7CA647DE1C48F9C4687B08955F8336BCF8715F08A41E1783459E98373110F13BFFA77A936A46DA97E534097ADD083017D12EC> |-/U <1C60D8A8C9B6184A36046A485DA901D1E722F51F3C90B732E50A1E25B65736DB5183353A5677307ED66B6E8C525AA3DAC816F8F259F9C3E7C9C16C89EC87761EA2527D8B468B049CC0A170> |-/W <1C60D8A8C9B5D6EF151AEEAFF39173A33992E189C68C471D9950A53D4E59D88E4166854BB127208EB3F104A7E39697CEA6BEC3C42933B3D5D9EAA179B9B07352A976FFB6E1EFBA5319F0045B34BE030DCD61E740BE946139B521568B51> |-/dieresis <1C60D8A8C9B869C16DAE47C8EAA91392D8A3A9FC6C94FBD291D1C09EAD15E338D8144E32AF262ECEB296F458EBF37A8EEB28F8BF44F107D3D5F434CAE695B84A> |-systemdict /gcheck known {setglobal} if end {end} ifendDBBNPO+HelveticaNeue-Bold /Encoding getdup 33 /Udieresis putdup 66 /B putdup 70 /F putdup 85 /U putdup 87 /W putpop%ADOEndSubsetFont
/DBBNPO+HelveticaNeue-Bold*1 [32{/.notdef}repeat /space /Udieresis 31{/.notdef}repeat /A /B /C /D /E /F /G /H /I /J 2{/.notdef}repeat /M /N /O /P /.notdef /R /S /T /U /V /W 168{/.notdef}repeat] DBBNPO+HelveticaNeue-Bold nfntDBBNPO+HelveticaNeue-Bold*1  [10 0 -0 -10 0 0 ]mfnt sfnt424.917 34.1982 mov0.000274658 -0 66 (!BER) wsh453.125 34.1982 mov0.000335693 -0 73 (WEISUN) wsh493.306 34.1982 mov(GSAUFTRAG) sh0 0 0 0 cmyk%ADOBeginSubsetFont: HelveticaNeue-MediumItalic Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /HelveticaNeue-MediumItalic def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1988, 1990, 1993 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def/Weight (Medium) def/ItalicAngle -12 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 39 /quoteright putdup 40 /parenleft putdup 41 /parenright putdup 44 /comma putdup 65 /A putdup 66 /B putdup 67 /C putdup 68 /D putdup 69 /E putdup 70 /F putdup 71 /G putdup 72 /H putdup 74 /J putdup 76 /L putdup 77 /M putdup 79 /O putdup 82 /R putdup 83 /S putdup 84 /T putdup 85 /U putdup 90 /Z putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 106 /j putdup 107 /k putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 113 /q putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 118 /v putdup 119 /w putdup 122 /z putdup 127 /eacute putdup 128 /agrave putdup 129 /udieresis putdef/UniqueID 41368 def/FontBBox {-165 -218 1125 947} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-17 0 714 731 517 531 700 700] def/OtherBlues [264 273 373 382 -205 -191] def/FamilyBlues [-17 0 714 731 517 529] def/FamilyOtherBlues [273 280 380 387 -210 -198] def/StdHW [90] def/StdVW [114] def/StemSnapH [90] def/StemSnapV [114] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings50 dict dup begin/space <1C60D8A8C9B854D00D> |-/quoteright <1C60D8A8C9B854D0FB9C025DC1807F6AB917C3E7D5332CA4CA851A17C925AE654EEEC8EDA4E2599D9F8EB208D40D9062C29F7D00> |-/parenleft <1C60D8A8C9B842576D298569253AD80857FA02D671D627EA71FB5CE9CA00E96AA37686881C82E953A95A77380E357489D7922D006359967A33E3A7DE94F8C8A07968CD51> |-/parenright <1C60D8A8C9B842576D298569253AD80807A855549874E793BAAE86623A25BDF96EBEE2244832C183586F2780A900B8A00E9F638FB3AF2CC205F95AF91BD0C8BE82FB90F0FC> |-/comma <1C60D8A8C9B854D0F84B10AD8AF8BC06708F0E713D2BD27E5D50E5B45C0F931C1E97E208BB17B3100B7BD654A704E3B683> |-/A <1C60D8A8C9B620B7A43CC5151B993E0DFABC7F16FCF811C9212AE2E4DE1724268FEF62D0B19ACC67B595782C4DC39D35A6BBF2C9635971F683F82463BD6592A683E7207EAEA06CF5> |-/B <1C60D8A8C9B635A4D71E4055E227366B693CD718BB39F9EFE938947996360B183DE16F6832BC05A03513F400C3EFD1134E07BF92AB6B3E6B015D41E99A6527D1D65E421DDD00A8B73FA405E661821F58B3B62507C504B2BFED41956174923A597120B3D1EF745C34C8C2DC9E7B717AD62DC24D60FC31C6D28FDDD82F7040BF9B5488B5EDCB45DEDBE31EAF373F336A361133950F108688160BD653843E24825FC38A05> |-/C <1C60D8A8C9B6079FEFAD07DE6495FE6F4221754C376FA85D7D151E83AED26DA8012DEEBDCA669E36E18C416DB004DAAEFC500DAE13D90DF797671E50530AD971EDB0EA36D651B6CBF39903F8C63D9665D5CB27EE9E6C936D2B7C1AB878A2597DF1D842D2D2> |-/D <1C60D8A8C9B6079F1E27E8CA871A3A9D63FB06E5C778246B9CF252C70220CDB856BF62F7116DADF9CF3EEB592A947E90632A7500FD350150DFFC5EF009666EC0CC8BF6974E1FE5B314C791D9> |-/E <1C60D8A8C9B66B392CA70476D75FFA4737A2A8C9F48442B4D4241367843315126C1A8021D3AE1C63DC2330DA2657C1322748197F0DB4BB8E05C8E91A906AF59CD299> |-/F <1C60D8A8C9B7CA647DE1C48FF6B2E6302223D205E74EC0E3A5BCB3CA66AE8A1CB5BE4BFB5BCB5A767865A480C608FAF7792DB4A5A6055B6F695C> |-/G <1C60D8A8C9B6EA914CA163FA616D279E53880013FF6AF22A4D04CA9A97CBF3F2CF04BDE343A14A9474E119B2769A85312A288EE95DE04A00CA8CFAA3B0935E348D8EF8233658C8EDBC37BE95629AB9D429BF4F5043F1293F622EB9147880CBEE17BA5918FEEFD03847CB8A780E4CE02763381D254A2FEC67DAA73A8530F08A67> |-/H <1C60D8A8C9B6079F3517E07A1F02988D4DDCA7A8910AF90AAD23DDF424500DE7A4B19A2ADB79934139FE587D5DC84798F5DFBDF72DA934F95638FA6102C88B86E217E0> |-/J <1C60D8A8C9B782565F1019DD9DD6CA47C93A25F1FFF7B4CA5CEEADC0DA7A84B796F5F6DDC0B3166D8251B97A385C2D503B8181EA74724CCB61CB568CAEEFE679D9611841DF7960D0C3038806E9E6BAA59EE62011> |-/L <1C60D8A8C9B7FD84E650166061EDE0E0C32A8AF49D941E2FCCEEAA7FDF44BE7125007CD4EF17FAAE5E81> |-/M <1C60D8A8C9B59F85B01BCAF1D58463679E61CEA38A74348E292DE6235B2B9EC3B3AFCD6017EDEDF3009AFE7521C3E8900757C0763C51BE3D99A375CAA72AD9D822A1E94E66C010881ABC1833830757954B05FF5C140EFD4B53E391> |-/O <1C60D8A8C9B6EA914CA163F4FFA1F425883D97032C71763F9A5E37A20FFF0082D1E59476B367B98AEDCC195F39A2DB225C03D06AD1002FFCA1E4B15EF392477E4CB96C1E5C8CFBDFF2DA32B96D771A302574518119E14E4DFB15E9E34C778A2869DAE3045E> |-/R <1C60D8A8C9B635A4FCB3B92ECD0E77123557DEDCF4B93018C883C774DA819E1318440EE847524510D2253F3CCBA260E9E060E77587D4182753942843A092C598C8FA0B812B1DF19E3912F8FB61E64767666DEB31F6AEA6FB2CD4E298D2A566485F8D1D4BB156F60623D26FE3D387CC076A55A270B224DD7A7EFAE7A496C099ED456D7008F0AA42BA6779B3DECB2C802702354F1F437A> |-/S <1C60D8A8C9B67DB5051CBE645FF2041D4DAED85C340260FB865D83EAC26E9E9EF7D911835A1943D865687CEEA398DD3C66428407CD00770824C9F4580841449786B5C6F949E9666FA60716E9EF5C104F1D0B44F5AEA145796936A4D106A1DE814779546C41DAFE20475FF39B0D3FE01DBCB72A94DCFBCE5A9AB1CE18140C5ACC32C594D416FAEB11358F2392D85FDF525EA1ADC90E89> |-/T <1C60D8A8C9B7CA647DE1C480FD2BB6DC8C0278CC19EB08B652A6E7A6D45D180386F8FF25F84EAE8F0DAF9C050A5A4A5D5EE75E43> |-/U <1C60D8A8C9B6184A360472BD36A275378E758D660CFE1AC50BBE29A930FFAEBDFF08B83E5816724BA3CDFE45648A2A33C0EBB424B4AE35BF436AF4084C52F618281B3DC87828AD81C2B8225EA090394D347439900D90572DCF11FB> |-/Z <1C60D8A8C9B66B392CA70476D8AEAEE1616BB331297358D8BED5C1165AECE5994F071B0037ED65E2D3168C25635D9567C829489617E36111C6AAE2> |-/a <1C60D8A8C9B7EF32A1D98A7E765D7C1F8FAADA704A3CA2AE07C4519BE0B44C684BAF8B09EA165E5A4C4BD43A7BAEEEE340C282E74A9B336E63C7C9C43E68B9EA5AA492BD2B0262E93D38CB4EA32E964FDCE6E2DE98EA03478B6A6E7DAF80F07776E7353F78400B7B64C9494EB8A6C0D57CCBBF1A37AC6638FC1461713AC3458F892407D8C86661ABA3BB750A31CC812EFD514A62EDD37B84D9D33B7ECAD608FD202ADF4D24DC85C38FB6FAA206098CE1D33531> |-/b <1C60D8A8C9B7D8BE9CD446F8181D17BDE712C05478A04BD41F00D89C51E5DF84A5800B2578A90BADA4FDC233C0EF597564730EF2319F890C32601CB19E97EF5EECAD49C24B1FDCBB5714DCDBD57089BB0F66127A9522F93F2F2CFDA20AE87241BACC275DD2FE54D776BDE6533AF863FC8670E45BFB81072BC04D24B2D57D1D3506FB72157161E3EF8B822005CC801A> |-/c <1C60D8A8C9B7EF32A1D98A71C32EF27A15CB04D25D5D3F65DB36C0386FC0894D2947EBF9F74C4194E02175ED8E6181D4559D860317B677029BE603EB8BB908B85C019595A6D0EDBB1D09ABEDCF1FA702866850765A9023BA8BD1190F8387> |-/d <1C60D8A8C9B7D8BE6A08A182ACBC00FB61D8B04374AFA02BA00A2ED5A002897652F009DD60D99DDF197D8DD027CAF03E6E0ED5343AC87A877EB37023D2D49720950E9C7FCA62DDD3326BB2337247D98B2C6BB4155BA0B3793A023F2912A64AE83654C95BA7B3A54034DF5226235E8FB8B6C8F5E02D4D300FE4F5D7BBD866E370AC5099E7BA5F26D9EA578B94CBF95003895BFBAF7A6C187A8710DD38> |-/e <1C60D8A8C9B7EF32A1D98A7E73F60CD218BEB5B6B68D623FA7FBE80D7A390D3A3FB7CC3FD7CC138BF2B495C941EBEC2BA232A4CD6178495160FC0E542FBE79043B4717FA1304C60AFCC4098ABE3F6B61E09E3A758C72F09F4ECA4A0876DE4738D8FA2B817026E45E8326B98F9EDCF7185AADBB535ABCEFE3> |-/f <1C60D8A8C9B831A9D4E5ACEC40895097851785619F73212CDCAD2ADD128A5079ED190CE726ACED923DC3FD68204679F8220F81535FF3F0EC58281CBFFC6C39BC06D4ED5ECED3CA08CF722810CB44A204D5> |-/g <1C60D8A8C9B7CA6425EC47702FE1B8EDF82FEED24AFBC9D47A0212D2065885F0ACC17A76BC9DA1BA5E789EA8B8A2FE9E64EF05E0C567981AF39E3837575B331B6D206648BF4860515FC9C4A045AFD65B495114015BD2C4E884ECBEA2BFD0E9660A08B4560FF04456E43F65C6BB7ECEB347AC724AE9069200D9AB566943CCE52EBC7DE23B1334226C2B5970865883E88E9D347FCE1B601C3379C26121FB1943A51317FD0977085C27E80096> |-/h <1C60D8A8C9B7FD84CD08F293A36A266D338B552695494A8E793355338F8C750AAA2CA90D077A8B3FF1A7CE52DA1B81AC36E834A6234F1F13DA41DBF863B7CE626F88E54E83D9944A1D486A03D5420349BC62B18CD8A284B702F191B3EF97A30CDDEF8FF2> |-/i <1C60D8A8C9B87B5D6E7F9C58AB6E11418EC6DE5DE1A105A44DEDA77D58F96327DC8FF8C8DD419C81EB012B3CA2FD1D9A08E65CD1035D0BC7C9926AB14E34E7F89247> |-/j <1C60D8A8C9B87B5D35736B5D70F8D2A580A8E6336FC08F329C742E59EF25B32DCEA12392FC4136F15118ED9818BF2747D82A2FCC8A4244548C90DF49D452E0C72596F33F4008B9D4469E53B2129A9A26875A7F78F5C64C9101F6C4D75F8658132E8002A14AEE3B13A6> |-/k <1C60D8A8C9B7B4A143926A91E532D7F7A46D3DA4FC99C973D1519D13A2C8163A3490424251200621A256E023E140427EBB4AD69C9A4DD64CB4B2E72F873CEFD75475515B83> |-/l <1C60D8A8C9B87B5D6E7F9C595EEAD979CAEAFE25530F740EFBA442055C3839B2D4D8> |-/m <1C60D8A8C9B59F85B01BCAF0F13A5FC89F6C33D8CB24811749A5C5F1497C3F5E90B8F577195963D601AF1C13EE8B748AE55C48027147E17E1080ADDC1A45055BDBA3555BF81755C09873B0454C9D55633C0FDBBD4E0EE5443B49ED05F39149133E0156C6A12D8210A1B86BBCA40A320F103EE155FC4C8D62217186DD862D0473BB762B31D06BADEC8D97C5144233E66E3984C5071525D09EFF477E5B64DDCBF512DF21FE716131> |-/n <1C60D8A8C9B7FD84CD08F293A358A24ED3316776D52EE195BF282BE3DDF918CAC4DB6DEE48CD837ADB40E3C30A0684F093D3E14C631C055D2D67FF9EFC376291CBDF926BE067D26E4A824D424AFE9D44DC4B088B485ACE3741EE43F1275DF8207F0348148E8D8E9F5E8971295B7112FC07F091EFCF78129D> |-/o <1C60D8A8C9B7CA64A03530571D8F8D36F0B9F849D78F29AE66EBA798BC503988E86CF6FD841114EF2F2C8CE0C9FD98EFDD6459ED185F0C9D924C002BF90B738899C1215CF83248CAF08626D82556A6D1324424C98F57F65F9BD54B> |-/p <1C60D8A8C9B7D8BE1A63B6555CA3095AC8D89540782621F44D1CD4FB7C2EA3C34A478DC7B6944A94D116E2A322ADDB1DAE159E8C5F210398A7CC75FDD906226289B61B1A33F7C59D5DB1FCAC0852D8B89EE5DF5DED65058125913BB7E6A4DF804A420D799A0354AB106B92BDE9926F8820448E4F739F8319250E10622C14A3F2BAA6B66D9393B815F8E0D7569D113457FBE47E8836E9> |-/q <1C60D8A8C9B7D8BE19C2172F0B43CABD25B23F5A3CDA57C90616C91E03D9C746C2E7B0CBC76BCC3D51CFFF68AAB47BB44EFFB647351F60804309DD5BB5601E22827528EF8471E6EDF021B1BFB09A4DF57C245DA62C7EBC4065CCB82D99219E04FE3805822FBCF784A624B2E34A606CF10E861EEB6B762A375640C9DA75BAD24AB1859C3268CEC8D485> |-/r <1C60D8A8C9B7299AEC0A41A2402D877B4B1D45CA61853A3EB45FC0384C6D012F22827DC9E7D69794ADFA3219ABC2F608F405694D82B16FC5CE935164CD03A1B4E3997A044C7D1DB6102459BE90795A> |-/s <1C60D8A8C9B7A73DB6F7A07F73445B2E745EB2627899CF725DD5DC9548FD2B93EA5AF322C30D81FE7390EDF20023064ECAEB1819BB9DBBCEC2EF9E227D36970EE27129AD435BEBDFB39CECDA2890A4984D890E2EF12A5DEEEC6C2015CF57C3A07705BC72A8E559A87ADDD18A788125E9E9E9C8F4620C8B7F8A32230E3C817A4D2D9FCFF19830A922AB3AA46492E60036> |-/t <1C60D8A8C9B81F2C4B9427A66BCBB30E6A81361A1AC82810D03580B5C2F80C14ED32D4CEB8A2F9039B32F8EAF9FB0DB944A554D4CA995A6975A4F9C0A6E39AAD6FEFB20A1600A427F0197A407387C72BB5829798D63C068BEEC3FE120BCB96FA> |-/u <1C60D8A8C9B7FD84E670E2D50B589A527ABB85724D392DD6E14D18DF6A324D4F31736929B6C3B7705EA68F02CAAA6C04D1E9464C4DF84B0AF30B1B818912E5E2A301A6A1CB632CEB97302EAD3EF44F014ABD81875BB1DD454055FF67B06FBB6E09CD71E1E6813CC6040CE4377A961360> |-/v <1C60D8A8C9B7A73DEE9439F98CDA5075B3852A25DDDC5448A9FEB9C1DADA689B699A17E70C6E41BFF9ADD9C3933D000C> |-/w <1C60D8A8C9B6FF86892F35A33A79A8809048D5A706A54E5C4266AA3EF89659CBA1C0C460D7D7CA1EAE79B21DB85A0BAF6239B5B557C54C98ABABBD3D69C0CA751D89EC51B26557E69D9046C1A38F7D165F> |-/z <1C60D8A8C9B75A17B3C41A1992D10352EE06FAB04E2DD3FF4145C0DC98B5060834E7F5CEE8DC5F0C2D31B84F5879DA71A119BFB5914C8035> |-/eacute <1C60D8A8C9B7EF325767E88DE1442AD337A60A> |-/agrave <1C60D8A8C9B7EF325767E88DFDB0209B85F9D6> |-/udieresis <1C60D8A8C9B7FD84E650052797DDB9A3200DB585> |-/grave <1C60D8A8C9B87B5D3601CB1C7C1E75257A9AA26E8FD1CB0C50495C1F993B1DFD4B011DD0> |-/acute <1C60D8A8C9B87B5D3601CB1C7C27E5CF6371F14173699B5B71550E2EFA5B9E8EB5D85161> |-/dieresis <1C60D8A8C9B87B5D3606B3E8B06363E9501EEB2D41EBD809F53E78AEA651A7672166C3163BC90D774CE3C4078160CB2A85E2A365334903B933177F110E01581896B2> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/CBBNPO+HelveticaNeue-MediumItalic /HelveticaNeue-MediumItalic findfont def/CBBNPO+HelveticaNeue-MediumItalic*1 [32{/.notdef}repeat /space 6{/.notdef}repeat /quoteright /parenleft /parenright 2{/.notdef}repeat /comma 20{/.notdef}repeat /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /.notdef /O 2{/.notdef}repeat /R /S /T /U 4{/.notdef}repeat /Z 6{/.notdef}repeat /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w 2{/.notdef}repeat /z 4{/.notdef}repeat /eacute /agrave /udieresis 126{/.notdef}repeat] CBBNPO+HelveticaNeue-MediumItalic nfntCBBNPO+HelveticaNeue-MediumItalic*1  [5 0 -0 -5 0 0 ]mfnt sfnt11.3384 48.6367 mov0.000228882 -0 106 (Bij i) wsh19.8638 48.6367 mov0.000335693 -0 117 (nvulli) wsh31.7192 48.6367 mov0.000213623 -0 32 (ng me) wsh46.1689 48.6367 mov0.000213623 -0 32 (t d) wsh52.2793 48.6367 mov0.000350952 -0 32 -0.000213623 -0 (e h) awsh59.3193 48.6367 mov0.00038147 -0 110 -0.000213623 -0 (and) awsh68.0244 48.6367 mov0.000274658 -0 32 (, \177) wsh73.5845 48.6367 mov0.00038147 -0 110 -0.000213623 -0 (\177n ) awsh80.6245 48.6367 mov-0.000244141 -0 68 (HOOFDLETTER of) wsh122.948 48.6367 mov-0.000335693 -0 101 ( cijfer ) wsh137.123 48.6367 mov0.000259399 -0 110 (in zwart ) wsh156.568 48.6367 mov-0.000289917 -0 102 (\(of b) wsh167.033 48.6367 mov0.000213623 -0 41 (lauw\) p) wsh183.704 48.6367 mov0.000335693 -0 114 -0.000213623 -0 (er ) awsh189.724 48.6367 mov-0.000213623 -0 97 (vak) wsh197.599 48.6367 mov(je) sh11.3384 53.1367 mov0.000320435 -0 105 -0.000228882 -0 (Si ) awsh17.1733 53.1367 mov0.00062561 -0 112 -0.000213623 -0 (compl) awsh31.623 53.1367 mov0.000289917 -0 116 -0.000213623 -0 (\177t\177 ) awsh40.2378 53.1367 mov0.000350952 -0 32 -0.000213623 -0 (\200 l) awsh45.6128 53.1367 mov0.000350952 -0 32 -0.000213623 -0 (a mai) awsh58.2124 53.1367 mov0.000305176 -0 44 (n, n) wsh66.7329 53.1367 mov0.000228882 -0 105 ('ind) wsh75.2534 53.1367 mov0.000305176 -0 113 (iquer ) wsh88.4038 53.1367 mov-0.000213623 -0 110 0.000213623 -0 (qu'une) awsh104.239 53.1367 mov-0.000213623 -0 65 ( seule MAJU) wsh133.414 53.1367 mov0.000488281 -0 85 -0.000228882 -0 (SCUL) awsh146.839 53.1367 mov(E ou ) sh158.604 53.1367 mov0.000335693 -0 110 (un seul ) wsh176.479 53.1367 mov0.00038147 -0 104 -0.000213623 -0 (chi) awsh183.334 53.1367 mov0.000350952 -0 114 -0.000228882 -0 (ffre ) awsh192.504 53.1367 mov0.000289917 -0 114 (noir \(ou) wsh210.099 53.1367 mov0.000350952 -0 98 ( bleu\) ) wsh224.27 53.1367 mov-0.000427246 -0 97 0.000213623 -0 (par c) awsh236.125 53.1367 mov0.000213623 -0 115 -0.000213623 -0 (ase) awsh11.3384 57.6367 mov-0.000213623 -0 109 (Beim Ausf) wsh35.0479 57.6367 mov0.000259399 -0 108 (\201lle) wsh43.1079 57.6367 mov0.000305176 -0 32 (n mit der H) wsh68.7583 57.6367 mov0.00038147 -0 110 -0.000213623 -0 (and) awsh77.4634 57.6367 mov( ein ) sh87.0986 57.6367 mov-0.000213623 -0 83 (GROSSBUCHST) wsh124.998 57.6367 mov(ABE oder Zahl ) sh159.918 57.6367 mov0.000259399 -0 110 (in schw) wsh177.423 57.6367 mov0.000335693 -0 114 -0.000213623 -0 (arz ) awsh185.848 57.6367 mov0.000411987 -0 98 (\(oder blau\) ) wsh212.148 57.6367 mov-0.000396729 -0 111 0.000213623 -0 (pro F) awsh224.374 57.6367 mov0.000305176 -0 108 -0.000213623 -0 (eld) awsh1 /0 /CSD get_res sepcs1 sepFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 264.675 mov-0.000335693 -0 100 (Mede) wsh26.2261 264.675 mov-0.000228882 -0 (deling) ashFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 270.675 mov-0.000213623 -0 111 (Commu) wsh32.0229 270.675 mov0.000595093 -0 99 -0.000244141 -0 (nicati) awsh46.2778 270.675 mov(on) shFBBNPO+HelveticaNeue-Medium*1  [5.7 0 -0 -6 0 0 ]mfnt sfnt11.3384 276.675 mov(Mitt) sh21.5752 276.675 mov-0.00038147 -0 105 0.000244141 -0 (eil) awsh27.4917 276.675 mov-0.000244141 -0 (ung) ashDBBNPO+HelveticaNeue-Bold*1  [8 0 -0 -8 0 0 ]mfnt sfnt524.234 66.6191 mov-0.000366211 -0 (EUR) ashDBBNPO+HelveticaNeue-Bold*1  [8 0 -0 -8 0 0 ]mfnt sfnt562.332 66.6191 mov-0.000244141 -0 (CENT) ash%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]][/CSD [/0 ]]] del_res/FBBNPO+HelveticaNeue-Medium*1 ufnt/DBBNPO+HelveticaNeue-Bold*1 ufnt/CBBNPO+HelveticaNeue-MediumItalic*1 ufntAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.0%%For: (Bart Vanreepinghen) (Dexia)%%Title: (IBAN_NFD.eps)%%CreationDate: 14-02-2007 12:45%AI9_DataStream%Gb"-6l#J&kOXBi+nIG=m/*+o$i-(Se>#kb3+M'S(A5S_)Fk9M\8jFZ%.Yg854"iMTkuU)4bfr9jGu\j^Ih83.5cC0AgS)*UWI=Hi%`P]<ScX4?_iSrf\Is!N;Um'=!M6D'reQ;eAiqKp#f(Vs]Xpq5UW@o]8dE@<7GPAR"hu<':_p.S<2uABBLY$Hn2;C/R]R9V==""#g%Hh[O5m>IJ"hql)ZII`l^k:b]J;lTf2H/mLpYO>fQCtuaL\9gEhrTr@@=*H<8TDoqgEW5:rh;Q?/mG[$srUnp/H9))hr-&tG?JI^D%mCW6[hnK*?8TLp6*kpZps7+A,&%B;7iP,Qol^'PSn"/G9mdBr6pA(o\l1Q(O.,XRPcYhXSV%KT%]:i='GAl>%h!7M&r8Mq8H$8cO%rq@f?G5_::jS-.0In<*'^\RS1LLQXCkqkg)eK"PdMgtQSB.*N?QeX[X.]qU^Wp[Wo35'e2Vr-D2nD_^If@OqJ4M:Ta^Q`(&iV*9$%h=]N,7Kq]7Bf^5gd-oq3/P/=LV4P2rSbgGiqCAr%OJd>$VKa"_8LMn%_P(#lR2L]rhnQ]"l`X'4F+*Z>jkGPL5K]r(%b$+,3.Lo#%fo,l)"0=J\k_`TZIs6,6qN!::]To`as)jN<J+N1-p5[k^.lc<iA%X2'>lX2e^`T^ds)@k$OT4;-*<tG'-Ztm=(/=VRlbD7b9"_gp%lW:PKs7#Le2jq5r:I9%KrkrB?:ZuRVEL#jm-RJ&9h"WWeO/K,6;J7P/7qhGclPDduGkijKSNP#X4)KRZjh$"krSmX31<$##r8MUa%f&;+bs3ag1o\6ja06Lq6M>+cQl^=X!h`R)=r8C/_l^-3VBZ-FE-TRcK`%MB@?=$sQ]d@EaM":T-p-2>*rq7,+4OHq1pmj3i[t`f;%]g5$$B*c!d!q(dcG7Op@/PkJe;E<cAc7"r69'(F[=IlRf9PZ'*GY%=\;QZW,rk`T<g@%mR^W2Q84mq\2.!%B+mbs6`Sj"-5s)='4%UrCbgBofo(mc$gM+2[Frr'i.-$,9=EIBoHe4nK#p;$K2#DtMdR6CpW<n/L93,Q(#*1/:_'HA(2>2a.72TC>Sn9mJrqTjRSS15>s>%2EtlcN3S>9N"UT_PL=Md]sM)!->uDtD2t]Nr1Fc#LYo%%Al*e*pLM;5M,NQ0c*3.a4H'3t2nku01B7,$/I)En;%!9>Dja&1&fFbr%5Mg'5J<h/RfUPP1ACOIK`m)LlH7l<ibGAM8?E)W?91mhIb+Ns5RHPZ_Q<qa?oFJ]69(3euP;/24nJc&d]A6PCfg\%YEq0FNDSoo#%'uMr:>VJTc_<Abu<5r3I-_i<_Q#T17D+:UFdWUk\[nH,Z]\JhqBt7';@'e(fN/c>+i#femRG-bjh,d(J1M,6!c+#FZD0S;*+.f'D%a=)J.AK0`V*mc)M8N].sL:,RcC[[O7j[nV^rkYLO7AiB,bFSH-IU\Q1o;DNQ^.Ls>o;DMN,2_QZq5IB.f4scWqK%*<GNM]s\[[ai%o;DNQ^:LrkaS[JO='+s@rfj%Srs1j0gu5`dX*hBpnk&fOE?EZg10i2ISI9Nms"@Z@^C@'4Qd^Y9dQ>V:NdSSM't*FWU]9N+53tH2%h=s4LL$esdorlWdet;(PEM4`U3rfaO^&X0PL7\/9"28QmG.<LHU'!R7p^0uMgRmN^gdBD3c`MU3H[1NuqMP`s0cSOZ/r-A%*J)T+%F*ZBJ]=;N?mW#jCJ'YZa/*$6[>XjN6c^g?aB;e>U1N!g'X`/l_?gO21$(fTb_puU"(:\;X9tb^9mSE$B)5V7b3VSi_&VOd$]tdqM%CtqLJK?I5>F>0o6KI0Ke(Of0?On:d8G^H2lTH1O,_Pqa2,<XkMl236eLp7=C:,8F3M;L)N1_U4oVji]+Ag^DLHQ?%%SRDjhna>@S%iZ\/brRWdU<cW\dcSZ&!%+K7A1H+0hp7PTWrD7\1T:b6XCL?e-qn7FPr$OWjs$-.Ec@q/X^[OtpD<746&e*D=AYa.hHU1lT<5pb<%cJp6q^!3ol1OfUsl/U+G=-)25PYXF?AP^I\pDtQ!EM5@>IU8kSN6B_co-,DHpN^ipMjQDIbR\q"'[`PS>-cGKNH%>q7,t7lB`ZVj%rq.S0o^iq`q8g1;@YE*T:c^;##osP/p,`\,;)0hK*'0tUIo-.$'[D)aAdfN]<t*b4L?rQ3=a[BpnU*9d^ZFXmj4^7cG?gWBo4%YN%Tl/i/1S59)A:HJ%=gKsEdK+`"m`eP^J*,qmNn,<5]<l]5IBf+tM'P>HHMW#6YL'4eiir>;))AZ9Z=IYEn>*^`H+;ANHN^uoY"!e;%k?DJeI<q2-9=XrV`j5R-iu2NSgORu+.ZK4H@u7?[*<"K52g]/i#-Z\&(p#[sLgW&T#qQ74nU%p*Bc>W4>bUSF5K`r1mr76C>iPPM%YkgJn:G_]i:PcBL3R\6Wq$#I)H[o984lBM5^k\fu1EY(#R.\4iqF2B7UI`5Gg%`Mc5PNW^AW,.l5P3VDl*#=*_jpH^g8l;Js5'db%*@0uaJ#WqU_AY>hI6Ps"W8h!pk518>KD[qbT@D8nd1FRVlLCl9F;jp=4l;>!([Y?^)5`/0:]$jAXiii1c^iC.+Njo<mc5$;VNA7!%o-p:ohs3AeT3B/%ma$:Od<BMW]%-P$;!f<i#OrIi!N`,U2D<sU\+UEhgSh80FZi5>]PYGs.a^=5M[Ra9C<T?G\b>p)-ul%#&)Y^R%)B%.qEBpia7b^9^`1RmI=']:DM$@_MO48CkW,_F<l0"*i3CogF^IS0*hf"Zq6+>UVN&.ni;Q*0(G+3bABEs)70PpB!a*')j<o;BG%GNDN=S;c3<UG0QM.nb0H%]e#&++0kRZfX`6\!lVHpSnB$nR._XePT7]@bnd*#?g=$oZ=a8Xc:?7!qTRu[Mh2L*t3',>7q-a$D[&a%C0#\_hf8SnTQ\FCiOBC-h5ceoei[H#QLJ-gXT>BFVfG'%Rs$-Ka_V6Xe+4<VDUH4`?d\UmB3jDPDO8#4rL=L&><^u^&N-+4I9\;j%FNd[L]Op4u7s@-#Y#=aV:N#d5VD<7?KXX.qX/@!>YC<@A31ud;]MK"WW-"h/K8GBMQnf1>l0Tkqdml7nOXH3]mMaC6r,8-uK9!Ti%,#&]KVp[\+60..d+;4=nZ";T@r(r4R0=3+H1<ZRSSf"j*it7B%0=6IpIkkq(#e%+VMo\pT]e=S#d!%,8C]+`:I>$4EX%YJ]:T_cq%?Z@M<5(3FK'0OV!Q6[QbbPIb\AFR[>9;2lCgA9RX2WOUXk<i&5a!XlI4n@YG<G^(\^`BjJB?n421$-L!a2I!soV0[^#@tBnpM-ip%-M=M7d2r2?s#OnMO5RJ%YKO1NXlk)/54d`o-2%OMCD$L:LRrn#7X_&>r36%45M#Qf51L%s+eM@K$XER&4mcq&5$DuBAj=h7Ze8OA%ng!`&'55q#ASCOiJj2a#-4Q!,>]Si!2QZP::XN+$B(Y,Yp=T9b5%DgGCY\KiI!T"G]'V-qnOXMclFuKFT5V3^kIf77-(dE\h<19r%Y)3hI.d+4GMbtu\IqP)PK,e.EbA*O`[d[bG*dR<rX*fOdf;i,V-V!lg8ldHH6?Pr%S:0=qP<i"+DsYqL%PlD3@HL+M1Hj(<hXU'F%oW"3p6SCT5X1u9J4Zm2=pU.R)P97'P714nLXVNqW6Ba98D7B'aqn-$PCt$^CSi62VY">fKl!@uOHFPVt]Q\U@W,ZObca,^ei8`N"%J$R<K,:!os'5_^^BT=uq\)'@("p^ZHpMIFX:G-JQq8jj#Hss]QAqQ.[\j>_#[_]N9Cn6W1lgWfqn+_AodZKO37iVBY2qHpqqYk:M%r.@o:I/%UMJ)C=ic?u'"^&<WarTOjm+8O\G+tK8]R@g*_IkO!F1\DS"?1#T!NKMlO2Tf6-k@6<'3HPb[3ZbB`_ZmPs`rD\&kq2<V%0gbd/rC[&.?e_lff,FJkZZiDKHsQ1gIs0`J(Y/$=]=SP,pg6blRl>d;[I\7gpAm8k%c'3jfYiOE5Nhq6s!FLW7@\@JV',[jlFWRs%bK*%m,X9El_P<W0o5j$JqomBI>43Q?l?1Sl;L?1K\NQDa[X@=u4nds*UE.2N%btLddkuC:=$A]:>4i.TKl4*.J&47\c.FC-\Uk@\%rm6k$b8j&JJ8g:j]sOAZG>3LrbUpE'pZ[-W[ds*=VZ$NT[\.XmM,rSK5`K\B(OEPnh03f1j'5ompP$(o^9b0Z%a2W!VeE-V_d)4,%I/jA/I=Vno@O8X@Dq_nV31%qjQXao])8%iIhRRd@&*pM/:XO1H,C;_]mn;j@HrtY%4e@M0=_"G\g]"_?HoY]kT(`-F'4^jk$iS^>%(;@Q$OpY9Q3KJTW1tVd$NcE$J]Xp>ACKd8,W?7P19jCeG"uf/(BGS)?]0H+2gL/^`:SI+28+RFs24d<Q=S^ieqE?CBL2Z_F'7>-W%J)848XnV7fR#_]*]<^9XP;@]FG>:YPp5j\6f;7**-[`,IA+G!6,8^1-IHTe6:WdmhrE"+O2<pB\UF4Uc?Tu$I%R8M@50rKioCJsB%;ucl!I(Eh+\81#Y%_Ci]MuN0/-2.<;m*g\"5qI-.]sb?(o.<U@\>3O$61&dc*#un3[sKVI@=Q:geA"H<fmIgGj7m.@hql4Cq:LmJ%fd"<;G[i&"H&,'VVPa'SP[1KiJ'+5Uo'$[dRBO$+<OoLG2+aq?dTsKA9,-?"G(5,BID/eg513.i>`6hYpuJ\:>X,d#AWC+:l[737%cJDUX)s#[&WH>B@>he/RkHXufGM6P&DSsLsa[_qM[)P+,noLE[>jL+t0V9HdSH"X)7>Hm&O$@>SJ*rLVHt`=fM%A4JGl"^,)2k]$%?9ZDaG55qRE0'VnDeuKOmp8664o?GsqVQ\`g$RO<YBGELKm*/3miL?B^3T8>LV)<)QHt#)IJs-\S*&&BT>.ma9m>HaS\M&VBD\1Q%k:c8kY0X8RDr/1@4o=X$(O+2Dcb?hs]<a`q-a';e2:m"pIIlIkc+ElAmr&0sm!:9/cX1bT2cf`+5IikfPt,bJ7rS:"0;SF\;Wbqp%k!^rpP,mK24\462.Jkf`IHY5aUabc.kW:6iDD&L^He6G)^]*2IgXg)aWI_OfB/_[(B5cY`^:lrfhV?s1ftuF7hqd,E^--gcr>HpM%lGk],ir8f9o0;-[.)"cU'NEiYZ^Z_OIs_.RLEGEF]mY>-r:^-doj?"?%K1FI0-B%7^]"/ur9EY72g<klIb](mX1NRomU*VS2]&dG%^YQUd]779omuGQDkJQWKhqq=304*Mpn,)E02t-2(`<oi`>i5N&mr%$UPKt?MqXX"H5B#tmn+fbrXqs%KGP".MlMJ0uRbZq8r:#`D%qY'pImG71(Ds)$o'"<(/04(@8DdH`,gn(([A=P0Ul,V?-"*!>_F)'.Vm6,qQ,1@*EV=m@CjDQhZJBqT8IfT]:K@\*@g]#h!YHMM,%YMQsAi0H-poQKgbY&8IWr<qnpU'JC-lkR4siAhI&kBa#35@;19m1&,0<:oR=&+A?dMX8X6#8Fiir]V.B\E]'cP+h]Z^jeMAl`YZ/%?V@)rV9mg]IFdkjV8OIP`#m$7r[>7IA#A+qH#Y`)/JE,RIIeBPrq]ZQ?/I>%#Y>Cmn'6B0p[X+*fC/.rY2?o=3dc0tqj4XYCO0mm%LFZ+BP5`LGIsCSQrq9D@^SRE_982'Ke]XEeAFB9Da`gsWDmo8ur98%(nC_C_P0N%us0')"pnYUojS\hkT5Xc![o^%'WJQe.k<jNA%*bhe4h/'ILq=eYc&dN:8&isbWTP#4iIS/)gjK_]:HK%OV,Ab$kO*B3"oHg-CGkjLBUUP^lGT8E!$]p1U]`q3ibKa)m<_'7bm>L;B%k:aRLrermbcWPbC?G1f4rpGLXnI)Ae/OTqG?ea8cpU<@lTBofUB>f#1[SC'XB@j?NJcF5#[!Hn@Hh[71`4Mt\Jp?)N^4#gpm>6l;%$JuHiq!Qhmmf33(pYD6bC-E^'HBN:INlM$A6kW$hZhs,?go930md;+OqWHH@mp>thjnB:t?gu.,r9jFKO!b`f`7a#FnjHpWogGAo%kgL@:DZt<1rSl?\5?Qeb?6]X$%jt`aq1"NCU5'I;s7Pa7Mmp/;YNXXK1@Mk>\Tn)@c&X6%G^-aam9AH4bu?Aa;?">M4+>3\]_qW&%N:cY0[(uN4kHEeBQ[9+*If'Xso=o>5qeMAdX;hg&gN^QSrVe.SpDGVGgg.\/SY,)KpA##.acub`c2ET\"6=[a4?%Jnci-C+h>PB0%]=e+AiV!.'C^e"'q>U*UiRQ;r%O%YK3R1rZW+o!>EQmT6+\^5R0L":,6Me<XB0T_;]&i(grUIZLT7$bZhd+"0IXT*&?7"57i@j`-%,tekQY;Ch!O0%flP7R0$G]N=p\Ga`]bG7`-lJr`tGLnd'q7f`)m7286\,8jget63/@+tS.NpNI?_^/H>(PhTL44HVXj?kuH6TFjn%4%r_2X/i;EX8USfebN4WW`S:3?_sfJ's@J"]:(>_QWKN?Qi"sabO`o#=a-4o11-p%GSr.4V7W8=%_LG%me?Sd[R]Ytm.3F.,Hh?_%rH*%h\@T32Llq:eG#9p87D;;/nKM65$[4>mc4B)>kEf`"?C[X[\+=oPcLZ<BO6>KWT=a]o*SON*,l@>1S[[0b.kS6[@LLF>f;<km%=7rlelU<t?Xk$c02:kf;%FnN]VfF1ejg+6r76*$'e5AmkWPfF,0<S"EOK\4dhWKfESm/A.jIB//3FnafSp'@[Y0pn8Vi,Yg>,nQt%S5P4n,bJ>1iZVXIbIETLnN=6^@u34C(h8@c\i>C2\-eR2+"kEUBVFi\#s"dm6O5lc0_p@9ns<H"p#j'blANtPq<3J*hYG86gm,Kn%H["Go>pJ$/84uK+]&:5BDV@fAOV?!YF>;0n:"8>T:XlV*lCO*Ckl9=1-XV:GnX=CuJiJl:1,7kCm]5d\aMjX>PAgD;s%`;@/isO^%/oIHIrl<V$pHVFNK-&?jOqSub%8Z+08j#f<'D1jC3P?cMBF#,2N,i4p[Fa_R7jEAsUO192/6CB&n<NZ=HHFq.a7JEbRW`,V7ItQX%\WQ2U03ReWd-Fr?``L]kn<NZ=4.=I5;]9pbjg#uKf-D/,[Tlm]?0\i\lU%fH*FZfF@maabOK7T1q+>td?qTn[D481RP&!)YLCT85%=,]dmmIe'KlWgWj=66LHQ2+$u`LT_o%&NXB?H>\5&,u23rhTJVT6;7:a6Rbgm8qoYd<0?YP!nH5*aN?"jjg2\[-JD`e'sPhk0"iP%lQ>Edc;!o,oJ^)XX6XeKmFTrb$$Eu-='%JplKTkZ[Hhot?>4Q$eJ4)s,CdI4nUZ65a:Ftr'2_23K.O5g8%A(+mXH\NmiKCFcU[r=%_>gm+/:i+MY@S,YFDTH;/8_=sn82'>\h7M_D1ZWa"W\:OqB0N>6G3L4%6k;?o8YQZ0\n-B.)SSG#g#W]85BLhV,O!_\)Z)nO,5b,%F@e-LK-D%)7Z,,@q.]DA^LQeK_UaAnMrKan7VD9Mq[o66'&Fm_fs(Tdl@>i=U+BR5-(;cK?D_A>f$X$A#1N%NGG_UsO/Ok9g+Ya$%7.<>/M'on*`*Vpq?LbZgSgV`Wk/h:!pj4&u%'eh)NBDf(a$YT4g@MfoGT8j?)ndiY\T@0I\o?RSHYt"\<=&OBOhh3`_^1Ga@7OG`%BR0`f3t^9_U7XnsF@#P@8T](tr'\!R5Wq_-GD57a&KP2>/@m*pF<J5=1nfJ2<?di2FsO^=$*ajNAsXdm%YW8jAic$X9-j.%XX!qn%8J:G_,$re%Tt2Hg#UCu88^0TMZ]Ps8+DH-n;Y@7=)K:?LJ])CLZ!0cs2C,dXEI:>eq*;mW#\a@^lU5d*OSiu4aKi0#R=99u+JNkg%:)Z^dkC)%NA])Fi.0Q!5(`\@#*2-LXKcuT<:bF84&a,ram#`%Snj%<Z#lOg=*/QM565iB>:#pm_P"X4s%Qb4E0U#HO)DG&rW)oe;%d&Ta?\N1]='rK7gAo9<oJL(P/b3t!JPC+bOh*C3oj\"E&gbW*Z,Wuf^-Y+B/&FiH.1Z9rXFs^6:dnZZ2l;Xe=.9XqAae[Q<ECk^;%oe!/'WD/1cf."tCXRK4-WuGP,E#[HCB+,$*':.\<JX-o=N:;Mk4/UWJQk.t*N;oQ$``)q!!%%!")F+hC%SRV$C'L9/,D\@d6Tpkm%\M1:=>T/e7Lur04'[Fq-Iji,4:k6.ZbY?l61G?8;EX?nj^5?6X)pj65]JKH\"4m(_L?Z?^3&AhG<d(fVfZfJHbZb9-$if%[]pq!>%jU[d%K;GeV=j#nHB(Aj?+4^1`o$0J3Q$U/U*cDq:O.+)#Q'T'o()+D!VtcJOA"$abA-d/E#2U=JaZ(O'e9Un`4/i[\SZTN)kG$e#%[[nH+cJG8I<iq3q]^+-mS_cL=\dGn:0J27Uj(\Agoo#/dIe`4^GQ"_ufCTUAq@E"ogsqBP"cMrLlf1W\I.u+_nYJ:\qs!tP;B=Zn%FFAP9NphG.5/(":G<]@T?`N.u9mqDK$(pdpp/cY"g3rJ!s86ZA#sNO<I.F[LHsM);^>R]s*#h-8+uJ1oGb%%m3c\bZnG7o!qB+^+%==l<5nIIS(5MS5(Cq(?9VLNQCIrL<C\TIH>\smQ)`@C`lc5+e-X+N^F"KUoHH(=J=n@YutNp`l(jpVq?$i2)MXMGe8(P)T3QqP".%[-4"V1AgIngUk(Q^Rk@1-XXX&7M+PIl-ArBR<+GE3,o_h1)Y-Sg%1@mY?CKUP9/BKDF;,;<(=RCWcoO_nMaVD8!ru;_b0o`R'inQ%noM4K/r+4,>Sk;#5$Z@8*HSsj.`7O,.h,SH<u<Q4*UWWs7mS]W6cUP"5F99qn(38!46F;$[Ge.'<Vi!DCX`Ld1fB/pEG^>#(p)SZ%PiRqG%7[REo0YA+3?_mR+L;8N,$=4)MjqI(8rQ!&9b^D'W%m`Fc8;*iqqq27s.DUV(BOP^&l3stnu)LJSNLQ[^].WPHdA<`a&Dhe%X0TJeraXC&Qi-U0p^Ib[BheHij=d-.e+`e7n!SV&Ze"kPL?3_"VcL;SHHa+[d8q4Qlq[N/qL/25[,4XK'ITp6IJZ&AM#!:&I^T=O%FY46ZBqB(H!qpabi2KFm`sV%^\U[K*W87^V2W&\Cg6?n"m-@Ju7Wh>:!rG$cJ=;_c(<SSJN?KMf\erO!UZ(c]*_mcJ<Yo=/9ZpVQ%4:j(sb')F;/Ge]K,o*^8LT\0:/P:3=WiYk:L!rLRF3uY0`DWHqlIT.h?rhI,YHb1Fen(Zo@nD6Qb?5q,Op5-W[6Dr!8_m_HMfGd<%pM2>7@9Rj1YH_o!Xia6h`f^[3Q*WZ5,s,pCf(socr+`rro3l.C`j,fTZKlt!AIZ(#/%lcm$=mGfqCn3lfXbnf_^+i`QnK>CFgoAb%ICc6<\lWCh5$Q4)g4c5n:=c^QDuWY<cdf<LOd^&3)#/O[9t_,-QL'I5OFcO\KES"11_qjn>f`2Z7V"4h1=/j]g`.i-5Gp]Xejc.&%Z/+VX*4ffX*QrWYWiWUQ/DFU6ZI\NMCko.YPn#@F<KNMOpWR;cm$ZhrdC]m!%CRnD7t)k%Y]X*<J>&onXQ6t#`nAA_)Q-]HFtDBp%YUXEu5*kRA[OQ(+(sDX0Y3V@VMe]Z+D+VOo$^4"hcToPp*qsJ%CTqqalbuuW@-b,LMm9A"Np;nl0<,bKQ!F'b\C7=d8FJ)aZa,-i%6dacB<Di)":pbFh<ReT6'^\%hf.(&C/(K)`_7S7`(HAJ"21#:BGL^p*WG]DKD=8QQIZMt0&cHTsSj]NjUj#[a-0+HWn7D>?)Yd.\%]mZ127!HqGJC)'Ojk!X,G:,WQr70,^qm=`*M1aoR9SJa7(He!HJ%+ZVVs^ASQLK7lU-P]U4Sr0TnB5lU(?,QtSmN4.!s-iL)c35i%lo[jWXt%cTLRRGC)#6HM7/]6)C#,Y6'%6\9<#"P]b9di$%!.heMLAg>#b?$c/4BGU@F6@c4?_rg4A'mJC3UaV@@I'/k3ou-c_FHd%h_J?5M5H(mU)PNc`EKGqJ-fc1S?$_985mkTk'+sCn>MnD8;]VdJjGGJ<1P8am'Phc9l$?mnC-COgbtmJ1:d<s%RJfLGQpsue4'X2%/b>gJN#IN_:d=!e!Re4$'S-`mP0/s:Sr^dOcm7&m:.p_(&YN#@+p%8ibs]3r\E[dIg<4O%WL)O9F!j>K;1Pec8s1nRl3YDi:Lfc!%8E^=S6l>:0)GT<M3R[fIBl%kf4_\O<"QiFFo8)e,VqYGoi<-/+C2?lKT4$4_0nH[UjAeOD/iIE*Bc3#S`:`7:1qT#7QqB(#8B*#W%Pfhc.69!oI';N(O/V>U@ZlE1I))a:]eHNfO`\"jOl=!$PX&9VEN!?,nbVN,-73NR=Q5"5Vd[H+noKl556Rf$ggHC]Lk%-*-pn?IY%Y=jh83R+B5"5I>k13\L%^m^j?:fa\JDW$18WFZ;t8=5.e$M!j*j7CK(B27NhQ"0j,YY<XfjgjWVW?GYD@pQf_?cJs)N-^rGUGL3-%RUpH>RF;e!YV7YE!_0`/`WX%m3`oZl%KWiTYmB:hd;56@!;4@n#\:S4c<*SaK3B9s'fk7<enED#.cb074L"@&Gs).IM0?bVj+s5T%fi;$`dC0*,F@S<Nb%D]eH=fET;&FkKB6ioVNYZ2ZS^'2+irBp2EYoR=?0'VVjhsTRACO%,^[F_E6ll@n-lEj&T@OGVStrXQ!%]u-%TY(d_4G<GqA,Ubp'9"6^I%S"t9rcD4X^*=$WN/N]K#<dlTK3Kn=RlMZq>jT$)ZTtW3ob$['8E;7)O2.DkD%Hm`>Vk[.<R0V""ES9%A'@uV_T>3IC>e3,f1A)p:;pm]3mA%=7eK`h>Gib+MF=<POg#F\\JM$=C;KhtQE;!W!b>(EhMOdIVWHOh)P^!%+66dj8a7:;P"?#(%nYi"K<2msSRtW'(1YLoJTLHHRC^WlF$`tk]WAtbldWueXT_D*n82Cn2i3^<EAE,[BMp_)ek/d5C!X"!hE*A3dn=l=XJQ[oC0Fai]%UB^E_fHd8t5VZ,lB#Z0fh>8KW.]7QV2Bi6i]nE&SWFFFu0Ai2=T]n(a2#2,^.m#T.JTjtF>8IlJEe/uR<?\-X?-*9_/G3YACkK%]%ck7JhaCM6(aD+;;Q*]%43=DWZq*i1m`?D6VWiD3bL(Y:k`u5.*;gj=>VX+KPnk)g>[D6Z3-F2+.jfgPXc,7hY.P)HT?5bbO_mYCP%e&H</2Tr@_a*(0`=tK3r@*)&?`,/U#EG8pmA%&S`5+,b.D82;eFe?f.omJ;J.f?<@;]RA/S]mX%8QYSS9\,L.:%\r&\16'/CoLQ9%WDU&=V&9^a[:XaHW&CuB3jK5q!u<d;TpK9PT"!5ra(4<KZ:dau1nh3*@828!]$<[ZHn`dC&i&RC/C8nU3Rl?_hn?64rglV(Q83>\%,Ru+aeI1s?pA4aTS!,3IL[2RaP@*b/!;:TO4=k##P,6o"aLe(S*\"M$f3q\N!quC-jb3:uc`dAl7O@ei<q>dIZQ%u4#$ieZMbI\R%,fe$BDNjpgaAr`^2OS>K.J1#mrYcuCaZ&dP:T;a39SmRI;RFSGa;bS=J7'S8OR/H%(jj)@O%=`:U,4TeLKM\*iM.V@L%;dJZ<!sn%qET(_<2XVcLa:-5!^,qj-UtA.M$0MlA:8u%6(bCDi.qAhMbYk_"]N\Y?^l8!^*7$AbG,1U(/J_9G[622:*":u*UHCm4rP<3nm7]"%6B/'p'X"]PW5]L11$BbB%)^Xj?5c5)"u\i$57r1I)O[60e=tZ3A8a[er@AIIl2`c.e8(Ya#g]CVpg3n5+9rI<"FfMAE<:OpaUeuS%=<+RYC0&-5.t(2RZF?6(:h6/clog#+`&+E]Q6S=O"jrYLGD3'C`!PXS9ZbC$iH2qQ3-Z8oSm]BJ$?<3W"/#!KGS0Bg(8q*YCakVc%/kX?hSlQbV4Q>T;)Icc7jmUR;F:NSFS5($J3j3O%;g]qaJdWdL-T)o+gZ06.pCb%4?o%h)S-(\bX9nX[Ee)PoVCQ\@=>O?4%p$8_%]H.`\/0/-A&^/<G.Xi7o0X1aeM0(bQWMIbDU@3A!L(GBN?@=(FBg-_C#$71:jLJHApW:Th=jmXl$F[TT6>8>SDj<nl6#95P2#$%k%"K64#Mgu"g;hmh!#5bh@EI"W$'IVeG1EM\g"RTmj)]JblpBVcQQLsEgX7R;SK19pXD]sB/Oq>PU"fiq=?ro%QXDRRr.O5N7&P.>d%=;+/UbCG2D'd1j<e(H6eEj3XG2RQg7"^jrLU'HJokBZc,!:b[F0f+E$#(ZsMn7m<F=!U#-U<&tZ,#'f5g^q[k,$9FOqJiS<WPg&5%]s#"PL1ZX4i3T'p2;++<i3>2cb\j.F;.=:CSg`G]\j?q[Zc4f3.Wr$5&ouBp=Yqa=D&!=:[L1/\'i:IZF*:rLXC1YP`_q))O'4*@%!aQAO1MR;0,tjMbjl"b/:T#Wo*\\.QH4rD^b\Cek"fZ3rYsF:]$!i]!%#6Y*M'TFKbeo(,VE?TA[\2u`5QfsM_!HHc1,?@F&7ioL%@ppA2X+jM8(O,@K<aAEHlG=o+ZdN4oSeh1*?$>/!i0"]M(GRC6HDC/^Yd[`9H=h39VS0@c&`oc1@dDN:j4U1.Cc9Mq%X>fdVAh@K%W7HTn&\M-3PQQ*r"[u?(((*CJ-^]Kq'=Zu-_"Z$Uf5;/[?kGl4ka3*iGer-b*&Qgl8<6s*72Dt_:k\mWk4/0oePE9_2=Lau4D!nR%dA!EQAf^^b)jc,Aa]pXllW^MIj%_$=-4uG$.<52F'!TU,jk0]n3`skrPSk(N,gA!+@rn+e%_?1%9S*l)OIp7(Y=L[/5m',53Wb2)%$s>sA)7#X.-c/XDh'(WE)Y"LC,AP3?ng"@!kq%k6:iM.s:q()C[')pNoU=YS+!TZt&54cRk,iB\-9/lY:a[*te52)/I7I;pL^84H%o2>>Di2+JY<+a7*Dm7o0$N)g5:A-bTO.`Y++bJ*,AL<9G^C^$l,S]Q5I.AMX2R1[sKBfuMnIHB_PB^Yd6q@Qj`N-pQU0)t<6V!k_%i>0?S/?)a*[RjFZ?oUA;'1t':1'g6Zs$6.VkZ))Vm#qgRWTbh;")G&36Y\jt':=.-3\Up-@]8WLB;VA`YW)nr?kXKad1].$pXZR=%5h0?b!]l6'6$&"-K.=8XMGb@mn/=&C1\_(/1+?F%d&aIKT1(!$3_I?e3cVFHbDJ::=#G`)!>RF,g7e!s9gc];WW6g.`+6Zk@GFiD%Hj$3K>UDL<S;IJ;L.*BX2GBo\iHp55\lV6HM$k_",'U+'22Rq4d+;)!BK<!mbHF3-CDA@j0Ek*?[IO"T8Z?=.43\V<]g8GV@'!+"%;d&t5MM-q+,fPZIC%,&M`*cEk&iVC4clVp$lZ'!]GceM@i])7Z7NJ9KjM8?F_YO_$57o,5%i]/Im_ke;HNbW"&T4R?][!CD>/;u$%UAu*mraJa<Z2]e`O^<`VK_e75'ALB`paP]i)8CslL$?SA'4SZup00H1oX0RWXU+nqO$P"F"DT+n@53Kt]nofeF5marbc[Ta.Mrgc%@P%4f]I7>`CePPr%V=EW*`X-UE3eUn`h03u/=["3$guo1M9\R0;[23@Y@=o%iXNWkNBAOgS(#.fa"/'F6[1)Re9V$c.'5OH&AnsK%5N"]G!L=[`P>pWU2Vl#bDgd@W2cp@t,XI\"H7N^]Q0AAQ&>;2:@VS#pDsYsXnlB1]E7%%WTMls5E7c)8R0t_-?oNXF(,=e##9)8,%?lL^.N$,'`"d:O2jsjCO_Eq^CZ]WKl/>Yk+dRidb.[/gEB(nM51Ge=5/S%ci9U.<bbVD*<^dVO=)iIG$#jp=8.Nt:%KOV$Lk^1sH%".CO@ES6RLC=9p$L+*@tl:Q>5;_DJs'<_\G.7`%X\N<P[3Of:0J^l;];iW88Jmr?pSe-c<0krBQ9X'LC[scqo,>JnfiMBr'+tsps%46-T>3E-#KVt8#V$iI/Dq]tu2T'$ME&=+<D4ADi"n4Eq!O]nA>HP'AT7S?Ba=!1^_oGVVXU)I6Vi%38'EST#.1J]Q2/j\?(@2,#u%=u$/3M]oBM&6^:]M.8QhL)f%g<:LK_.)FE='SZ.a+U@8Np7`3fNi/oLB@r<`FCq\`b(Ps-0=9EL@Ua^"&l6mLLlE"gZQ09pEWCHE%@`S"_<??rjYT4NW^#Nam.21PMj_&0fYiDB2KOh8p3t?%CN)l,ZEc=XWJFd6kiP*q>#MTODM4Q2ko@+]]*stPUc&DpC/ii\^e]XYe%XNV&nPP:J+:#@bkqI\'1_,Ng_36VQ6#ndq.#(me2:(@_1%M(3!1^01<M%-s#(7^4DK1%2p1r/A_P\)Z6!d#<]LBG5h(QRq1f@V"#%.0lUoA)(!`q^dpWa`Y$!mug0\?A9Zf3K=/O0t%DlP6;$*!Sn<Fb"-;6&!4;[M%p1,I7^Q1_"$"p+I8ir"GOXQLaoN]#7P.SLH&MB%ed]$?#(*@$<?&Lp&$Tna<0Tdn#5/kM[Ogbd+r2Z*)Pt\7I5D(JJ.Y-e&qrVL5qQ[9d>G70-6e\sPP#BORV0&tEs@mH&dU3>+B7J$%=Mg)t,CX3pSktk;,k[3l*"cDZU8S3AOtcLO(C1Lo`7Q8ee@ddh_jq'hDIGno4\Qi$Ql2YClpTk?C=E8Md;S`Dd(k@Tb$osK#8[f(%otu8[ZPdoT:dAghO\HZ';[+`T5S0;BXJ7h]3n/0_2QoH2^O+Mj,(GAd")BD>G13]1cg*/>ok]J23$qH+3YT_4f[O$o/B+]`$.obV%Jj0u%j!s8>p2%38[hI,e"D81%=CRpIm.PBm0I9LMF&8-0A:`[/Ff+]_7YV/sEs-lh)O/2s;ab]LYe&!4)9=3U'-gi$_i%\+<bHY4%MgRJ^!hG1N';g0];i9r?=YQDS8I+ghW\Tu6`t:*[FH__p;i#<\RuSC]lD?M0%KU)@$B*V[R5$NNCq:%?+T$'*&WbsL2k)EM0-6*6%.[*t7:og`Y;%(UL.mQ&D"O4)"n:O5DFraVXR[AA:f9Ib!_._Ft))B'6\*Kt"5?i84H)-!n=EQ#X6XrS+JerM%h5Vt3*e^c%l3\6=%k.=VpMRZR.W^DT:\I2-Z8!tb`);B:9(WrSDFa+?ie\\C<WplK\=5[SY>W:t&KS7JUZ]8FiHJe*NN);P!kU!3&@:@Y#%d<E<W[mT+%']6#R6q%;sQs"P8F<=u$l3J\/G.q1'=Rq.e0j8_1M<8_W>m:DTZ!2@*6_dY:`Ru$$=`m!A(gOQ8n=9^4_Q"jQ9f-'de.KR<6nL3q%/q_j1OJu4b(_Arl\dTt!Y^SLq1(7_Y)pd:nGc%@kWlm*e9'fS!_B#)Y7]\YhG&`#^WhX<#/VnH_*elpb=ER^f9X@S$Bj6bd7NKEY%RSf9.\i`RaeYY^<#,,S:ktkjqUIg7/<P`mHF;V52"?#ETA!#5%23SNT$l/\,9tCb9SD;5T%iKlne.p5@DdU8(Fo1<f]D`U<9^$lB%g#4`Aq7orshf`A4Ou_*:Dr7rh?:.u1@XuAtYkfuQS$HrF%"fMkY>CEY1P]BPp-Vc?(D</*(HhLeD^&G^[g3-G0G_M<q_Sbi(gnlt%4_$+\ho=D9^r;3?0GYk#1Xs7u(6*133Xd\X!_8kUn@(hBl`.i,(^gr-=a&Et<p1-sqWuJ><UT@]*`gT?IXCtDITD@'j_d+>VuQer%fA4'04#qeu>G0e1dP8m-_/>Q;X:CGVE[ol_@.<f0NsO<#!7PSQDUeE&pQ?FP8Ya#V@=nRqb#Tq70.h-;!L?/,&uZ!hAP!EO\g3F/%fFV]u%O17ia4!MCLs\Xp"G.D/lJk$-PZFfXLh8GD)U*\ZfIap\3u'Z1%qP$$LW!b6['mPC)e+B7]=GW[d=f5a3FbW-^h,,T/F)k:%$>H>JX&:KbTh:Js&AKt_;p#qadM*YMS"WGt/@$p:0pH15Yn&,pGTBC9CBD8-(Je9V.pWTqh3ahg44!n6l$Oen#Xa/o3Qlr]mEVK'%YeKpM:r'TpKTVdn+=f,Ckp.j<I\Xef98Qh/P(oc"H<_.-8hjp,)O%P/DAK?SS:"Qu_5>g:*#G0>nE7[hALbP>5hG*`5X/%T\@be!%iIYeo/Kha38HipNm^]`)ehQF)RA4>eX_%TK=W)n@_/n9lf#p7CDfffn=KF&s9Z],mg;%:Ybu?BrP_c;:o["'Y_[sl)M:"b'-:rTK%N*m7F*rnWOFZO.EG3B\gm!%@U+SW,'a:SZ!_uY]G8E:4JZTpu+)JZ;b:!KsT7R3E_\mR`Ybrkn!3SLgS#=j.7ZZ<EcIh.S5m-!PF%MqJuK9KG6HBKA5jX==AuY76QZCjU2O/fsiTn%g6@mJaV2-boH<ahRiprPc>N.3Aplifb(8Bq\s_L2t*dNj[1s7-kA'1\Bo5l:[9$%S#>uP0k>`21lJP]#dnam<2UBkJNrq\`'BL]c4\_r?lEA<"]bO4Ih;^f/3nT`3*[@6-\L)$n5Pf*&t;H-/lR[^qML4-3]?4j#*9=$%OqK'2WhF5Br^mHrm_Wm'`d;:`]Te"+<*B-kJ\nMI:Eg17_4H=51_&SW%Wqcp83"pq+;,Dq8a[Vs-rK%Mg#-7.S"o[/ER8pA8Wucg%cluAVR-Qjd7\.h9N$:=HR^@R-`At5fi=M"rE=mtf'MR^A%7M+*E`.I(g7k@/JZ!"fK#HG8c.$TA@tDRXdn6@W"aChe1dj[`Dj<2d%07h;mGgrRA7$:<7<^^77^C763kmGO[1/'22MM?WehC=UUPF(sNHQBaWnURtjqLQ^oFr+([Z=h"c^K$E_;D&=EZ]&K@m#nF-FYWq1%^"_f;GYR??Q"OVSZU=r=#`$=se]Cg"RMEZhJq3@>e08A$./%&LF>d:@5XRe_APt3cr)?fM]0L#5C(%k&1^@-2WtZI!9FCPG7gX$m%RNS7?1oEkqJRE='2,V_-<4E<Vri<IMHd>'I`:GS%ktHmP=F`"YF\^QjdbG0H6l3JgXhc>,k=TBi4u>NUnpE]AS6M7)-:Vg!=m622%hEQXJ[a(-J]fI'_S)']ZBS(1.:jh;/%ap97:3cgIJPP^?1XOh@AfuK8?<]<T&X@OFX>7j`i:?OJ["6=RV,^[`@uYb2k6r895!t*K%c;b?;3pOBf$W[pN'!6hRpl(bhd3T5Qe3!KQ"NY&$$.P'<S)"^I-$"$/CQbX;AIB2c,Ju.;A_CaF)f)!q@g`M1gtJIQ\R3BeTS&Hd%3hN.N+SPMt(e%?5!A$L.M\G'cCD0>`iZa9RD#rciL9Xc52I9H+>L7p[b$NcA].=?_%+qe_FT`1+R)).*Xk#qUNlJj=LU?eIGb[Kg%e6gpfb1m`*FBH#;3ZJQ$!`!%26Q_mdf.3'N@q.Q:&Ks8/AtUf\T*oW/g]48heTr!A?'Cro6!C"_RZ1N3H9_g,++c>,Qa#iP<[KI?%i-5\2;qE5+K_]Kp!!_SVaqF*ZKFR>)aM9Db7Qpp4iff$l-H*^s[K9pG2_%E1?nYBbb?>K?Re+Y,"U^J$-AfuLPf9@mF(&5;!$#2s%J;;_$[1<-r)?[qtD")F9<A-7jblUP?\H+7M#B;=K5gK,4"@cN(^=b*S,WZLV\uaFTOQj%S$FIY.V;"GlN$+\PQF.4<Ylt5SB^K'j%d''3!Qj8DAQC&EWK!OW`Tp7Hb72*ffPS(T[jkD)cLfS`+>Cs1Li\,'nr@*Ok3j_/'*HPCdPpL8)d"k,m")r(m!$5<*f/iQiBFJ]r%i%JKuP#r;LJ)?_ei`mD;:Y8Y^SQC!YG4uW**G$QH"u%LI0nkgr<WKfgZJL0CPR<S,fIk>kGX&?HSUl\7bi#2&<pQJe7q5qZ;p<l<%^;\`?K2Yq_!]J<&+Ps5#@sr)='T#Uc*gp1R**&rQ:PBh+hCD%&M-amP'SD:jW<tg8`ID]U.6KL')]jUFX'jUWJ3IO]eHA$;)Sf5*%;0p#tMUDQ($,#caT^qDn#V\03rBFL;m#3%13`m>PjVEhk:1d>Ii1POV]A5c?4P#o4,"5Op)T_[<'q$Q39hdC%,!RE-"`RV)?M`7F%!,l7i?+Tq9/l`&.`25tM%F*!]UB$3e#J,\`=5-n!^`nD6M\;ZrG:LH[YRo&E[RBki]K)R)cX)p;\m'?LNRfSfXJhBfq_ng``'2nU%p;eC["HIoQZGtfF0/#Wp9[sj^+@)jN_`2C3<)$9kK@cjRV2^IOm#J$\65/EcDQ3mnh6tFV*@fT2\G!D3!QQWi!LkqVK."k'::$O:%ABsYg3.e&e_)W:3J0lpa"c/`E<ZB&Z_)#2X;UJ6e`K%N?h2O#P(jM(n'kh[5MQ5P8k,;sG'oUAsPKE+AR"6TZVVLI:/9itG!G]%<%C8C)RY73`:e6_r1iDu,IfPW&V)i;hI=3:(Q<Z=)9Y>Ur#(9_5%n;AYurWR?LEI`Vid"9C2C0g6+$.tJ?d#"Z.hpj<HXro!l$4OPq%"_#WQ%ktGh#T06G$Htr^k30Fc<2U<eX^d))6/j&`"fu`#IIh&L!I>nmU)A,ZmT%2HN&/p!,,[g1p`,8'B<`RO+DB?(^=L+t-Ggh^%#rd=s[3Ul+<6janj9M>WJC#8_q<!@"8Hn+``VZF@hb\/*mJn'pal;QRAP7dQ?_$IuA+8!7Mpg[.9Gg-mBY\NC-C&ValP"Fa)DB=?%/SJFuMTh6-H1=s>"lF".#i5I+1(btT\oj4q2_&Oq,Sh4:lVh)KQPYPX`cMe.C[ctFGtMQ$.m&_'5kBt1XjnA9F,%J>Q<>Kdn!pBU%8H1>.%cH0DHBD_T)N90NA;b?3@j":>9+O"2<ieHEdhSgk(>4n+]jN%$V^)>i$dbc02\Cs&i,`75S(M@8BkD%HKd<7N.E`4S]fLRE%'BFiS%dO-,-@dYO6j`)S`Z4lMJ54$KP2HtO,)O.8)apfE'YA/_3tdQI5k-4r?FZ8rBN"ZHb:h.ES"5cp'*%Zb/iQJ+Ac[8F5*;N^%j[!+o`j#u4YYK:"Waga5C_-*Ke?MFr@N3\)G_bsfEWWn]enX-C$[`eq`9sA!Flj()k^I?+oR8f#`PC8O*@(t,Z[\)XgdWM>MHE/b%2RFGIWcg?T)bSd-Tu=#kfck!]Y?2c(OFT4uNLF1mb(?8?nK9Z:f(mfg3IUeSN?7SN=LI?T=`A3K@)Li%JPqUjYID7<L.3GpErn7o%WsERB>*c^Mc"qJjlXfZo3CfId%hK!iqI&P;/HWBn(Ss[kGe10L3gisI*':5X':&"$kXsA?0%P&hg#UZ,1LC8@7Ajn'NAam7lTLG+%5gh>A*7X?lK(3"S@q099rJobb6Yc*-1I((3h!'K%&][VOSAu4f8QU)f7C+qtTWeE2K>.g-T]hP0dhVmm?!/Y]ola<MS6^[hWQ1V7%G$i*8_U94&EcDVArL'c^3j/8>;(MO(p8[/QG1+h&^oG+)8ls4Wl_d<iD-32\*AoWG!]X]YMu`f%G$(!6IDX]Wor/4tf*0MK)?q;g%@[LGsZUR]GJC)eac)F[5.dD\l<W,uG$*,W.R&4fM/U-;8R3)OZNVTW>SKu.9_5>I#-s3<hQMjFrA^+=A2IaCc"X]6B(1Ni1e$=4d%AQQLjE79O2,/KWTj@*F&TpKGT_+)<hUu71#&"[98O(7d4X[M?*>t*T;Y5o)Ih#OHqVhp11q@V7D36;BNDp9+titK%<C^i7Ed[mIT%%Mp7CE&2ho8I`-OEa6:[<N"]1&7_\JMgafl(rZb)J/r&]1QNE^_TAg-Q5pk&7>#k07BrbP4#)FA3iT44V(FWnN[WY6JpAA+8'ssG%YW',b!K0Jp,QhYE+/4FZ;dngj/@Is3U,?od'ce0[*+#QUjVW?F>Z=-8aqdB2C-RP;S?44MT2!iM&2T&=1lQ6F_YjZ:A^-5u,dHGA%0nH,d2ZP5u.08X)B1'opA^;dI[5P5d'mZlKZ,%LSeEX?Ih@!Ea7a4%m\.Dr-CoJcSciaN$A"LK+K7I*oH)cap'.(T4_YV5t_[87K%0_r.-UL@tm![H=_rM]@*aU\)?![ATVN2kG8S$(te>'/<q;&Y)=>pX+186-Xe2Ghdu)&!_XN>eY!^s)<dP3b]+WQKPi$egi%CVZfl%W:V,!39^Q]!T9HiSAM))-Y)>4]opokb=?do8`l7h8mkj]J4<rkSGikd0hoqB="o7IlnM(7:$,pp@nU0N,Lp<9Pq>PprIE3".L<+g%@j\Us@&0oG6)Zs()LllqlRhCYO0OI0l$,bP?t"9;Y:rnIN+"!YDebcbP*B!icj''.R=DhN_#IP(AGjah+bNaZ&q`#1aE4A9$N`EQ%k6RJ#a@:iAK\^)tX%<SU(SPVq$(Uj%<>EnDLX4;C%C7#5mhm)l>t.,E6<$>"X(u@Nf7<J`)[C_KAZIEjN3s_9=!Ku7'dHK=*G0*H%^3:WVm+;g=<!t2)+dVPYIbMRY)jm"l-T*BY-Nr-0=.q75"`/4fPVdo]R'I'0QOOkP$R;,m[4Xl#/B&MAk:F/FPMN3f!Lmu%%6A3Y%/d9WJi?3EG%bd"tgS`ofgbi6E+,_]kY?khCT]T=6V.A]-0S7@nYE0=E;:nBuYZ<b*6)RIf9&-AjEhK!(V.gql$t_d.4tXo#QDk">%+X>3C9=5/[Y/n1=cQrXp<ceI;\jYl%"?e#ef]B1ia']Z-:T\MQZC<cqRu/)kAdc!bJ0Ud>^rZg[mAaXA^abDV@8g,e$6rZtJeT&!%U/PAg%k1+=;oHK.jcCi%eJ23i=UciHA07M+GG9,#oDSH$g5MhAf)u2L6&SK#Bf$CjFabF>S'2@I+C#GM_tl3"&0kg%>;J9r6kV%/%>WI,$[3Nhk3&+KIh0d3[,t"0RQBQK)^]Gn:!P%<q9suCo9*7:GAjd]TDB9=JGFGh5+h1UX``S>JS<]'W9I?]2`E%q,ZS3lQ\$o`e%8CuF7ko$BTS&jtIf+sj[!%otN^ePlJL5*tB3/A=i]/.(@<o4k`!,mhb?8R4q^=LLh2O0uHC/Gg2EWm@R9?*-ZG'RVf=dI%V@U&L5%]X2jW8o=8K1<>ig<?YM!A%PWKFhs$JCGO*KBGr-.0'^npB%.McCimdY3j>rcgsWJZA=cG.=_h%Kh5UVuKGCk1dLbk`lgro8A>)*O%nrXNGYU!Z832k7FVW),QLq^'-gfk1XY3,CoRXr@W3FqjbB$9sJDVacTBbjBOfck2sn:O<Ak`W(tWs^ZJk"Cta/'pmHcJY_ZGeC#3%`>.N$6*-teK"fE\WpTou@[hZpCn0!;[?ZeX4,;,pq0A`%OcqU/=&["op`G9I1MukU75^Bu=2K=:j7OZ7'$873l%J1s+Ap$\S]mMC%UH(eS1>\%NmtfpY&XQI?<?s\/91&o,m3oPg=j47)VUfmbb_cS\h]&2n8T(Fd?\GF=4.6;akA116(+RpGRtOfoFJVPoVG_PW\jsQ+%kf4\4Au/UZYrWnSd[%<_7R(^'lT5iq?qX^0_k:$PDeap>Ej@A4B!V,Bolk?^E:nk;4pC<>XUBr<KAMP?L3GXWgHab><O'kVT-rV%%:?$=J@dMmKb?Q(0:,==]@7R[cF^,G>?#9r%0*WUO#)BVU%Mb@P;6Beomc2mS]Dt958qWT-knm[0c2@reQGPZ1!h=9dB0GGF,N'iT%>)tf>RF@8)d0Dk7q-<e`j7-[8HtYmo@^h;a'30*onbDq.>K/90p.Cf_Ilmbtm5B+V,M$IH=YQmTZ$MT^#tSj2*gYhmfM7R(nWB9@%n/N=<-B#<L16mI2a+XJ%)\].DOS0_iS/PEX^k63h;eu`Jirfd1XHtl>jRi!9DTr%pQ5hj-CAokSFfS(U\+0A!deUrqrWJCgRZBLM%s3oW@Z_-!c'&o8T=![=1=L()IRCD6G5Cf@Y^n-a<Um^[C-'*S38k_'L<tZr3HHJ#FGk")k]&'qNZQ`_<ri94<(:^?c=7-g)X.AaA%Gn!!s2+DJ:PDn5aG63f1#Bo(ACh\!!^,KC)4/.:-3VI#>::\8-hWaZ=<?kg<@YSL2Y)"sefMcp3^YeItSOVF"d^uZk\K3C)mqe)[%#cG%AeBjP1Ms*>+Ztc(L.iF.0(5o:KZ^pcBf*e,t:Qm+DJ$4f6l^d$ognI?G,^?MGW5FFFqe>_HG3;5DPIIH-V)7Feb`->C#\PBg%r4OTZ\rDmiq/sk5bTpE&RRa$s3a6=oA/mg';Q/5KX"=!Q"&th8T?*HSDh#X)hQ-(D@.Z1SQ7A1FU1!+\7@k6n[JA:c9HcT1?FoHt%Q*RK4o%jLpLEIp*?nce*@7ncr4-)fs"hN[S=B.sOei'H]FL?U]7&aE,\bj=O%DSPPUE3sklu>$g33l;\ADUGTC_=n<apmb"$n$XY%8_SNhf!dWm3/eO>?q'lZ*S#V9%?i/WN]KD!Mt\;?(pA0DqGDTBpgXLZ-t_e3R2p)dbVSo8$$Gn!Z#0.<Nh'#m,6m'2#8J4[U;UQX%gliZ$Nq`*,K&b1#S+Ca*F)"W:'B%(SNMQT_jFaZkOW*Kk7j09"_tkNi_T4rU4H-#]1&]ij?/p1PIr($qC.V@kd2\4S$\p+OL?P&[%XmkE7Q_O;6V5P'*W+I*TrF=6G/q?_&+<i)aGPZDY_'@m3MKr8V6F!c((\+BE2HS=[\fN$6M\W[QJs-\eh!'tU!rnb=BFtUh`>6O(%)grXs5R[7nOK^`5(t!eA,>XcMlA9alI8Jiu!@N`O>pjX_<jmk=2gO'u+]?Q7#cG4d3EVfhb@D&grALM+G$hJG,2pUjBFaLf62Gie%E&5gu3h,qiW+`>`D1QnZ8K"#34CbtS2!sm07qZ7+juEKU[^&']G3[i[g/%hI1s??N_5m]Kj%3_GEVuU4Vs;ehiq!/oq]Tt-]I"Zr%eiO9<$BhZ$>/7c*KdgI;d(1?HGX66([f=H]D?MMpTAk_(ab>L\G%l-WRj(puPj>%O3Q32eKX$Ag2mQ^-gS05,0G:V+3Hr]$U?/CI%W)gdZ26&5":-a)CQn-"(*-u."GE+@YeuC[6I$5U0)D)EAb.##c!WpjhSq^Y=C.9\=aE#Ngpo1^%,K.\<Cj@Mn*oZ=_.A=>s$idRC%n^5^f[=3u=+Um?:-dV2_H1\]Fh.G]K'iW9o4.1`t?B`;ao0bB9IN0_C*SH=+2k$0\Nb?KMY0<oNW0CGFo%:"_/.6YAQ%EQW>GgAT%TA1h)>L>q5GpoZp*Hu\;s-uq=Y]5d\DaU-1+V[X`_%Fn^<@0k\6j'L/lo^kjDg.8ff&jV_Zr>JPkb:Kb(L*b'TM)`_00WK'F:$?Q%3=9"cg#GgUC2=33j1!io#X8t8b#u7C'KQjtOr_c*H67/]97;]a^,JRPUsDQQ/YG@;QW"O#\,q*+81G*YkRfeYfJFT(JmtEA,)<Sm%<mg-DfM"kO]GR?H((A415.1Y?14prVQYT,\%$M/\g\@8U[=MOWBJ;1R\sWmMi`^/>/_Q#llNBdHR$-N:'O[$$4P7lh_]U-E<MIr"%:0e&-'4>hSXA;u*0oiE#=9&d:66(e`-S<NH&t9@-&2Qnk]iC,L[rjgV"YhJX3!aS_WlKdgA"/^8F'7,Bek`l;O%f$)S`bZdZE5BP%$RV&;'mWe8O8Gq[HU[hOGjfU%&'+NpU`Z(kD`2+;`GO8?jegfhEtfiu>@YTp.UDk>,c8Ff<S:e/>8't\"7[_-H=#"r`qiMKInE1p%mF1I*4f,FYDcdjd`/mBGKd5ph@JGoBBBjKFXmb@>b3e+eZ8tttQjeTnG4E75%JqnTU$j-NWV&6e-K.uI!3Re*eON!nS=bF[Mf$Oi%[on[aA(A[fEdt[c1g--@@(Uj#m`^7QAAPmM.I0;rE=sS<W</4U=Epb4omR[Gc(3+FJ^"C/ZU:=@Oo+i_#Tj5!N)/1l"m/cLOJdRu%#56sR87iIo],*q;_9([nYd,LFFoN<S8>d__#3``j*@%#@>rM1&H];ma)AC!BM#&k]ng%^XJ5E[/on^QkgW=$kY)Yt^^Y9G&:DGG.%N4c>l6O5Bs&rR:hOq88s]o$m5VI>`=WqF:NZ^kGom8]<e;6tEd&"#*)8OaOJ,p<-'GfilRmWX_8H?4<P)9U34hjU2i\aTXFH,O>I%"C)"X=;`e_QY+AVX[+oD4ec@IU5Wo'/M"usIjX9Yoo[<Zot\/AVs`lp4Q<&"5[u:dlI_,CW_N]M(;VO$(5k:HY!rGl&1Dsh)o-a:%U7knt',-tYN\6.qpO0M1(>jMj^hGqo;OX(q[#A@l7l1SiDR.',ga>B`-@Z:^@OPad`V*[2^N$$VMS>LgaX0`J1_Yh'Dg+jYlfg!A%O%2MjK_cdN7s2R0#IBVl7n>/jC[--`f-cUU+Gq+alE^+d]6cB94^$Wf"u`CEZ"\?h(';T;WOiB!5"13$P%jhuof/ACA&e8C;.dJ\%f(*;fn?^.WL[rEe]h,Xj8`D^GZSFCE='c=5F92(T=kd#pXHH)h6R?eEZ6^VqY(o`W"NJ!`R9s0Xegq:dA?\l>r/K6!nlBT>[\VU\%"nk%u34-)*"[d@B;lFSlAnXtbaVL!=M^Zj_F7(mogWf*3gNIX%8j$Xd2sX3V&%kg!NaP+q7sO*qCW3B],V(_<AF-jO3;jcHBN"F;%aWmrUcb&V6,ngn0"nUo0Hu@HZGHq=>jG17^(mHj9!M;HQ)L@JckXkKVRB=?\nJSEthbpbQ5DI]K]#^$uoJ!MfC"fVF1aaNb4&M_E%m%-Tq8OsX"V]m:F!/g>Q#?;?4DKN5"mqMY1?-"1X4A`Hu`lY5F%k96mS)@2f#O<LuU,,GSI\%p.dc/1c0C*561rZ=QLcGQ\g#HB6%1gl>f"W0u],8X?KZHCZY"&%Pn]A@'q.dCFl$r!+^&jS"<#r!`jT-G6GY[ZtH-jm=,("$/H3N"\>(+&6^$R3BdIe*S?<Qjq^!GdSe%4XCTRWKW*l8Od>"*Iq(pB!!KWAt-U)HJUCF/KY)@L3]na@YpG(aTO$N]pt-L;s;#YMO(%]<1A3pPXpsJ<6a;Ji]@ki''TTm[*>eE%4I1gtUKF,OL=W@R1sA+l!,>mhT$N.f;kGltAgbka=f7j7P6Fh1*geHT1V#5+6of<U^ci&rU`S6FmAOhk0i5@(ANbC)JK/lJ($M.g%X;a8&jOc^E8^3U=Rp<W>YNqZ_Tcn!rQh``nOfsrqMNHl#V5p&4Jb*7@1_!'i=9,>R;?:<bFtL,"s!YHYJq4njIA?d&c*W@>Q/XA&%=0be7!\=d'%NUa4TN.>4N?_VqK[@VG^_::C$-G0L(ZX!JJPGISoImM2R)-uq'c=Uc-Om7?7Uf"NR!!1*)^gHp2;^9(,SLP0qp:,7%=b*c[>si@#ZG/c9&^0I'Sghrmg[SR$DSH8";O5XC;@1EL`%'^4ck9cW-%R-.EbOD**1C5dAK3u>5Rq!e:smcZk?h=fBp39'3ar*_%4YC_\L,]7l)-CkjLQUn?&DgQlik^j4KK@1D!W\!jq#DprWWrp\&=ced>'FDYk2p9&at/WcdSO4kNdVI%X(M"hZ$%%VP''W!f#c0t%Jd?eH+Ojrf]l>N)H=<SJ:"EfG'`_dcTgrZeZn[m-Go1F`:6j1q8U`5h\@sOcT'#BU(2;(:N_Lc<dup7hp[c018BFbQbe'Y&YSH)\%jp6,o5`%532YeR(Vs@d])M'Sb2UNc]csir!B9&F3PH?ge;QL:MYah/YPKg=l3D#5W!RLRt-(KsGEsl#IGdBQ>o9;nt[BFmKRUlne%;1(H(:HaZ<a>aTaJ^pW;Sf0Q/j(-=dlj(u:kc+4a.6U]UO6HjO2YC>`9CSL(K327i4=&<03SCj549oq;F02QbZ0^oe\u"U_=&16t%/.Dg+\t6cAZe6Ki5?\7JB">?^C%:]710cNi=?aEto5):O^)r(#7;#iKclL@2C*'6,8!c5WFBPXh'CV.EC43KID;A;r>L-5k4L[9(%;f7IbP?:'k>Y_*DPCVq-;s7pBGoKUVo:0Xi7HIt,]UgVof>)S;/t2>XGHQNKTV<-O'mn\;P9hFiR!pip(hZl_>#Z4G%bW<]2#:f)%C_a;C'SGbrlET:Fi3k_IW%>al)FlR(\B$u:`[0+iY9^3bG7'Y3=9-C+$la'<>a"<'-OXRu/sLMnPt2gDb@I(m/=A>*<3uP%WsQDk%Sk#>ZGc=Y?,#3Dc5q(_UCO5R('D=)*M106hCrGN<DX7GcKlqIf'lRJDd7]#?7pRL1Cj_eM$jX$!egkFa>`7Es_Bp7@;,k!qa[&e0%]GK$RkAUt;%_Gin-c1]\U3ZtpOWtqWRFJXddr%?MV+M#b/;>"ci&9g@gnHBV3;+rfc9pI_]@T?uKSrB-1oG\f'1?"J00XM9CU0p"%=sinfFbkLQK_NPcj`R%m<sFf3UtU:XT!U&JOs+CR%q(W35;f;j=p7dt,5OSYi"RLR"5+>r6pY8oF(UA#dHLetLMco@(-PEcbSs-K%\7(Lpe%FSG07cfkV"\#2[YM)#COr(@jNK"X;_'o7e!+J%Sk]>H[6ZCSW4T!R1IMm&)4TiJ"aSE@8[OaY#2:"8ag)nZ!aS<R('r+J%9[EmB?q:<9]DI!ec3WE3h]tZa`S>l&Y^g](Jus>i.P<X=k"V1;pA?(r:bnhVeOrTOftbk$IfWrcVA.,N7CWkE2%14Uo*^,.4YJ;1%m?Vj)0JYLX&P(j%p-]lo0IK7#@`7kZ.+H`c:b;QBZ98*L</PkoNioup@I,qb/a/`l2+J4IOID%sG?K`#-T+O8D5lQYjS#fmFjjkq%I8p#mfrV4jI?jD;>&Lc]bF#E/i*e8h.t*_)B9%D21c6?L`+8l18MN'V^/q40:57cf7H=?YjqOd10u`;n:I]T&fhs9^Zns6KNtJ:/%D1,QQBj6e'ZM'B%2^mhpL=UaI?=N&7]G&2C3[f=<WLPK7V@ks@,Wg@:S_"JhR-[Kbhti(8'+qgP7t_$Y.J4)hZ#eXQqG-r4WSsYS%XNDbaYGfp7pNB+*TGM@Wd0dgXAVQqf;H!b8,^,SS9DTeTSt-,'?t\Y<2=o)/B/4+DZ%XbgSn$:r5F"2j2+FLNY2<`QAa-1)6uV&R%?BoWJaAOn9;bsjVbde"AU=oX2]/eoVm%1c8eI,-^-Q948?$Oo#l&JGC]RcNm$egCC`js\[l2jblC;McJ3&YCWn:"C<&99F^l9UU=%alissbB]eW<-8VbYAWST&2KWIm_*YI=^Ffc$<)-W?iaX.kTW`Q-%W%mbi,oG:nT7tCisNV4!C7@B6d,Lc0(ZEK--:\OOO:<(:;$R%OOTRYZW$0:$ePi*W86-_NR!_.4&`C8<)lk/)ddSpEdEm6c\/G+_Q`N;?@8NhV&kECA9II"k.GLKHKfdnA`kp_KY<K<3)W1X<JbMW%O3bV=M@FTDqOeGno4EKFlr<ZV[c_Q0[&r1U,i,kHMbL4TDo/G9L_8'12gWgK59<'_S.5C?)@=_ZEDO-:POA.Q[0J7-M$W:')W#M_%Z5f!'HE]nLH^71N<70,-)?He><^("Rf\&.,W!58)AOkH2UjCHsIoZqnB3p-6ZG`H4]g!74[kHff9m)I'HCe5W]A/Ke_%'AY!7YDs%!a+U7d#YmX\ofi]2gs;4ArE.9Ch'\D>db^\RF\YI^??oHWJj>ofLC/jRMSs$XfJbDoaTX;,`=YK>k]K4&\_:sUqPdkE+VrpTjoNe%*fRW;<NsUqYb6/q&T;r-`;.E(f<uVEpG3bqf'ZBKrl5W(c)iH4J2h1'C9fi`55Jl<Cc?op;t_s=*'@EH]hs84Dd,Sd*fItPer1fd%)P5tK_DbbPAQlJYm@l+AP&IKA^D;H_Z^`3pgrNi&L1tge=%dqX($IE,/K!uXpmE)gR-h[BIEMX(\?a'6hUZ.=>usC$$pZt*]K4>2%;0I&TGe,p0VK(#9FnjJR4053270P1CEbX[\#]$Sg-n?UWm]oT?hD<Uq2TVh.!#_[^*Tk*$KL<"D`RBXl)sotX@nWn0!LbdN!3X=L%-=J2XQc)+&,]&&b$<W*Y_p!+Di#L)ZolX,,8/Lpk)DB#6)C[&q4W1qbddtIK01WE=3IY6`#iYp9l065a=fkk.8qt&cI6P"=$:)"=%Y`.%Vc?5?4%"c_Y\EQthkjLC.KF-`ag*.4Pbsg5qRcIj,9<,l#S\<:TioaP]fEK_[j:+AOg3M#/<=gNnQR;"u/6SgS;mcm\:.!Qn%^mQ'jT2-7l?R7HL.=!f<k4&H,FEL%'"ICsaMh0RNZm=ChY5V9@V!^61RdfZd,(0-cA)UA\pLHkk,l44+:'UAt1HS`cpN\)[QdhT!%I-t2%3<m,:*E,S8=udpmJXhM9>+hRi^jHUG+1e+9/n7-`?&)LLb+dYK%@\-.$Z&iWlZ`umk?31PYY9.'>IH`)50B$O'X6*LS/E8r%AVRpC7j0UeCeU@D(V6ou[52FfpdUuYFhEuMHS&`7_CR$[!TUj]K&4JJ,Y=;8j<=6(NuE285UJ/1:5aRY;H5g5a3l!!/.23cK/i%L%!KcnI"3:mfDdlXs"L*rrp?*_f<34o:bWpNhF@S/<j#dAKV=D\9H6tcLIBlJ2A?.]3Feou"hQnQ"o]QW"lr_q)5c-):ILTc,C&;bH%#2mQd+FpA=MM%GNN)@^R.^`,"7BN18;Y2A4#+P"5ZJn&[+)&(i<[_o3\]8q<Ph,up_$<oR=0O=OEe(Th33%7iEu9,?6eRVn%H#($%3W)FfCUJe$gi5NCI_Z-"#40Ci0Ho7g%>.?+&X%!rJiJkIZWMaFD#6&f>Om13rp!r6O<j?DfOf\/3:F7Z)QNqD*ef#!!q.uu)_<-M%"81C)lVZWK8%`Lb;VT^&*Pi)bjm@6"XGULdYS:g7QftD>=WRAh?tIYH0C_f+3Y_tqJohS$cb(j]P%<"'m(r>=@WW4,K$[:"ec;(7%1?lWO:XuZmXd"TCc\GL89![h-ce)cBn:B,L(NNq*fSO=i[c6@-SE`\0XD-#-Ehe.o/,b8eRH>_JoFtPgg_!_Rh6-f6hlnHg,3Sa<%pb-dnRAb\8Q>K)?3shN,0^OG6_GcUmS#5\\,Kn11XU<(bB&?XU,a2s-8g=tSajE&[iQI7q_&ANU"6$WEgeS@.FU]aEPFi@#,&5L+%2P]XVUGRBYU<$jW!WMW.+`A!gNB$+Cg$pY?C.=^hT>C&;]YDf<\Bth4fh*"959GNBOV=0nAIt<-^+c@@PI!)T&G,Qa7kO5=?aO3'%!gut-UU@O;/K<6[1`YKTn<?pJF;6[f'Z\o(bOH<MJ_=;^#j%/%I249VhN_X-.aGb%+9j2Ko'EZcZ&aDVD8a9\fljdomMlGb;;T:A%#LB[JDK[S@b%pS+drq[KPD#F\/DFP6TJqn4HNOD@[=[3*r*p+QS[;`V>6@nsTZe?K<2)]>A[9X1UR#e0!(TtmONc,83>HG=9Hd0]%0JEO2:/*qGM:[a'C!l\Lb-]Y!RP[!'.e"nhQ$E^UC@!3t%+XS+ltk8\B<cQlW+64t3LdJm.3jac^qWr3Rj;3.bk%617t^;[($Y`$%@mI0&<0XPXZ5F4*=nU!VFr:Ri9bn%Fo+GMnWmF^pN!'0aHESiVQ=McC-s2D.HGZ's`'#D^n`CK3E0?>u)O2O4mYJ;P'T:?4g+IET%LFPWW_%p&PTJfH,E%=bK6rjmg2d/Ms;fu9QA!-)Q=^hG-Q7Mo3oc=T(ZNQB40&']H><NF(b]]Y)3^`-.@AhdC(<1/@]HKjs;bH?:%*%KKP-r/?&"2N2Cb?q#[#ak'-e"pl*'+'n`E&KtLZjZ57OThMWlfbu>Un`ab_q+eZQC9-]ZRQ"+1R%nSLHSPQ_Fl1d-Tgu3aX60n%F'[L[Z=G+I]k)l;!=)4:EBH^@2cBCU2<k*T>Fn+&o00\N;O"JdYJX'*^8@Z&:drGQF3H\)RnuNZl/cI@OmT3QQQdZfO$u`3%B71+%_Kn%4)@fR;`,s/M$\W(>8Y*`/_Q)bgp\haO/.#uZ$I!1l%$P9.LL@%@:7C<p^H2K%3sRo68M99RZS_o\$-m?lqe;n..YMEG&m_%%%h+`33*It5\F'26^jOKLV,;THnqRV^(Hl*Dg-&sM:KgE-%&N*m*$)<A4rJb9TD'<W1-)A5#p&WJ!WMX!U+u+/EOJIe5i++V;Y)9tg%aoWQQJh=TSQmBq2<31A30GVQe@V:uO1XpL1+K(UH.faecUkMD"$D_M%BhV_A_*1=9eUl/*?q4)hDPRD08"lu=U'5hcZd$P?ki#:P%WB=nG@.q^tBT&FOXZ&WlHA$B1jiAFc0AR`s?'dl]?dIdX[A1$,MuCSgXX:.#<4*&a&rY/U(>Wa0((8glnRYsVm45=X>eMOGT0qh+%kdO7Y[c,/;[4@Z.6T2Lgp+IRHjs7iTet/$mB*.>PWgu=_=jb+9:IU[^+nK;Yi*rUYBoFEiH@hW`>>ejCeHSLpFYSeOEd"o5*Pk"E%r*+d_O0Lt'[qiS.J>98t6/k]i\efuX/?:\n]sZF*2Y$N&N1seONbR%!4\e8I?-Kr%c,td?YA`V[Xq1KTmju"3h^b;Q0&YM0BY:gF%?&2E844a.Y[O+2YP"Rj\--sb.nB\l$%OVRk_=EiqD&n\SqaWQ"E>%%S)_S'6#LeeClGuQ)G!Z'h?FBGD(n[/%(\X0W^R#&IV/p&L%4RI[7Y5Os16_E+fp4m"DO,Xu<RYBRNIo291VMG>;JC!"(_.,**p0L>9c:t6;nT;D*VjrFK2^(^"l?F4/YfQa]EY'cL1t4Y;=C/.o%8fc[FBW%[Fb_!VfH?_%KZV4l@FR`#D.MY%/XkIZP,O!V4U&se1:t,=h++%nq\PWRtCZ^fRIOL,GMTGC<4pGpg.'d^\bOIB:Z.E'p%[HDf'[RL6b;Y+&,gX,rle"caT.76T10N;kf'$D5fB.fakH?>8h&E>fR="'jJc+mH\JUY-ZNTK/7.154K/MZ?*XP4G*?a$!p_pQB8%DX>W1be#K"`6QiV+Zo+a&;LqY4PCX07s_M(q-kD.\aOe\&i]QuNC-T)fFL>)Q_)Vb,d'pO*J\/H^cW#3@]b5NIh"i/H3Q2ZResBI%B0YhEEn&4/Nu[6Z'8YU?BqY[<UuFM'pIcp,DV54^hgc,;E*V9UKe=b<U%.%L0?#\N'f^M3eXbh7#1U>;,m+up6.;%<$LE2_TuVYf%ZPtQh2k[Jrrk5b\Z7JMPiW7R#7'V[,n]<rpb-k@O=X2aD"kf&2&QlBY'j,1pb%g.a7OM_nIuKoU^iP*[3-8:cPC1fV%s+()&)-$Y%&+21g%%;hi#2+tZ:")LR^:O`_)k(sj8lYN<N@=#mjHM=<bFeiMfGg,M--?@c.k-S\bdP9mYWl^I-!r0LgkfqqUHt-?7[^T#PbHF(%cJ<Eb^@h;HO>j)tZ)NYIrfEE%.MW(J!f1Et$Qg:oXT@:KMW:9KBAPsc2ma:E,=mK_K7XYh@(G#PNf"(\G*=_LGNJ@fnE+JG#4Xu'%r=#b3KH3ka<9r*P*$8`ZLk$/i?)!:oKR>ugf#*An:[D#a\Q6",!9j*7E@rc>?$M@7(8,K7"QS(@\;gLT/[JoO"C>)kAbQ5i.4U-r%AkdYQ&2>Oo5XI]#MLLAm,m1U9ds8[h$E>_"E9*kd#HVt^VfB1G2I?N!q=W^U;fA%Rfg>bkLrAX5bDruF0)d%dT(^kA3DL;sfttT[%ah.bD`6/00>N5_MqnWZDe>#Z3gUSAgpIo1Me(T%Y0^t"S!2BKjof'=SmM3qp@g">e[gMTP%4Z._S_K$QeW:V)(@+);+gSPlV5%Xb%fU-+u]n$Z_Li\5[1(:^[NOGM^9rfS?`i2JCCijqoJ#q$Qh/SmKgce2UO*(#V@6#5o"0;HF^k*eaq*lmC!;("R1\.KoTNV;QK]&Q?%Ra`5VkdHKPE)D;=9lUTiPH_YtIk92q^'LqlC?e9)IZZR:ebHgJLm_cn><a[iiLS?39rSB@CWlhj0(7pT3j"j=W$#>A_WA[G_+Gg5%X<&`-H4Vtj2;'Y`WgDgf!)$r8\eN>4=_FlLSFY#TK?U=s0+)l_)pIg1<Vqh2@[!CWU\F:<./e2S^VF<A1rFln='Wl2GE[Yrn@CJ]%Zu2q2b!r.)BrQP=DLM(1_CBmSRuL-!h*gHs\E+s*oclS$q=RA(MW.:ihGk'-:r7MhEfl:&JZtG3c)\r]JCl:K./<]=.Uil.gQs\j%r^2JS/G':IhjQ-"Orc-p@!7#-Gg^\H!;Ef]+)UHk]rRT^9-WH&BJ*9uTZj*OJE^6i.Js"_P`0#f]FG%<>bk(,A8n`jV%OAt]%LA6%PO).O(_Km0eJ([4M2e6uG0oR;bAT:GpN4CL-*cgTI,Cd'MHWab5.VQ()hJmR;DS,_43\.2Rg<NnakXKSfE%mT6.YB*!:*4PHmE[S%>#t#Z!$tEpPa$f,#)A(dX+<tmYBIoEJ.f'$5d>PBa;&Z0]s^tfi/rJVS#0CEfK3J-P;fJuoV'AIgk(ec`j>UP;q-XZRf3%ucYKVe%4Dt[jmE-AhE3h\bGO/ck]K9!EJ9_*/k!SDGVP1=7KIQ,FWaL*C!&W]`?o]/\%:f+a!,T!ZgL(nra^JR(f_NX?q<Es.)7gZ\:k_K2%0469h)!LVbIDbXhXClNGV7-1mrT<\MS-P]d0Fq9iKn@/l@[$3YOiW?1jXaQpo"e)K&hn[UA[(6S=eL_EZQ)#1O1'YWilu7n#6l\g%fDI*V>uNokV@L!.AHkeP.5+:BCI6^O"2hLOM$,cl\7%qg3^kD^=7L5dh<YN79nSXS+QW`K?7AT`%_G<P;.I7Ve-@_iU5HR[rF00!%7eCpZ#-.Z!A>-#)+Lt2I<b]ho<7SNQ[gecp9@V%C2+;SG0]+ZMd<]&>2Kpd7J-sOX-NIPYXEF]9AH[7bP*K%,)aHCc&]!@N4+8Z9%1shsKg1ZD2H=I;"[V*UW%#[&f?l8>E2;YEV*]03&J6p->p`-H0^^9s=+9qth$['4QJ8=XT<bi/1qfi:'_9Wie;K[M\Pn[('f0`ET%LA1RW^h-R*2):%b?'?"8mM.,?k$G%XK+W'/"^oZ0.Kbmi!*3J[C)^n!3!5(1:sE'Pi9m;'i%V-\V`4D(TlDmo2qq7ec^EjM_$equ%dcG1:H6A`\c!hZ71J6jSq*84L_-l]NNRDO+`;2cDjt]KV;E@qb<ab4Sm)VQqHQ=hDc]]i22H<OTA"XsI!H#t=fMbT+;H[VBCUm@V%29u@I*$5[J1s_QOgCHI)4p+64!,/OBXI0D4f[YNVfMi*Y^oPUQ#gk/)cG7]u`6?Y/2dIYY"2;T8A$XJei+-:ac^=cnb5To-WU,M:%Jp0"F$d0THVXLZV8Y6H*l[3%4Z1\K>ega.V]8d)D1TY+E@plaBl@(7OnR*Xp]``u*]ULhO$8dr\:G3m!Aj:CRBO=j/JRAat\21??%,9'a9&d?2j.Lh<%.'`rWhHjp$8tEmsBl@;,8Vj@<`E8XM%m@T=oN40.7<<Lpk:eZq=.n7'(oZ6-c[hK7E7B/lA$],F##KCH*cKZA%8ms>q5H>l26Erm:mpc>ghmKm>?fplr*=VDU;[#7$o/MG;b74e;WI@*dV]D7AZnAiA.u?8ClSOa0c/m1)b[3485>71Zl<&A$DlLN_%3n&p+!6Nlq"P#51[Lt:]l$JT\k$_XSnW8`R&;FXBC0m9@Ypg)T1!CBV@&4+2Fn/#a`F)?e^Y.`T1NV0U@gH4^g@)G]]"sosQ6qfD%`lCH5da4k>0nF"n)afD>aB01ubpfoahN)%^%N$$E:mF<H]h)SnUqL)-FXrq_Uh"s[[`qI9hVR/1+nXT)I(![g*Bb[O#)7o>_TE_Z%T$Pd0Gi=nqn^Q2_WlBor]k"A4ZWXc#ZVho#e,o9"8:1\RYJ;%0eIq4SX]eS;<OVM_%+pD7G.8]%e+f*4%A0=9%"oeN]uh1Dc;utL%<JDX?MlI1\6,CdKT'A;HBZ[9BiH-gg`=^9VqEj+<?bXtlJ7VIuJG,9c.j6>F`H0;?_8'fl1BO'9o%%E@au_2N?*h[2!0c`p0+n4r%Ri[MbK'g&nrL4P\Hds<6/'^+81`E'DAG;OS:`,L9a[HB[2b\NH2eB3M%RAms`'CXORN5s05[V.2d/)0c[XB)'<#8Lu@0/\u.*T-A%MVHjb^0bCH\Q>Wkj4+Qg0YV4$@tM\*EO-APK/nFkXO)7"]P-*$0O(Ka$T1S9QT]9Sf,T_g;fK'+1H&hE++*IeT$"2eMOkXB*H2"2%8Y'O.7ktQ6iuCY!Yt6:d\]4GbTD^7K3]De=k1\u[hqiFU0n`^VPtImQ;?_d=a]Zj+ka(01T!2A:fq]`/BKC/CZ[GO/e?YcV[hm1T%W"0;1^<=)#rDKDIp5m+G]FnnJH7%st3fU+OSC'p'FTkSd;12"\;cYa/<tL0i&']bG0qdN64bNj+_#Uj!,.gP`p3Mq!@6piS`5j-g%:>;07=%mD@%)Ok8%9m8oG9F=_-H):[TOkkoqNb!@6bpg3l'<b:Q#u9XMki@e(qiKp$.AF%<[-Nc*R'Nf;T1noL)?6G:hHEDVFF_9%fd#0+R=miS;:FS@>19_,.;,%$Si#`t$J$a2'(LaCKrqM`W)L7De.j)j8f<''W#.pkWS")q^.]6Z:@YP[kA*WRUWo6lAY6#6Wn<Z]%Ad;N5)aegC@-*eJ9n>L%EA^Ie2Yo`de#^RQ4q],U(eMnM$psBRe;08',UuWjbi"'dJ/Ksr6R*&Qa3?BOdfo";5mler&p;F=1SAI^%;'Xn;'"K[%*$T'%8s[Pb,b6m2!Of\X#Ab<pKUQJPWDe4<TZ/;-Q-%.t91$SF"8b8TqkBa2g/lNqHt,7$FV@sPHUB\cesLk'-MnqI%B+V]&-sn+mj<,?T@R849GAHD+!K]r])\nKQR`aun=oC+.C+@K/`@`s3)jS%Z%*d9?XtkVYbBA\SONGqjN,C<qQ0or!mg?7V2/;bA%-&dH,?)P`-hL&J^T!*.kF*BImaPcZlN5X\J$>l#,p:YGV>4u/fpFLqW0Y6Dnb>4a<9Y^P)4t*Ju/l:4?T:En->]HMckm%Y\(m/Em%*]0>Z$BD..XAM]51S=isZtCjP#B\H<ZN"Xl1d,G=bbpGBb=R^u.8<2+n>bu9:n#CP@19B31e7U(PM7LfgRL$$lGnn&Sd$-&=g?0n%K@L1=!+J!AUM<a0+h>I,p7Q!32;E>/CP#,_?j1ADRDuPb<_`&J1a*KH[T6M#(OUbpN;>O3(:E.<;Fk*@.,g7]]r3YY"TXjm&2b-5%F&l?iAUH5j7U0.3K1\dA,J=SC)$I*mHH@VCX;OP*khZpXVa,0rlor8:44oK4pJE/1+_5?;'Ip3J<X9Ji".M0%!Q.2sgrm!G'3b*V%UT;<m&N]KpcfuE'::^p>g&3EV%4t:0^-Q?u*I8Ftek(QZo"7;Y8Rkr#NOVL`DPTEq[U<T$0k$_P2;1UG>Zl#M8.sOq?4Spe:7Is3%X05,=#?@HT#>oK59NG5SLaN^M`f18M\5?aZCPe%.lK$@o\7UG_ZUqZkXO(?MlP?jD2l;?n&oj=.<+\`:FcSp-hl@C15BM_652m\V%po[@D[/,C[$l$o`@l,egJm@-<>*eOX<L>'19eT/!o#NCh<NM0@\&aa)n>Ma;J]hRn$8Fmki*r-je6cgne13eHW=>1n9pRd!*F-<J%?M#\EK?+fRPr0KL09O]R[#qquZh2GNR5uEdH^@@*UE_U.dQq*m\*UR,n">W^0MBJk:_Im%iAA`@.Hu+IU!ua]@FWN^.U4&1+bi%2%Z4(*ETJfNG!h6MAIAb/V+^lVH-=C=QAo4WE_J[R+c,^3\M-U>qWmMeT=cJlI..\,Fnr7n"=gha<(SJa^-2k5%c(l3`HZN*A8!f)O%8J?1'&1Dm7frndnRX7lmR].p$VD`+@<EY)qfR]@e`o)9`[J3-)3A!iYG7sRiJ?hnta8NA1l!@BS,q'$:l3p%`&;fLaQ$=TQ,.R\U%F+U>i)</*K]h/n0&`K5VShs<>'GTfb5nXn:*Lij4USR/k+Eg_>^p>eE6H@cW0l*HFMki)&hV%aH*SgfUq$]Kd9U(GD2H1<DV9fNZ%8@;O:"B:C?EF-m:oXF127G$`oW#[-eNRU+B*!mEg_:c7bb4k*u\&\tHd%=R<l+/joWNr=r0I`hf'aa.^+O]UgW0+RuLcE&=%A6<M%!1!t\.TMh/6PJRQn<$_INU2W=c5,`<E+QuV!Nf"jY#?6ejcL:(n6&a1e=<5;'>3E45=?XG.q85a8C0S9UtH#E1DuO)g']I$Y_Z#r%[[YXLh]$bLR\@`1khrCMA9RN#M$h[?<hkO:8iMY(Outsjpp82R#<BECUQ]8<4B*)INPkssb9D\\FB3m<bqf#=H<i!Wj#(SIidjMB%-FAmV5Df1..+i/S0.WNWLt`#'22P-pe/JQUW7']N&S4MLFY>2T2!W2I-3b&cM$U^PV:kSg]ch2<G6lL%bPXr<R@rpg[-Y8VF+n'=%A`PdFjVF,Kf.o0i%Xu7BLd`'B!K<\>SMj3K';K.oPG-562+e5pCK.B06<;]2WO%P@o7E/q=X:R'$.[#a7?)(nn&JS!W1OD3+'Il"%BKj`To6Hc.*i^b^'&t:U[8K?:AgjT/]ud2tZc]n3)4IPd-I"kH<9uqi])sY^NT!Q=KF*f`jNO'ESJ`]@-65Ne$]U;d8a;%^Q3?KA%a>k4i/?VpFQ)7Af>,6g%CFm8Xq>\V>kJ!fPPH5XH<9>)ir"dWfQk(<\3(-4OOYg"KL[MAP',Ij^$'M(s7a;iWH3NS4`e[Z'&JW5S%_OBGa'IP=9.dbD>*H7"Da@p!]9k`5K9ojt+5_b]GZ+XODEN)jc:W#pS,^L.P-:)6>6M4K@M"o&m7[([*9"HKp84SP6&Ifj:0,9<^%7pn.sGr1[1QGa<!%AB(VjK!n;d$p/53/qZ@27g*S]n,=+L3"J->[p@K%#ZUpLji=TM&IKJC%b9*Z?X`bWL<O)dupCM$N^_g;"Y1$%+uOMbUuI7Hg^Uj&\1JgU`hk3#l[VCK1\]+p*jbs;8ZEO4V%1T[B[hp4Z%T(b$]nX."(l(X6AFXQkKlgTB\WZ6%a@(&VHPdZM@`em%Po^Wq\O95D"7%A3ZfHCee;/Wd@Y>-n#'GrqJ>&B/#Ha"[cn.&10e8-g\-mWLf3$gh0lhf`\"p":')A*LlmHUPS#GcmSM6at^8[Nq%,m98_gl1Y9%RV8B1mguj7h87`T\=iC8-k[JCA&3S2!dn)%cJfY':q'E=N0@!ceS9^_a!AVS?,f5brA,Y3<_r&1efsrND%r9\1!7D%afUKUW.e"@Zpmn2/Ad1pXANJnL1?<(6ANnsgRt#m/$T-HRLht6.iQb7:,+QuhYoFIqN1SX*;aG+o%:d1RN;SSA>l+S1)f+@;n,3B%IR>i86H(_o'Y.lrNjtd^VJi1p,'93oMOeD'JRi3N`j8>)-<>Zk%QQiqK,5eFO<`$iI;?/]*m#^kR12Aq;Jh\D)3?c=,EST0NE!0:%:F0*NJ1m)(^C?V4ELe;@%L1eX73Y;7I7>P,_ULZ#`"TrCoPFj\Z(f'*h!;>9<TpJs-;=Q.'T#";T]QYeQ^jq4RMN9L99D>pkY^ST%Apo*EA7d5`]]QX4Ka'W^H3?'>Pc]olE-*.(;XXk="%k%<[:W[.$f+XjFt%3[F>CE6P!"B<!]F9tWR4b?G`r7GZpK.\"Id)tM[b5s%n5<fS'-Cb9_&"g+e4,<GTLPHrLNI)'VSjt?aD?LnK:YQ5Bqb4[#A/gnRt7/#f]aPNOPrio*oog87Z^W@8Qoh*%rNcjX^j`D`rH9A%JKfX4N62QR)L]i<DG&)o*e0fJ6!.0"l3o6CONAnsCX(35bMb_&<R4NZDD:4OhP;#,1iR@9iR*C0MU4&24BdTG$VU,,1oD3aZ3sUR%@\5M4X!]?H8Nqu)"k-qB7#l#J'r'2[ng.Ca)S=E(gqta\VI`Bp1a]H*[[&8:-rcAk-H!Ld6rLrTJ[=TM[oGID1bMD+M\GC6<Rbj:%#).L\=@-B1U1r,:8sar^)4K4u3_7=pRMVHbG0$V6L<jEFgde68[h;u-,o\$CIJ!/sYT?o4qTb5Yc`gZV6J]r>W*,Kc9[O832<+RC%(fKB;[repk1SiG[Wi4)m"kH]umK!Bs_P#Rjr=UIH&nj1J[S[7gK=P>h>kF+n9rffe4;e3%=O3.^C'YfY8<;a2'pYC,1?2n$-4Fst%4GI:YDG`,s=OF)C:WFDJ?;:>E3"3]&R5c[OlNnGoVAP)A'cZYcM#kk+1P]b5?8X5OE35#Eoc\*U4T&BZfl5<27=,AqjL]\s:GsD+%M&(f#=lo:5267[ljWnEH=m@i2E0&SXK(9c(l:i5FHI,S=/T/c.C;f3:Po1m90+jPscn`-#MS]JBAlSb_kp[5q@Kt$)OE0q(R",RK%E/b`9J;#i>ET,*+?lhS,fGChE:E'Y*6T6?lZpK[d8^(%1:pIp#&WI,JY%b['nrkTXURYgDaAn"]$:56@I7(?:Oda@G7T]ji,#o`D%HQ4YpS(.U!q;r*/8&80.f<*?f8MuXP+.!ll$'V'$'<)kA8[<r%0R[c+(+U++2W4g4atRF0U3ZZMYMg/?hL`)TR#<>bVq"5er\T0p%gg!\04C"3m/ki*qUIBkL,qSA??X0ocaXBc_XHCZ:Hm?e!W7%+h>dMQ[C;OG)!mW;GYc@4I5H$hg%l-r</?G_#F8q(jhZ14p8U6.*%P7i#,jRb]?ZB,kGrgn$t0aBQs/.P(%\_K%&2%G?D1lEPO@&4U'/1a/H4$amVg=ESa]-*C1ECsJ%B'&/#<eD8:R:OVCqSmL!>S]Uk%+bc&hb&l.BSm"-^@3^W74VeJ5F`9?8$eWk@0Sq$ZC9d:O()2Uh@OROB&hg0WUpX\E0."^j!Og'b+:@J1q3t6tR5BoN,]nV>\0^^/%7!$!c=&s_7W*GH%jC+7oEm;+V`67Y0N--!Cd$lojcrMq\li*8"fr*'2/4`rUaD/%<\</j>H8C&E6!@[d'GNRSUaWN!M51MZGhI]"%a[7`,m$]2b9OX)eab4Rb@ZeFP%"X@NZ8KeGdPPKie\>ZhO$eKT-k_$(U-4,che@W>!kD[7WC(B^DQXj,"shunCP88^fT/spBON_Y%GGIQEbqct-@C(J?Ie$U_5gG]s,T_@6V^0kDO(aof8<o-<Jhgi79U[(k_W3"&lCWYuZf7FqA:)6Q+V?@LM)j7"=Q0=6B`(W#2c=`4%"+2msYFDDGeW?J$PIY9.:<h-('snjJN^u?^Qnob\E.MpL=Bs5FR\<PJ6'bH_\S#YXfX$O>cY,Y.4;i0#:58B-K$&[s.tM;OmL*jo%,1UM8XEkN7"T]tlVN#7qYZ/'*W*FD):]c*gkD+QoLGdTf%'ia'0:=3-2'_B0N)O3=jOn;D7Lij0=Er2MYUmrUQmS(PO[B;BQq!7U%n9^q07-A$=7Dg9'DQi_(eaTPBM@-F'1gk=K/@*WGO#XAb-cdSoICS@%=dM&;D9ZZTS4+2fkmYf'_sj(qK7r?m84>P,?;RkfCGnmB%)cK<V/!Da3\Ge?sR'c!2C*jOs=X:*-qJISY!nQLQL1sUZ:*ai2:be0^&uhHm$bU4"3=F+`:(fs1cs$aQ)qV=45u^"iZ6]Od96/[H%W9:_J,3u]oCK"=Y)9=C@qBAR!(#a7VB5-Kh$l);Wej*r'>Q@;.'F;=H#c2m(>Db>.Jb..%/>?.K>t9EY^0pNfi84_WO>&Hd"S3o5%5"Zcl;C%H]9Gura;s^Dh$s`>_U*k*W$C3#-F1<2jE*OSA5joLd'(%W2Nbd<_4L0jX7dsFlYrf#5,4JE:,jDHLEY)>2XG$d+$-OUA%0RF=!FKJG4Q9L:J31"WF-J.K+.[DLuPG4DPoPU'6);0n@r]`iWMAOC'p3]G*^`A,e*,^X#b<l&`S\;(XGeQ1\pfsedq+S.u.ZLZ3%=Km<;:71"eCq'S+q.U(ecbn6l-lF.Q:uOTm71Z%]@Gf]gOFR^e:hpI;Zt;O3NKaf[5<u>>UWL?_Ac_&9jp/>/+eR?P8$";.=^.0k%kAHoNP>[cf8qO[R4VIR23Aqg3_<\99k#PLE!1Gs\2:FKOl`;Z`!qg;sk6_qe`<k%.F3W?RR%]6BK%[NjC(-o<Y^%Q*bm`N>KV^4j%==0c*B`/bm;-BCIV`[9@,:7ZRiM/E8K1il@BQMGN9L32kh-U9HokM9KCr1?*<pg!VJk3%:W!`q,c(?iEN6V9"<*7qk6IL01iZbBc%F0TFk!#Hl>oKmj*WbRLYWap)80,5YOrC<>m`b#;WfGO=aq@J[`-WHCb*2!HQ?M*di[)Ki"F`,!ClHmbhJ&cge9gpF;qL2=0#!.B-%Bnc\0gPaE0TMeoo`'J^RmP!-0d6gei6]@0bK+TS"8jXp0Ra;V[s%m]fQs2:d+h<(J&_@ID#&KbXgEQWd0UogHVBA^=:hV#k!Rsr9%_Bk`18nd0mPth<#&7WQ-TTb$sbl>$gL(u:/;R6J:rZj;Tmce"SR$&__0o.U#&GJAC5q,I_/ia?gP\OeE9!fceLHtrRKeoJr``\7;%RnX`QO#I^A$tC,"Y#?;AU!E_`B>e3ijm5O]7LUKU#41bi7>iJ$\V1kV=dE$Q7qG.k]Q@,iWh`dd;h1St"+@Y`Wt:=a<:;Q42P:]6%%OK6OF]>B:%(Zb1W**-FW.]qr\J7t@6K]cVR`eM6X10Y/TW9:n,LIrZaNUm`=q6s$`&NpThUQS<FW>E,>/qe1TQM7F#F\#RI\8\@%l3H$n6iB7hE2Xjl*J`F$eoAbOBH;s-Ok+Nn*GHOLgl]#hVRS14%5mbWMB6@/?dYYKg7h*;p0.jW5YR]$,[5pH1L4t<C"qns(Kj<3%k=2hA"t^O*+:[nMC*8KeIIo=W#3fhE%2.jC'*0R%Dl*rmBI+)HBP8Y"<m.'^%$bEB1_L#[CEO&Jhd]-tJqT9b[:U`5(jhY%6mOfo%"r\I=Q30Q$aplrRB(\95g`R*OqB,mPg/u]'7UFt?`;ccAN2CW+cbcn\bYlnAHjdY3O9?js%+8CC.Tf#)-*]$M4U>n*dK0jfVRmA^%2j%,QG>@'om!*-*J@aSk6;^<K-gD<G90+"2;1`hJ,`BPs8\A,umfP!_,N&fJ>^d6q\7^Y.*@X2Yh-9Dr+Zq+@$:TZ.?joJ-,uMQ:%Si`DfV(bbW/2"i15^kF)2Zh7\#tH;(-kHR/V\>*uM^ZqWg7!h'3?`E7`+rO0f*L9P84l$YB#WlqiHl9-,PKj:d]P&-5tg76'(eUc%&SWg.'^(.=($Yu,,7i`pGE30,ODGIX$Z"@UD+1<@:Wc$KUuSJ;Yk/4+G!hlC>b$r=$_sPKBoIhcp>&&t0Gl,.R`^\hV/C)&*=a"J%5J\qu'M/D:Be:Q!K;kp9\3'Hk7LFisX#93M%]9cg2&_F+Nn`JVXp,el[l>]ehLDl\6Kq9ViZ9TE6M)OfcjQ#*Ls'mJ5=\`S=jUjM%'/</?`ZR1g)4C+calb(,8:kpHHp^fCiT!X'"keh6$=#/qfj*2hj<]`mnA5k^<(f^&*n-pQ)QV?J"Ve-S^?"&_bD%KX-m'Z(WWdtJ%bF(IVQo&moa2K/JM+Yid9-VKTVBPc',rh6Vje<;b9`k-0W"KQIP\Bo"pnTJ$I*&=%$P%$/j^1UAMCad+>LK%-,'.CHDf0/>SLQfT%.PukeK#T\"N6R/!:]i)i`a`c2598B]<A[lKAo\;ZASJGUlJ[>0bg7^P_T>fFA<_C>YmeG$[%:9f??;d%H8<pOIiuSD3s^VakZqWq%6Xs2B^/`7r7@JiK:I'W:KHtGfc'1_dTL[=IIAI>][,qRH=<hOIoa+Go[Z#8rl(r@%$@Q3emiNb]oY)<VBOA^=FNj#ki:]F.X`:Ds%jf:4SHp&J[c2l$_!S&P1\/E[Hs$P^d`)62QD[-2'COUD0dm,29*]?)G1j8Aa0kbrV`kf!$]/,JYrt`O;()sqnpLDtqI<JhjB72c+%V1NH$1_!K3NG1(Xdkr%;J0F^eU&[D;qlA,NlYl,>_6.GWf\[Hpi<.21Cc$fNs"s(l3LgQ4?A#!r;Sf_*QV73_[EqYd`[qWaK(X,Y%of_8\TcqWc.f`hYenMe/NE9o&s"n@1.?"YtIcp4(kM:^D=D.uU4WAl046,iQ\$#D=]7]Pnphe_%1].6]N-Ae48G(BXs.hCKmYn]:%2LXkM;.nZuA%DZh(k-\a5KJo+_nYTMTHUhQ2o$;E_@JdVn7TZ^U*7TLZftX3cC//:[I0^*2U^C81lGOI2X^4-3pZ_sLSITu'b)MC%WAg?u-(fK2RLVaXdg5sSleuSE+AKcRQNd#RKJ,HsWW!C56m2dIkY)PDlTdU`eN&9^**C=m@.6tis.UV='d8s`Yf2(n1<42bZ4TJ1%)#j8*/m@FA#V^e/@Xs=;s'PPV_!4u'"rke'21tq\d/WuFm4o3'*BSdq+65(oHN8gWQLIWQl2RHME@m(NZ3AU*jt6k+3;?.r3D9bN%;4BRWodQ#KLq&-25;Nh@V:s.I6]W'@k6q>H'+>^ECi[YH,?G2^7I8AI)s0\goM8s+?8-Qt&r[*KZ&P\;V5@oSL0E)+kiRpN*&517%/=rt^>$L-7EOrfugA$TRAuVe@qR:;;[mJIBf8l5tq`2m0i8;d$hpQ[(:Rd`%GpSjmpB@!G[X8_idr!;.-^K=:#b+hM(qk<\Gm=mV%_b:2k@fI4/=liCH?W;KoX#"RKBKXK?43P!2#UVD++)&Woq^qAUB?*D`lf;R[+)Vdg%$!7D:CpCqEY^HJkhH1j73\$P^uUZG)^X_J%!"fA4[fF\*:7EXDek(dObmh])$8'ht#l]sNd.HgQKli?3rL]Q5eRiXEX:d@b$l%pNaeVY[<Wl:EW9Bje`X*KB#$luBs8Jebes.bT%R:janX!8H5M>KepnA[;r?D6I>*R(=Q<I4I^2Q1rQBhKm1?]iP9ri_Q`e"edqkKj%6T::OJp_Ro4?;:Il3g2hoGVK&BJGp/9!c&`?%j'V)YdI.4uJ^d]/5O*CTYI^D9qU,*rik^(fm6D#86,DqR0NIDNKE&?1$kt&9$T`[tJ;"X:\B+Kf<Ud)7)8'gFqnYq(%L^,Qr%f!b%s%=^d8a:fi`%mntqZdF!b%1NPkh:ONVIYC1&M<R'/$4Crc@'.nUemle6/3lVbeHArJ*G0>K%@rC2gtB/Sj'Bqf1*N=&KN3NDFJN(%l?Auc`HpD)Fhius-?7lNLdVo:4C3VH-U;R#DeRIY?LK3AF)0^H`N:Fag_GDgi4jX.hsmkbr@D-%('W84M'Y"07>-)^"cOBGR5RB'%>JLeq_q9S`7:b*hmKA"Ah9n4;1b;&crA6X,%P]CFZ%qsDUR>>`StpBkmAQiFBRDJc8O7YHl'@&h("c5=pWIT85i&a.2$bm"$Crp&%0a#6Qo]'PMZ(7HE^k,lqJIJE".Pq6*0N.*8*A&>FrTm9@;'shN6#-9/JqX`>=bT2XfMs#epc0Dh]tPe`oWKm`8SAV6p@sU?,2Z8G%/UYDYmQ8,=nF'aEGW'FJ5!$O'7_@F=H&UtV&HiXoN4Z4\W8VOiIuiA]cbU4\M*<C!#OgS9G("eZ3hoK%!r>u2&kq4",[UY@5!d*%%GP"aFip1sFQQAH=/'lpC5EuuWl+umi:b@kAa?O(Ao)drbP\n[?+k-MTi]4B"?(qhD;+3kRs)dq3h]2@J0`R%fK7Q^U%YKtUQA2ME%^GD7C)Uen4H(b1,h@:uupI"66Uine8GAMca%S$HHmg[(Y$)"S`]?T"CDJC.Q;N)RpB80O*pft#RB=HJ6GDK$"cq"ZJB%X<VO!uon%U0f/(_;t9m`d"f6q1eBEs(_1<ZnH6f3:n.HqP5'uai*\Ps.S'G;GtO?@X>rC2a"_/R%Z\'s6dIeh*DuR<:mFR5TEjrkp]ehp\O[A%9A9@K0d4,;_UnXrNFoBSL[[HNoj9oHXk@5Gm/L!SrI5Frg\T+fia>jfV#8QdiRXe*2'dG0JKs<D*<5PM!Trr[1mS([:?gj<n,MD%%pg62hP?t`k5FiSu_:3%od<!uE?ebEqF58[Sh5,D!jc?%Ar;!hR,/JdNR-!%324pH-a/:#6a*R`slN.GD%#6GCC(@.,,cGkBVe>$B%:p'XHc2,]"9Sh&L)<QqPfY"u2mHLO@"d4oG"h-[)G?;]8\CE#n&%I,fg'<tn^HI:"BA.#$.;7+SBFE*qX\I"LIRo@^*4IpM)+rlT%;)_(FR^BGV]eODe<D)5F7_?q5&q%LlNQJZobYL^GWMrsof@<<@r*_9DRgt(;NQJO`mf%,\cc@10L3PoM9KM4K3l-.*5LX#Nh46Hm%h-P:t=LP/iBqins&-G>*fdKs<$pJ9_O&#1l31>g4g)a$NmHtCO[3ifJN#9hX!pt_nY)q,XTJOTOR0Ig4;D?=[i]-]r!.+?X2@Y+o%LD6s[f.NFZA(h4jq%;l0A6EVi8`pVli(7SPaj>^bqV:_bjp6\pc=YN;JFEIH2^L%8Jo5kM8[gqME?R=T6a%8qNZ3VmVu[16o`qS"%gBP@%9k4,?j(WSe(q5-JFG>HldLrW0jO>P*Jb;sYp?_W1ma*cNflp,l*O),2g:=-&9u+(c2Z_7=C]aP6$c.$V;h.Pfh*EDJ"nZXm%!8mUio>VUY)q`'MH)X[]p.&M/%.k(>SK7c[fJ2+U`*](d'[3?*kVWPr)kuFY):>3;r2VUp6,Vm(Sm*%MSuYWTTJ6U_VD`6JHLP`E%d-l.e'^H.(g_h3"pn%E0Ff8)%W(-&-+QW7&g\O#S&)Y"4c>i"X>FW$5\_lb\D0ie]`rrrN:>E8\mK^P\KUin+@E_cU3s$)sp#l>T%MYI/n9Xt&=a4;s:eZ9':9k=V(i"@)$2XPA6]epe=4)O<?"B259WT!#6Rcfano..Zj;E'ss$;Q8*4.d*qe?-[2q@qoJMI^^nL;c05%G@a#lcg4%K#k!E3\C'_2p=L4h$28N$GPEEHf*]3<d7<E30Rom>.K%/QM9u3+%WE:<2hLc8#dVVZ4P!>9IgF%%ZGWm(e4\\!SkMrs%(FkjMb4QlS[Z;kC_G.F-UN)H\K:P*oMN5kV_tWmsa0XNuW>f$=V&-]KSbmdDS&ohddet">%!Sgj7mqf#,$TD;6nHPP^W*)&Sb=!I%pTD$PfQ9Y.J6]8_h%gPF.FjkO*:O#k'h>rWZ4FZmn'N$`_!.=T+jjl_YU@&CRd`&#a<__YhW&d"3/3C0"7rbW4#g95_t!abMS&"W%UZ&#lM*m/0903FI8!4FaUll_&/m\L_n:,M_$+N\kF@a`,J%74UdMhd^IuIXZg8?fq9\oS>Ja>[V<6#lm%I5l@8_:;lp%uoMk3/T?%SHPr$&-pq7.n%&tn9*A"$)?q`0g\*#I_Gii5OD5!$&#Ig2G6DCgRWQ0@lY=e\3-uR\i@_oXmpAkd:EI5DKkS6o]S3qS:eJ)65d5b%(mFOt;u*JokdY01%_t>n^!?Lsc;1<ZH+q$1lYPJQ2qW.=,^7;srPnVZ@U+\Lc>3YJqJpZOd@6c9h-Rc*VTF#-S`A]nU[e5#i5TYC%[g<U/alHtob*W1Ar71&Bd*;dL/F^)l3O"_.T^r1tn1U+gK2+#)K^ID&gl2F1Z$Kjekt`)jdF<+*fk>TL*>^9C:7WgJmg!6<$k]qC%)1,r]Y*o<KOp:kY(@6R'?=WS,N?i/KSfd*d%fOHpCsY=NqI,r9]dL<i>sSrjXeA7?M9AA_%df[bYjK<I_<:7'bIB^,G[EG/fDBC2%EnPiqLWK:U!'G-:oM&gLTS>7.ENo)PpQs9"A%5qDS.Of`(A&W,3SDhh4<T6,)obT=JE(#^6EC.LgI3C83tA0\SMAqqc8!pf]#.jX%K2d_,f=d\JHgi)2,9lrG_)_O3!8,+]7M&1im]bUdjC=a"4OAr!)7:XaHNRTXF.M9gm<`fbpZr8l*X20MSj[B42<[E#'-UJa(MJc=%(sN$Ed#1uF6mX9BG3npR[)-+QYd:HFX`n@nCcVsmHhYh@%@]ci]\L-j=)8!N+ctL5_<.@tBaemXZ%liq7PWQLM;9(rIHP=R+D8nR%QohN<@:"9crb='<#;O#]/06!R!ZhbmdpK=@5SblKrcEPPnb0U&WMD4(%J7;U=%=Xqh%<KR"tk9*FrLPJ@m&ua;5,#]Src`)VR@Fb%1i+37=de"[)RiqN&<dNep4oCl[^I"^38j,\)?,IKgqXh1]GZFlF_,>;2]5C\N<,<F;M?aBF8i1aGaM3l3fj@#O37H)pbB3u]=Y?(%\;MHNiNkoq2m2j=[lt!H8!T?aA>@do,U_pCog)_dgWEf'pJ-tOXkM7D8T$Y+AL_9U,T@@2APE^_V6A<;>Zf<h^EbaZ47U]D2`[1%%JP^6r[PF_NNi%MkK8WoN8*O7n]=WEl;DPfQ@0'ADhZJ+k;C/]8H)OJ2?dAo;+VE&pLUB_Qn7qe;gJc^9Q'/G%>PRK#g]g*AGN#K7%44njKHdCJP4?hlm`T3"7:qki<F)L0QnsnI',l=iE4>a*,WpTOG#U-8>p3JVI]g(Cd$GB^5DX5"*3A#\l*^g)khSQ+T=Sp5-lu1\=%EPRed`KuXP+o#::Vf^QT>U^r(?gINg`7b4;iNCS""[^pE,h=HSdMJ&*Vt.F4P7Pdo=Q)+9(<[FOXt.K:Cif(-B^KlQeS9KL^NF&J%pY%!L/./@GB&$[AgZlKm[0s[pr^L?:H^a&3=5b5\s(H<IkYhtEeErag>^k&Rkf7jB[SrUndr%+.8PS('r4$kt`kJoM2I`_/1q<X#%bA;8U\$FB;l5!;-YeT2>DBoh_'RH2=5$l'R/X.b,m]>61j'$a1p>td@?/*O:LG,p'S+bm.e6I>i_sRt#?pT/)jr3$<8+for(dL4N%'u$GXJro+h]-`?[CF>rX@jbMaM*6e@'G^W:Jjr%3![48JHDmLOa7^uEjDR,hj^[)Z(b`Y__5)GB&<Q=N&DPqia/.5`a"A7mG'@T2%rH7sgG*5Q:N-A;n'.BMPiJ:4d=eC3]ftE'03XTUpY7sU4#h>csA7&1Ue?;oe?M]PEhG_HZj[N`i]q@9e0=:>th0&^u=?%tI?Zgj=%5L3OUJP\YCYJ4OW5,dk(nuEV>.4BE9ZV'KJp9iQO;H)?=rQn'2pqA0Y"R`s717.C%%PN2%dm)-MeM`I=V.f`Cj+\`rdluF_kpUfh%gV7J#i!&MIfg]kk5$cFbO/=`!dS-%in3AqlDS/;k\cO8BX>gZBaq*mdL\/$]?P4ha3>mspcJ)*j"K5fd*\.Z,(\:rN1!=Jdh$?\7%qk'&i_@frYO/JaV2?.tJ,)Y'1NOI^oOn[mH?J)5A8C@*s*BXoY3n2iZeu;'SUM00r^&0M'C<;?.WSdd3%j?_=.^pRTk.m\ULV_Ei%U;`2>ng(Qt]"ZC$*i*$3*h4>ED@C$Y<m->E;mY3kmCRFE%#"3EPBI@RQp%QNW82sXbng!5qGlu?n)2QW,seO\-W\BXSl_ZL^$SE@%r?0)QWc*_Z87*08<U7=r/u:?-20!el(f!sk\;;H'V:=75Zg]hhpC"[NbqNN)]NYV.*,i+`7cjF7<2tTbRE,6eqr\1Ylnf,g^do93%(Hb+G1gZ#6;f0Ii3?AL@ri(XPcPf8R^%UuaXbSi1W_\aTda52n%GBs!qBOcYJf2;)lZW[qqs=&T]D))f)mA'lFe4T$"Rsi*KA2ah%d7c("^44!&=dPVFANKetG]KuCI(0'&HuX+oY=k3RJDf0Vm6"X`0>;k$Eqn8NnT;82g.P34=0qR;\QLRU^`m]h9?2f<=7"NQV;u?m%;?NJMdFBH4>VLZ.`V+4[0:C#XNKt8A>ffQK\PSSaIA%dsXX*K$Ddkh,e>1MYIntCXDreF:[nXD`^'KDeT']8MTi>>qMtk1K=Y!+0%6L#P=6b]Dtn2PZsSV)f!WGc-9jis>/l9[Oub7KOp4kPT5#=/Aa_))9RH1lsEH;mO^2L%i5EbH.H#64o\'9*8F<I)ksTf,"M=qubn%^G_cVT<\c:oAafqis(MK0m5;)kIu\06u41GqdM(bT'&q,^m?+oEs.EAkmJL8(n\p@hC0?(E[.bt2@qW\PjR&I]b.,Y?r1_oWd(sk%U:BU`@C/PoA3^CfVuID>L6d`?gW[K_/Uk,2XT8B\N^u>ir"G1rfG>pPE$gM(k$*gLPtieea?i)k.!EZuCW2[6kht##451qod0>@7%MEm%Re#M@c"<JN!3#h:IiaWMXks3X@(b#.oY!q5"j/ukH_%BOgL^C\g64P:=$m#D/8C=)Tp[R]nUY:W4&BYT!Ju(1?@iMV$KAaQV%ImJg69B^C>`m@;3YU`oLN;O-Y+"dZ!F>pBh(1('kP2/71pYnO_VGAE$hR.Bmf2B:5G@=0\LM+0f2"FU`c.90s&.O7rm&2CGaF0u"%hA%Z7K_<dPU&"l@Pfl\\27i>bYHlF$7j>O*"Z7J`@\KT9]^cL05$Bh>6UBDRX@4GdF`GNJa2L$W9e<r#ns=uBZ.L,d4]TYXb6*/Y%RI,c5-*I:s>Gkr0Mfc4n>ltdL/U+N5WKq%l_tLq#jmKSAf)j=&oBP`'o2b*hG@fU+RLoSd.=T'*YXZRLJ>,p@dFW+F2@@]i;J3=`%Bi#M'"10],$d,TY9uSo2'54R2hoXMoF6bUaA]m\`4T;uo[SC`7OXutrGK9!cZ7OKV^gPp%h-$OOlA5]'.(of`W!Zf[;)a7<$g3)&%JO7m]VW)J\NV4;a[;VJS)AK%Qe^8,1fkU8rhs_]NnrZAIi._:QAq'\qIdITeQLjB[F),\Z:'S:5\nRo`4Hu>Pc=X%3*liu[q<g/q%.jLVqSk@$,FTW1G[#)k1OS5^oPjA_1!0)7R'a]:4;#3uZVjm%m3MH'1co3rbGFc'<ofLY(K($YgfG>r5$L_3.6h<^>R^.?$)86p!%PHG7We3^Y>q,iT-3M*ldLUH=ZUs$gD-fct*S`<W5mU..7F:jkWVmdK'pL.1FI*\8E6LD9C!fSWQ3M*9g@=S.`WZ4Id>q6tZh4NMY%nn4`7!JE3Y#\*^X_GnhD,hSI(Qb9bTS7"Q8@Y[!bIBs$al!*,r5)TnUcfDNqmoKPWJ$'>7$)2nWRShB$=4R"GAZ*1&Q?(S-)HLJ1%l`%q\a@tk5%dN"squ]klZb>Gp!*pfTgZci<Z=&9C:Ses&Z69H>PU+c\)!<?i!+[Q4c^S^8nmM/<KsZ;0+$5s+eW'tQkIGX_HJ^sK%p>Fs&l3<@jq;M$?VRi.ZfGYM99>*DP*>aQ[]m+s2DS1D9@ca)k"%r@=C%WYB2QT<,X'N7*8&A.!V[-o[leE@_PIh?ZK<$%j_Bh&]%/iAp>'r!Dj`Ft+ApRLdOnq6a#^%r0D1i]_jH]TWrNAob-:G4X=PO8qKb!PLgPA9pKLt+gfrHQg&RVm-"3g(*fe$/c79fu`;Hn'Y:%>YY8@Mf#K_qA#84]bXpp2s\pA-GJ<rqG/P?O],BR#@6Tp1!,Zr:j:@8>-l^._@sNE9<$I4K\8DTY*@p\CeN!TS5uBYk>VB"\o"?)%VCtX2DtB=gfMhT?*DPMM^3CM"F)7qiJ)L2br4$_PH1K_eR(p7)cWI`#&`&/\[KcN(\L#>O=5d%'S2s)UKjJpIb(1@iS*`hY'U8]]%k3Ae<a[LUSrLitKgU^,869@m*@l'a&rePTh$GK?dSOdXgct5PqkhX*.k<NP7fX.&o$4%q80Zqkd<N1;:HS6B]f>U'cX#!)Z%6aSZ%P,O/fY:?_ki>8_Xq6Un#dB&SFCaX7-VdJ?:o`k._?*+Nm`4emuC5JR`m4ofkM]&1mik\fSqe<Q]0!_%Nl1Z^^5Hq39O5e4#7l)eo%=3^j/_*qa;)W+?<Fp;@Kh)hI6%rX@3ZpHFRP(F=e%C?;8TnOa$Q<RZI.-[iU8i_jJ=K)S?42b<.G\D9Cc.'YPL,OQ9#mb`&-E-,'%Z`We<DS%U^UdIH\`HX5KrHs$RDWJa_\d)CAd)l)VDF[uXgob8N3YR+e->'lD7enY+d0#`ZEO,Mj\2qrC^>%'I\6ffpA^f],>P-jJ%m]1Q^ib@pPe0T#gZ]EHl+:E$$n76)P&8^LCo_s:_g#,fSm3G_%V<Zb.%HO^C_\e6l8KS^ih`kY8#F!kAAXuG\_:D!si4Rk3J*2"K%7O>je[^5(N<qCmuQ0=6)f2f^:l?qYJ;rP0Rs#a../(*fUgFh1*mCT*;h4MW/NuiE5lr!Z*Qg=I+G52.kUZtq[ppP-NJHCX=m1F76%8YLXBQhImd,3Bb5GlrAJPSMX2*>R?_Q1M+r\kr]hgs,@p(\!NI-U=PL+.>`Yr"+3>I;mOs<cUG%Xc<GG`[ma!N]stZ#*3P3HkOO*%6IenX;s)HAHRsr*_oM$Pl,i;VkhY<!ke6D<YBIrJnb\lepA)'R.NKVEIin#@.?^**Ul.c&J,ZtP"SgX"X?Il'RX--A>HL&nd/.R-%ZOP1AYBm`Yr_341(/L*Si*qSV.TV.LLr5u*8%]NGWp%J.lRu'oQu:u.G/*?nqY.>]qJ%LUIJkuTiN;q\'q5]=_3V"X_\G6!S!H:N%5,dNqLV'bco\js,]gs"U5`C:[B]l&\>1e\7LKZr"'Z0/3>#VR<o?SMDir6C/SOG"4WLRo4LB*:=#50\pHtZmINB;J8YgWS:h!A&G%f/@8X,G2LR+-k^SAKXRW^[>9f[J$.e+$:Y-cduB6V<@:FRN7WV8H)5,XZ?k&T'!6-MF[KY_<+O)Vp_%/3N5KR8)2ODn<ree58CPC%pM[L9\(XUAppi"Y,/XeNn#YXJd(6nc6kT!oGR^GVGeYL.nN,.QFuR6GQm>:ZLNi&\Q0=Jo4"mZ1Mp9`\HluOD6B[]W-*Bo;(S!O-%EY&rm^#%r^)`=#888&DS7Y^d(FguPGml$j^\%rHZA4.14ORG%f%&a/>X>VZLc[OS=,6I_gpP^9g$`OIQP]41@W]l'AYqe5k47E_l%IL[uGkUCHI]cR^dXn592+5^E79KUMeoomh9<_`_aS;c1YPtY62^+ICN2I_AHjsB!;DssK"Hp:pBO=Nmaa?\mcY]"SE]h6e7gf]t6%o%je>B.GQ7ViXGrKGMadV`YZ@Pesb(#AIbd&^[@7gBD'KrCD*6kU"Ec_UmCbY&r=1R$NaVOU=4uLUioN@0>p4U9RDpHQZ2s]TIWb%4eqON)\@f<#:0&tWYAZcO_:siZ`,15%>;1Dm8eZ$oVFRK]Y-jaJDbjDOo%NFW]>CG"r_3bF)>?q#PH:"Bkd,<Dhu:(nTsH!<69oV%E]XNF,_%:0pSTlf3u>2QpE`FFeXV4Z3MQY#g\WCK3CnjJT1W<T*GtT1pgWCj8j,ckT?Mb6Qp(VBs)RUn;R`*-iI&'pR:96MbBd[&%;sb%0?@B<;g^<,e85u-c>i#L/?cSkrZCDa)Nqsa/:p)i&$JB\a('s<i&t`;,.UK5@AF!%LNl^+D518D-Ie\2sWN."t8Q#K*(_^Ln%A0]61#LI$dr-[;qWT;BH?nGS1PM+;riDe>L;7eBeMN.)QAiJ8_m)\9`q;M:VbY3>]b8$+:Xt#^,0Q#mWM<$-cOK.r,oDBb1Ilg2$%9!^X/8,g("=3Cg#P<o0N9'amAp\%@60K@O;+1WH*#huqgL1/_meNu<#8X8%7-(r#CII<b8dAn\l]tROhD05%OGLqp@]r??Cd;R<J%$*h-If\!0gj3NDon?&L)#tEK@I.l%nT5>X7RWk;qE5M;YJ95f23dO.++?MCiQtMn@`B:@q^n`Gqn6L+MoY.RP#'fnln5HoS9Il7C%`X]f:om&WQ.&IUi,9N"tih`E8GJW!],cWdfms0;oLME5/Vm0m"nAE;>oKIY_+Y*c)?'n=6g_hRWlIB$XoTDFfLh?>97s@5/2-YLN%SfPmp9o^<4='joG>6]=_'WCKPb<s&U'DEh?A)k3&h7g/qY.%ijDM\5D8?M$05Eh>V]jCt[,lWAeb/res;<-e,?baDoIK9T<PKH?P%<&jqfAZ5^+[4Dk:lF6*$dSXg4bsUnnf?::.]FD!oqkU@/)@hGY`kRhrKng\$iT3(`gO;`<TE=WjY*!lE>gS<sI[KS'd.G]Gn2PG6%^C?I%6=t1=(JE'rcOuNWa\Zn@ZcJcJ_>3EbJ-?n[T5l5_Xc7H&UZ>$L]2@+RmY=tAgcn?kPsceg3G:A&[?'&sR-R&6d-DCa@X$pR%UE&$)rKN!._uSJP"/5?ZEDm!47iuDtpXdY>1dm'dq>]2Z^3E*X\IqN6i%JE`ip?uWi(p4An379Q<HiV5eN8[\/h9[p[.PluHV;J(%B/!bff=(2OH>at[kY59pZ0\O#6@(/'NNG1\Y44kTa,L\o0'SB0"hQknRYNlS)J.?$Eq=/2d1'RfFXR(-q0:QW9I@RW%Kl@u>iqPs%'jJ.Z"$Qr3/.dcW_.dCB!D.>4;KtGTPH$:9OA.M]rb2d'k9Y@@3q1m;giAaa![8uie9EQI1+kQHEPt8g&TaS&25c`"1_:j"J$YFM%Zh?o>o:9.6h\f6aB>EW)[tZ\g>::CMUsC8<qA\-Z*NCLThT)1Z),)G6f/EKC[:nV[mSfG]B)q'bp2r-e\TZf\9I.g\\=N`Y7ou;R%k_f9]&<e!8XdnG4.Wa$p@&=U@%j^`OFqIGrGItdd:1u@'8[&)\CGWR94`8F6DO<p4Oc1"<Kg3tD5O[@XL_[PC;$/9<SD1HL#pl`R%`V9&b<.&'AX44X?0D$]*oXRb&0M?):O+YZ![n5WJH*8&q"$cP7Huc=PkLbX_X]sb_`gsgho>"[#Aiuk\qcIlf_rb?MdMr=rCq4E]%*,;g)GgcA;.53l`5kHWO8g];[e_>0WrS5hY0hgnPn/[2HppgY^&%s[fGhD?,:hkXA3;EAA;Hj_JcKVu@Gs+Oj@4L;G5<kb=4WJt'%h=<>r9J'iM*J.=GT/EL:qWFs;*&P7?#o=$6psmK*0PmH:)l;NN".ZgQ-(N=AK`BPAG46d`s*E*Z6$@B'=,7kAT_#QaCZa?a2]Qn<%[k;8%IimD'jg[Ap6+"(oq/[f]F%?L%J_.ru4tI7mb=0K%[c.,]FS1J3_Dp(nF%?rk8<Ul<1#\'1J"47g?-,T44bb_QrT6r+pr"&Q%PN;F7h[5-5PdoP)ll(=p54!FV-0l.&9h3"k%>JP?4m<j/PN;#/F6O3@3#hgr!0`EsmbkfbBMm(Pjb?1pC!a-K[Nq;A1Z')]RuM-a%nY\2*Za'=sWDgI7b8G?BKpQuD8Nmbp\h4fWo?]?PNYsS,<<@6%!b*W;7QC!Qf,*U.d^F]sc$,I+%I)+WcNTuedE!nN"f#[[`S4/Z%VVCq$&$NrFaA^d5:-u;X='L!8dU(,t>SnJsTX54boLng)N<A7YFZi+"/%HVpW"$joS:@(AH4c(Q@Q_ZnLgr(*#GqPJ7$8234c'As%GM2eBR%nq#lC["-"9CFi:-Ug+P!pQSJVC62+-YX?T:J8edeF3qUG3&FOr4B?CeS6C*cb'Ji?j1BH@SA75E1<o):!gYE8_#;g$diD%M*U+[4rW5X9Nf.3M?a/9p?;Qb.l\Qd+^1FE(ZdSh"FH+m0MO2[3oCpmHt>'KIDY4h6>)JLa$:^N6Q:ObR=X$#hf\GE8T6T_L,B1!%rcS;Nh&:K-Sr?UbFGmTlE6nZ%1Ym<d46E,Bes!od=O&Rl<(/8Hr],,Q.Liahn47?6i<jBZg)PS'DP(0.)hW<Dm"6Z^Z-5?3W&k3.%+T_M$ZUapoTA[!6'DWW"FK"W_(@ADih>U/q3Wt?0[/8^&HX$&K4[(b=UPboqna;9[DjP&K!BMN?`VWPD)B\q&U.FPq3fSjMi97ZN%*6bfWIg[BtI#DjiNn@[LoW@JP^$Q-nn5TtsF&+l"s3cCY$X#Kj5,eF8S]"`DLb^l-T,kRfMW=6`AN,+3SfUjc&!>%m[_>qk^"5d/%>N%kl1D$S9pSJb+KDakTl(N-?R2<3==5mgU1J"\`UDM'@?AIJIc'4<ISOgoK`R_K1?_8*+mooB'HHJ0=n&##Eqc/O@?E0VJOiP`>%Q2&JWrCX/V4:d*Gi_lV_'&39n_hJQg8)e)+.N_&[@LnUL9&`CR?\u,n"a2>gc:PRDJUd'I6=^Ru;jj`Pm:[Rmnh#cpc9(('X;j=$%_:0S]e=-ACqG*n7l%<e]7:%W2+5P]S,eT`chG.sH\^Vl=#64$rj:@KW([^VT/Xh`]G"S%rIPq5@4mIYscAMrV`5<I!)T4uc,RDfj%/9Ip3(Z28h/,?N<qK6AIXF*l-eL'=]2!M1h"rC"DQ98:1`q)gpm6/&o^Nh93`#Is:OP7C/0E;+#dc<gR\j4?of'YH4]MFT/a4b&W%Ha%R\"IlLJPfHQ1!nbfqH=]%MgG3\[0sQ!1i71dl@ruK\RuFfgm_QKB$XDT_U^hpn%u$6g(#_(Vb\NBD9Q-_niHH+MXuJZWq\4a'%f^Z:%f`>SqB<f/88m#F]fW]0lao6*D'!M#EfCpR9d&6F*ajYqacp.kaRs@SD*PNd2=>S<jp!]?S:pkXT%G:j>=c&(b@VC^N6B%>`%H7hB1X4#Rr*RMntr$:5$2#S;+CttBEJ-J@#YnDJBm78>-CRqP-?Bhk`;6OR:<2^LkEt1Ic[Iq?q\r2(?8iEkQ\UP2@n#'7\5cZCs%@I`QhD@<gt+P#k0#!rU3d_fDi%=n]4fIRtcolg6igT*W5;%%]NOaHo/-Un,5AS<6_RSZ77+h'SkfJ)]-3o,9+3<=OK5CX1.%R>(E%2,dWo9gA^n9M52#QXm36TEje'AGaIikg%?BAF6^EBb0j1(u>'ln(5q#=OnDFmVV>O!)7r\mQ]dXm"$Y\pHh:^:/*tS'LGD6RJ"b;%FCkbWW'!:G*.Y&)U$ofhd0XJRW5d_4!#3&QY#^8S7OOA0\)#U!>'uqB]h_$ikhSI'FpWK<:Yuo0P6ols*MJcjL_/dI"mA6bW*V@p%&ce@<R9*R=HtYJ><S'"`mE/'EA-0r)Q@tIHB?_L]iQkQmCOCGB$hS1\6T+rkpHAY*gprRO#G@+aiT`;3C(Kt3TQBu)&<5<D^"F6M%J5b^>euR,T\#'hcWc3#Ag9CldP=*regs3&41_AZ_NfI-\J_n%?=/SeYc\1'Oj,uRPPJ&`5^KrOaT5E3VI.i!P#k[FHh6&^;IEDoC%P?pQ\MNXnmYbtj'rgB(;D1TDB-3fJqa.]QdM?D6&CI$#'DZ@e$XkD1Al:UJ);$K:pIa!RZp6p7Q5aufDFD.BZ[DjNp.W+N@%eP)i%YI,^iD/SGYd'sB1)#!9N1B$%6)<bTJhBbFbq_?PlJ^jGDG`6+9KmW@:a9ptfan=Kt"Ic](DheY1dc/cn#S0s9%!5i=:4RaIZGQB-%3Q3q:]Y7B.2?I/+NuQ=E"=fd?3mMr(P^\Zo9L+/NOoF&a&?o@T8J?\WLRkn8^</Ns=4K:,KBr$ME6Ie'q[9ZY6Z6N$n"2iZ%F(EW%rWK=3'R'7O?!@WUMF=W3I!%1[%\mXT=$#flGLlDo3qusnF8Rn:I^o(3phM":Pr:;Q*.Q:`2I89]J'CXFLR-u([Feko@MlHI]m9=c%mJ-A-C9)X<n8%_?I'@ZT_8!^&r+Hk)?,sNU4FJ#I[nL:=2ik*GNkaG8@c(\9?N["V:c#N=q"sGWBku>jf=0+"B&3"/YNblHJ7?ab%p[9'#E8gS7s1>T2iq+b:c,Fk[oIG^%d#k-jh)Tr?)DnX4:;;Nb_M:pVNkYcbjnq]Vj7rM6[(e(OrL.)UetZFZ^SVNpo'YWJ_q8"#%g[oioIPKM'?PenfVI/Y-e]g5VWtN0(C1'K(^%#4#)JuF.[A4Do8j]QKR`<RL0V"ZuasU1AVs@/V/n2LSrqTQLIjAH,AL1Zo/AaVh%NS7U(XG&oU>S\aV)m;jQ]B9L;d=J14n\2[oGm!<Kk\NLI8(1P.3lqjiJ0'%r"0?W&%,ehfkjmBJ>,o3hMus!c=ru#HOpM6.jaeU=%`rW-M#5+KV4.o,;\pr)CRXg!*j@aRtMY%lYT^^*>nW_8$<Om&>5aABm%VYRCE5_ipLVmmg:aGuqTX#%ACInb-rb$#Kp'a3]pPqK>%H?UZ*TLeqBj>#>p<[dp]2upXAG$aEJAYRfX-!CqEs6\BpJ3rN#diR_u9%"/^D8RKW):saV$:gacVPkG)WM<>[k\l."UW&"3hmE7j%4^Vh"J`hjSg<WFfm`_pXJqA<G57-E`ISg*GI`f\j]8qD[h]dK)SP.6nZWEQS$$3ou_eN!I/.bErf=']8++'bR]2$juC1>p:7<_4;%`!@8J2`gA@e]/;1>`CLl//oE>"M\"JiIjAPO8-hY!'ilTabC&_".$AW_HfjD-c#?]WR"<g`;[:--"aO]gsH;]9+X^\?SF>=Jgk'!%K7AWL^,t)FfYLItahA'^E$"-QBX#=i.18Z1:^I"#8b1Fh.Edsi[6p90^!8M9iL[si+_bFni%/RhK-3LloK4WD4!L6mK1m>%e_L!T%:PLCT=>>nnrVFk_T)3`>C>(nPnJQLhNNI-JEICZ.^%T'fa?nn!K0shi[3EeC-tH6`&&lf1=2er/5K(:,YerQ0_otnZeYaMXPJc@M%fI^qp%tpF-V4=&!T]EtBG4\F<)-Kbbb'IC:BOe;A8]D2<Qb-+D3ZR_sA.rP\$m67=1%VZjh+O.ZfO6].EZG*FE$q)]<S4:`:TQN2%DYm@hluBI,]3dEIc1Y+_/5>!9WLnDY\p>>CY6eS\7b]no8h&n8<Lr_lR-_P@fZO9;btqaY\,5bK#c_rig`3g_24`%MU1#ad]+Vhb%X@.LZ+,Q!MNJ"bQ@tPO_k@5:GUcsR=>tR2;P*&V^IPB.]a(VD:aF,c&\_FK_]10c\:i4f(n9+.;X*6AOF13L9YJiL!j"\QeN)6h<%-lI!D8GUnZ6fB+p6Zk2lPr?GSN''qo(\IUX"e-2b1U*0ZeV7H^@/$-(Va]a$cLa/O`%N<qH#H9u\g?aDf,[@a:E\`>Hq=##m)2aD%n0'OW[ht3>*iH.WPK3[.c;f[_"4OYGj=ukrj=*7"X%#9iK<191IdOFb0tU"OpQ$<^b-O_r)h1cfGGVW:a6jDgbCf4)d.3b$00j(U%cQ/hY2[I[CJ"1Uh5Z[Qj^FWim?4?tNR$kj"r.SSu$K(aP%!M*B`6<uk&%QSLH+f6)LbU,ERi>i^KE"DQCf+H8Hd5:jO`8+>FF5d'%.VQPh.3C(qIBN>[YjG6JFFSFIVm::9ZTb"U%,YQ3C$Yg`RaceC*AX,]eZ_mlqZV0:-L=q0<#*2SkcbiD()G]&]nroM;<br?.Lm-^%hu_\%S7G8P'n^>u]8=10`J4!OERtY0%Th0#!An(H\s#b%W#O`/8Y_ae),Y^O1m=Fi)uT(7;LI.&/I%`i)T4?Z;YFVMi0Xam=>1j/%5f&Yi$6F*]Yk++1]_$X0%,cCLEbFKG"qV'nXUq[S%L1k*^(#KtIZ8GA#;20++CmjI:9sfL+aheOSUZ'=OEH8RWE=V@<;kQ-*-?3d%qk(/cj')XhY@Dcc#l$oUpCVTp#/'ig&XV+Wn!*?u+.82"XchgY?(r)I5ddYNg(KFi-<W5G+=YR7<:l61o"0Mt^gN=Ji;?ts)iH@d%J*Z+4nAaX+i,G()dEHhe4.A1]mT[dRd(tdMKY7G2W_nBHL#&YV"<VjVh'k&9#;KPn4qfHNg1puWLY,IP@#&4q#"sSGPg7NIU,9OW%[k@Rq'>6j!A$[S#4YK!TC?m))4r_OXcsfk:pTH@lh@sCaKPd'qY/(:ebLT,30:bI&[\rb-bOtT;3ZfB;H]RqM0!Lu`j-Ae@lZ9CO%Jo(jk(M*Te#g03'RGOPe$a=-PkSu#(T.C?lX#>5&%Cdn7k"H27cogKo#\K8?c;,%b0-"*Eh3I#K2t(SgL18_7p[dC^h?jKDb+QN.%amd[$s%$Rm<:"T@om>p`Ne9eU^(e]oSikUahC$Zf']-;(O0e%C"WG@%mhoS(I,98+@#"DAk=_&rqeg"cE!!rILf*"[+u`N:0+7kK%aG8"pK^P`G?T2)jKS)k<3T'TO;>Jbq1ni?3?T8)9Q(q'fUDAkJq)1Ip)/*h-NWp&YqshkW*+,c8Y*[2VXs'#U]c_lO3H;Dd,UI,j%rZt&jSpdh]9AjJk'GEuXU+u+Vk2BtSCW%;6B5rq97NkelLSpJ*KY?EACep(2_q[*4ZO9mHO?O]=9.@g,Mg?NJS]>1YLMa1)Yl9'R%i$5`b-=e?hEGr$LE6ceb3MYKP"ZY#VMUA$nCT5$]kP\f/Aca,7@J]C]f;=$J8n78=m+1g@EQfa]j!]J?mr@K0JT10Z60!3ie@oO)%FZ_Fnn@FM<k/$16A0EIngMI5I(Gjs'TIhmb<Xm?gj)*FN]l\?.n>Ys6h4hO.<TE\#)rA0`KfY4h\IEJ*aS0i\@_?'J:Ho61pLr/P%GN#`C0fY2gHp>Y'L;s%[HuC&0hM'h#E1Z+"pdWWB&:1;O\IG0[gi#RS]+AGqHlKe'?]&9][l]c5?"f=a!!a.lSYrQ,(lkYH*UD\k%osAoS/0&1$rX@WYOEC$,pc.)RMb(EkX2:F2e*Vp-^Q.shDM,3>PY86E8KT]@o2;p(3>DQYDc6Q__V<Ls-KQGWHAe6SCT3[pkgpH"%;G9,IGqLC;.bqGVmWk>Pa8)kuHEQdB;G9-d!gjI!^g9UoM5<48T!p9kD!omoa*GemgW-^5=@`G314FG17\`%i+i:p?ocr^2Z>e_@%pW*Pcj(O<,:k\dgKkX/f'L=/#a77"O=23)TdO,-$c%>9^:;uc);mF!P/2T'X8g5q'^rX(W04X3f/<[acilV=rji#NV8'iEoM^?<g%\OY!M6Hb4ZZN8c<7LLgnL<_r6%d-eo4GM,gP`MI^VfL`53qin@'J6hJ(cjaOH3Bde[,Cj:FRK)/U#j5>`EXYO/<O1:4In9_cJ9S2%fI[o"Tee\SS*k([7P6unPDY^\bKG%R&QgA](RnXQD,U:rh#4.D@*$t^g_].0WJ\%2kr^;iP1A"HM'j\,p9A/@mCB@ZX`/aYA25mM%i^q1R29KMe^V+>(=Gpr,S5$q'&DgKDAtiCpT"P!*Y[?8hO`Q!'Vq[GDYaa$\jV-l:;bEITA9f'_NH>]SQ2>js)`6_)2I"8Qf%[Y"%kR?J.l?=>BR\FTr4+ipp^h>WL1`?UHR#T;(Zr\-krdA8CQ^2b8a)8%&S0t+6Ya_]4fVbP^#.lI%We0bT[b@],maVt*cE8;8C5<NL%qhrhlkCP"?YQS_Q,+?r@Qd_-?p<]c%9!=G4`,D/B;tf6:)=SAOg/pN.LcTW:S/J.2J1MMW!$?qOPM,Fe4$mNlSgT/oYMJ#Hk6Qht%#[PM0rp)Nt0+[)giqR+lfAmokHqjA1QSjECauM<'2@,'&q`]W?l'+B`S>MOW$da!Rj7DbkT-L]s&2HFI3:EO7rf%q.@W^:DNkp*4%M!@>f7AbUO]Wr[(0e`;Sk)\YQ%-AB]o,EX6L5F3.0s=O^Y4FCeIUQQ:]DI9/e`jk"HH)R.X4r#m,DPj.mLTum'eRH8@/hh`LA3[i%&hspe-G>6)O#L/.I"50ZUMTa1AaeZp;;'u:'AQ9[?jJFZi&-&8MnjV9S\r<,!p/"C2a4-6IMMd\@J5Ic\i9/!p:\i36\Y,VjZ0ON%P9/>FrL3qC!g_nmc40'(M]B8b0h[W_!m)t4as]b@8,BaU4^a\VF84-&jrKWcBopB,-WA(_HnK^2ct(oda^]C_pod'Z'<bo&^:uX_%g!+*bE=fKcQ@R)Tg",Xc&ob5!E7%I1-3^:mbs*Lt=.1>[k-E(<9M+c3Yk*i%Di9S%Eb1W&d3=d]>%IJ"IP!=pN7/O\4'LD`"6AD5%^i.,3bY]JJ>KO)kgP$/rbgA1.LqjRaAV?a[/2Hh[;Z_;0[me:`,#pao/SpQ#nRm`G(![n1r!2Cm$]1(R$OkI)#g\nh3/:U^@=]'-%-nHHe`M*,AQKA)2f\41sM5+Q&Sd[GkPIoBI/fA#iUJ<-Vr^I*MgPRPp1cq$eAl81lU&3FbBBt^*I@>4D*kT!9plDI33mF+66d63E%2imF=]p8d5ZUj;Y&N@sk+%g\^Xtr0)SQjuK@@LoD5$r5>IcB=6jQg#:4IlD:`(.bjmo/Bj&,.RmRl_\:.F)D5nSek^W;;I.o86(E%:-9MQ(0ig3gcZ_(L0OMsgc&S&*0*X\02uH\GW=kK,g2.%KDT,;M">`QRkl)qf,F-LB^+tg#KF##*a'#W[pSu">%L>`fWolKDh^fB%?M*S[^1DdI<c3M(dHVkE$ZWY3.![ngn2OHm#,aG#mr=X+a^t!RpiS2e**gMoThRGIq)t<.IPrd/3#b)%0E&lQ0td%W5mKaEYtPP;%-8UQ(*,Jcun:"ng:&^,/%e6YP/r^[6Opr7fP471RTB#]150g]#MN7ZFF3d>FZGZGOm>KP[^c&_.k=@<@NE^7%0_ijdTr*+or'[?<%X1q)rJWDCO>1bOY/,'mg?pna>[CPEe$2'*F]j4)qlI4(",#Y%^Q4oAfj2I;rOUB-34<bN#@Z3k>C-_QM?aE.5\g1!-3uQ^@F-qtr%_WD]lc"5LIn[;_4-lg@`j"p2h\"RcUbQU.B-lcU/dXJE3KYe=[q9n,L*t%2,="ZEGc7/1(\Y3uH-C5kmc>P,$:VlNA$&4JFeam@*%03T>@%/u!C-dNZ3kFi[E^">=39/5Z];jXsh+<4!ZQ4.7q1@4q)jIQ/Um\R,bC?@@hVJ,Va`9l!BmrGqi1OV&-^[a\@:G8de(Uo%;%hSaEQn?^GUn##VY>&2I,'l?,.;Q9,UQZK.j7^5kKceP;$iMD>#30uj+lUSo\Z;iFk;TH!I_:=?J7\QDn_Pbn\A;nNKM*'HpH$$4E%QG(p3kK1m]@2I[9SXo94B+AVOF#12013AC8]5oJ=f1m2H+\fdjon%7<?0JA:dVo9ajr.Z09k`<cc-]WtYmCMI%X(e=5&75PTd]tX%2<#6W2kI^>8OoGYSaF-iKUo]_p7op)*$ah<+5Pr%qJHmg_g:,NBXlXhCcb/>Fkl9P?/.FB/Y>4-m=:@GI-Ul[qphZ&hM#NB_/UdZ%dGG5#D`RM9'gPmID-nM;:GmY#U?AJISu9&pg5)KA=M._'ouu$e>:qe>bH5V625:9n)d(sQcGRQ16@2u&=S\uG`E>p*lWF,0kB#_t%;WjLoh<K'hBI,Z#l.;05@0r4[.%^2pEqYdhr8Pi%Mkl+m9Z]fD&VGVu>5)ko7H>F]a;Lgo^NAC:CrE\E-i[^:.?@X7^8L$tB>b&'%d?NEl.H`]EeW*-;,!0F=<b[/5Z_V7qRi.Ns-GI];3]h%;Yk2Ti4+imQd^s`\SR!e;IHJX?U?V"a5jWk4(Q5/sMktL>Fn;YI](rGY%^Q#+3U?(E*e(M^gH2B#8)bjtS"+$fVAOY)$l-7cbmR<o89ZTP:eEQAnpX+)Q[k3N7F,:e1AMfr`/=kZ\=8nuZluq!Zmk5oSc7YF.%[U.BKd<'Q:F=_q4d\?!mp(.%^/2Na?:(fBT8kXu;ZPs8I>V.h%c:PHLDD[n)`W$idShf7e(n3aYc37]NN2Eq>V*h`E;PWLCp`cc^%Za=C,LR=2M8(6.b`T3r(KP3EYfIrH^\qF`X]3%,c>LMNYFET`VLjiN"1nB]6^P$8]4(N:`mn8P8Z\t[ObX(;4PTJ&F!:hcf7ZU02%(Y>k.q,0.3C.X1eAL`*555hS.-!e_tYKfo$nWYZgY#jdeO3^b9n;!oUCr:-_]H=4>4I)e8Jq\m]D"E`.\lYVsCJ'Bt39@MkUJ'p;%]LpP>Z2qR2C9FkcVC?L)k0Ug@ls+cj=[1_%N2&kL0-3h])Nh\8NL[\CbkJi0)/OjZG9"Vm$f0&XP$?)aq5?+/K`4!Sgc=+ANYZhl%@V+sCo2#'ak0Ck/q8d$qrC*)O+6r_2q`oFn\[/7liS^T;8=;Pe=*bRlo24YqDdKs$n`!E2qq%QZ1t=8=/<8nS/96+S)]d\D!7/9a%h5IZ`_AiaEr-9?pq-'OY\p;`n4,)'2^-#EN$e/>Ib$RT6_$EE/gS"d*DGF`D7Ol36h[3S:ie\0%ei!rn*@)CRibh`ipYJh3n(XDE%H+hZ-;0eDfR)9jM%-GaGm_]tN%->g1gYFY*EPA8;4t]rI'']:,S:tHfd4"]i*lfj\NoP6`IF^tp;P?Z='TlBY\>@Neg+05Q"DD"G%<^8X3GJ$M_Q\:-+l\CnuG?<"6?g=di9D47=Rg8U5GtBjh:gYk'2ZS4N>Y8Oa3Ua4W+G3`!6SMWeK73OG`8P+e4s#R:cg8'7r'"cS%j"CKP9O=9/S:r&/;&Qm_ZNT3+jq-OC]K=J"f&Bm"<Ga?qeSCWj?FN`8mpd3@RaphDX;:S<*^eNdGB:](/l:NP0)"\amM4<H8;4ZE%UiHDLm^s_cQW)iQa&Xj>%)".Gbu6([pU[`:;P*J7>cbf5;jK53's)ga\GKi<Eu=j4LO540++*ie:1,Z1I9Tl_mF.,k<]rsTB7TI.%<_55=5+X;K/ffm[k*s-T\O,?#(XHf2)b8pJ#GfU#)c;*e[^o2W(#P%ojZ,On`sWLAWT#kNI4Gr>*5en77q?YUmkMIr4,.'-9U8lk%XQmc%R%1WFfN(BqmE;[Hcb[F[,1H^9KJ@=4r1$Al];6*LKAYio1@6>ei-jjT%ZK^rlo0_,;R2od3U>RO"@Jq;gfr8T>p9WA>"gX2%.ci8,cONLaVKbS*AhdqWlb20l)fB"&@pJI=://^h\[l-O\]<jN']HW"V7`$uN2tc20%h2FDA^,`IY&eB;bMpd,o.W5&[dQ(Su"%M%N-IG:Xd?c@@Nfl9>?^>4?'Y+n=7tD.>>,3MX.JA(^:U:8>M@_6/`DTmR<CU&3r'^)9gcI/;!c^2-,3,@4PXK7k5Ll0<>k,,D&"/]%*TH%PG;Lqo#aU4BD2F9<Ko3,!'`"Z0X_08]cR,;])CGPi:N!Fe,M<rJFm\/A&a75C1\m_KY0;%@U+W-Rk@s+(\B.2eXB-"PTkW^i%Osn@aAH/pt&=OAWXZ4pONr0P?a#iJ>/S5L1$Rr!M2lCo1<u7O[Fk$U/8P0E-(MaNk5dL]Mcq6+@9=N!Wiu>o7@ZLC;?WW2u\dj4L%ZbMV6bh;,rb.SmIJpYX/_8hAKgZDPn8&*^-E*Ci[-]!rS'slQ7Sni/FcD$6n`%F*;M?ZOa'qdE)2*+KuId&b)=2f"-4g`=?+`WPA%Te`fM'f4`I^5@C;g&aH)^a9HdOqS_Q@aP(=CDFjQNFS6;-_q!=Y.VDAI7L-Yk??s[!-U6hLe=.hT%puck4%b(;0RK4*uLndegsEW%r3UiAh3m,_(-oGa0.fEOA`sc'8nMT'NAY>S!>F;D1pX1QEbrs-jMUN)2V=A%?fRGrmAKi7LF\;oop9\9AmeqUBo]`?r7f7-8JoM$%a3)SMZ@47W=dG'&dUs9Pgdu1]G9tHK[iDM=cP:)2L[eZ5RkA4".YT]/]$%J@CUG5o;d#iTgo)c?$ta[3(ind`B?aun!6DIuq<-!b%A:/8nIOks3hq>8+*jN!Aqi5R+F+,&"P9[pU$L$Ran&K2Y]d("eF2]oF7bt3!$#b4i8u"8p3P*J[G3hR72b_BI=l0o#kdc3#lX',Y%^-andCYn!>OM4'_]o-4M%V6Hm%0rYnN>J9>1=YC^f'(qp^gO$DAMK-h`q%?+0oq[E\`O&Tg@?pu;k=t`3kOJ0?fLMEi?B$0=T$@G%U&b/3!;b!@iA?4k(dNVV"el"[[jV2&$IE]"TX=j5dh%F:eAL->^Pr:Om#XjK?m'!k>3mmDLF>F&pdB>fYG2(,-c[M;cq[+)*sLjO%/3:MZ\OQ\_n8,2,ngMWcV=@)jl=J:EYUH-/P!,PJIT;WYU07C=7JWITE6BiU(C9iQe"T;,BRSrk[O@cK'lI_Sq&Em6Q<KMk=nO<$%Mt5Q^)g@^7l68<bfm)\7>,\TrX-S+>N8.76Y2?O*6b1hARkH_MDsR6;QY*DcpBs23gU_k%<ZsObq)<Hpm%Wp6O;l>Af?`8Xjq_=7%XB5`JPIQR_Icq0[Wd]t2Rcgd<[tI;TKtS538?R[3qAGT2WTlElrCZsuIWO3pIp(CL8>#%EIa6I]k,[hB.hC1@lhWVq,H>(aE-'S&%o0^WXfCa4"kR@%7!d4Hh7\q[cgtf]ET:MPQ2g,(Jklj4_>sG6+`97hChY"I/hXP'uW9`WI*oFg^d(QHOn\sefFoC+Ogmk^tbZEEB%>uS*([2.o-lfVU)cX5J.G?mH-Wd_s9iEg9]XR#%Ue^%][EHSd7Y3S#Z<8,d[*r)aaY-Omr\-Gp`Dpbo[YHFLiH@1Y&olI>%2d\^3%O$IgEp%Wu?f?ZF6fg*Ah8W2*kZ\s1W*ErW[NhLZ&5J)X8LCi?PMq@XnMFq+,0m'D[kK(^+XQqgC2#b\0IV(o&3b^-EO3dRjnYjL;%K]<1+/2&/nK@No<@fHf1(%"0LqTYX0k;RP^g_FRV*G0l6Ib^B/Wqr-kfAG0PEu/n2Xarq,qRK)S_KY(;eFdmD_O[GChZD@[@m.Q`%fCe/oYt!]tm;li;f?ZMqhU+5FB3d`k'?qOaZnG(NlfVU)c\7G))tW,geIUb:?UA$_GI?7P?fnETkGkuJ5q#B`H#fnL2m6QP<7fH&%YB6k`qocR"N`/7Yi@!Bm^OTFqWd_+UU3"iWF4aU3$@l`nPe)>3!O4QRfWXT:3JGMMI9@9_f(JVL?+Y&]5PN2%F*=56f(Chh:J4\P%(OsW=lMA%i7)0C;-5eCHF#c@m>n1N!L3cEDVVP$@7RbhhCta#N]P$oV9S&*+HGVYhD-2.s,AoT"a@8E`$n+Xj/Vlk'$`UImatS-V%cp_`6nQ;6-Y(1<LBI3@s\h9fH^,*8,N2Ki^5M8+l$B`.sWqA>LjRMD1AZtj0?!M;;')h#`i<SZF#9Tl>[@^Sf?$U1lAam1<>UZ0!%4p[dNrEQ4L^@*."l(lbMSlG-@a3!jD\lMhf$CBZ%qsCEtp%G`K3DKP/6osf&\+ut#qHC".*e/,$G4(*UrQ*p[2=gpqb;_FW:KMF0%pG^[b86$,459:k8B:it#b4)C:KshacG4&YfYARC(Z'X7'o^Qu9gQ=F86D\X+&1[.N,GD,l0?<*3/M`o.D\"4205>QkDEaZXp%Y9S%fPW0YS!7^B.Lgb%8rY2o6We/">I3K9L?R(QLYAepDdA<pjMa_V_J57?2\E-&1S:]gfc^`s""\[8*foFU("\_"7N*5:o<k'CqVM'V%S>q5gj^YaMCTk*R,j>nt8-KQ+B(;"($N8LM"t1g<-"!Y'6c+/I%GK*_7Y,tu3^-qck=%"6::I[KV=FD?*@CL0:iTN^W-%H(q97i>%p$tj@/[e`%WTh]*/i@?]=1#C(oC?`nIK=+$lrABkG>J#:FeoC6\bXXL^>ojI1Lf]4"+qK[?ZOo/PqcHB^-A\no#J5KYHdZCh#[Em%=RLGf$%mE]=KUIRhiEo^,c%:Lk_npk`V_i`:2Wn"S4\\OA30uTaUGsL1Rff\(GMAs&btO,*;pQ+@ZP$gcXN%I;+Xd1dRb2_HQ^7!%n^+?M3B0,8iu=VoFIL6IoKs`hIaY)&p/?qMVA<sP*tnJ^0:<=I+iXI8.XnTD6j&Zgi<R@=S8NB'X4NI\m=#u:J+ujom"ZjdD^Z[.%k6-#UXG[=?M@=tG!@Je7M[0-G1=@^+pp$;10o4SB3:>:"cYO3]"]uonYCbD!m#&#?$:ZW?`Rb#37,%k_[WQR!Tj5Bpet"[Sm22uV%MCtcK.@O)+oO$bm,=V?JgCVLcI.4j$oTC;cq=E0aX`Ss#EhsEp$cX_9'j(9Inc^Ig:t\ur=OWpoO;,C,mBU..l08"iVu$=QrQ&?j%f":%!p:11T-gHpI4jRGT`GQnH$E<n=R1`\/iD<A)cS2*(L!d:>R8W:D#]IW8'KlN,@-m#3XO;8B'%&XdMsc9Br0rZFB"S/(='jP;%gVZeM>RY$+q.plsh\JtI$IR]I7basKKsHfA>8[F]@7URX%8;bNq(0[s)PtV:+-NsTpDq/I;Rh(A#c[:CA?*7f*gYEcr_sFQa[s&9%rM-&rO$&knfas^&-&VCo/3i4rY=WZO!;1j/_)!*E]C?$<\UchaO@0-WoH?dMKj(Rl,b`A.OE,RJ3Y4h_5XlT!qU9Ee\oI_*EFJ@V%:@]_q&b0=d*S4eAY(1<lO4eN9k5la;WRB2>:k3?7WsM,(H+^>%"NCtF/F[Y6RDRhZ&Fi<$n>AC`nO1bQnsTa7!F=Q6:o9@,#JgJU%oLnGUSDW*QM$LT^[N+-t'^0RuqIi9:Zd:=5Snp6$V,$'9*T<rsjH4Z_I9\6Bap1ISZ4T]O>JcL:9`fRiQ]FLZI7qckSaWZh=pA:T%KFGi9$XU:g);>.H&WZ98)7bj"SHIGbOV$AV-5HD:)9s/keW@[['qenr".,sNJns4&Pho.W[\3hJ9r>IJImm^i9_N'`n0p'[ob-0f%K9Z"S\,o]-Hq`3spc.n8Z[6/fegLS3\KT/TSc)J0-Wd=!O;pI[B_]BK'R`r=;H+YW!ZW<$^m*"g]R'$(6R_q7D856)Sd8q4bX:ZU%MXd<u!naR/NcR@'I?P3'E;'h>+j21qWO!&TCSN9o_S`sGSHaR78Z@s<QN<*c@d<#7Z3N7FlJ\=R>g,=bW@=>bjP+D71=a(QcA@DN%__&.i\m?!_+mjmF3@*4,@WNKMq]u[?,a>+V7l>p,0,l[e@8*#L!HL>%"G;-PcjPctOg;qafR<epNe3hYb8&qZ'7d`e:W7t5\t=&O%.#mc[.L?CJ/2+]%:MV;uG.uQ,ca5WA"UM2b'sO#%l+Z`31[Xp)6gqjXYEJB]CEGh;.40i(_@a:0qU-!"PNiQ'fETFoRpoC1"EXK)%N8);Y+BceV-Gq+/`bIAc.J]4[7E[>u+9>_BU!@C(-'%ZN"DH!(E9D0jHd&T+[B3+I'/mY:.AI@m6J8FeQ%OHkBSQegnT]8faV-&O%ho7a7s1c)th.gG$g:dXV!>>YV:Ha"*$t_2W)&!()0LH+S%)[G;rpsInVc("(8oAe3`np1\elb'>QRt@sVq('&V36.Wk*f&RId#5I%)GI<Rk!p4f"de7q+-T^KQWY&HqdA*s5QGb$H@VTPPnP*VkNjclEDsS'1n%;R.GOU3b'*PX^>4)LN4G_4dqA'sg_&TgDQ[cl$!Q`X%i'<o\L>H'OQ.r2SFhj*+gWD1Hme8VbgdAg=*#^*bW\-M5BCb9*]b#35hhHu)8NIbQC.CkVi4,<Qaqc$eF/0m2PZ+qg^'p";a[DW`%!1k-&)^XPa:P/kBn-1m345=cM)G]BQo6P46o>LB*"WQ3J.McC+igE&;V]QXfl4$a`WVQ4GUScUO:4=q/qc!,oD`M2n+(8d<b^N43%n3S,7?\mCTp7&<QE#Ia$%3Jl30UX;eU1(AXk4U1K<<]4.C]uN0a@([u07*.33(PpKLS:t`0>^(!5Mlke1l&SP5L%hrP`6C`+.fl=%28iJObSYNAi%>UF.,RCOT`0l?GN-oX.a-]YN<R@Jm63KWr0P_;<a:XI^"g+aCtKo\o#a)NqirhMdpMfA0seqMVuG=oo)Vt?"4'an%r8XF8.OVXac1%[>GcK!4nchhdY4@Y)@uZ!)jJVdnPNiSVGVdeWB=,A^kDmh0g8eN,/j<#hT3oPoFF@<io5/@DD"Gj4I.#>5=#$++%rSB"dmr-;:ebkS7paYF2lO3*X+5'p;aFY8i@O=25@r#a/PFLFQPcT`-rQ=9^BQ!@`ou8p.o#fS_kA=)LiO?eZ]YE%s2VUCrgN.7S%AG;R\*e3&Yru>n`gVIqXHWAqK9K[edb"U[)m#5)ukbp&eY)dln`-$XRKVOl<q7?=,-n61h'jo3*$Ql!RV0d:Lp"/?Sr^,kIYsr`$%G3H<F#UA=P'!.#-,H@%gM7+O).-'on1XmU(2OltR$49rVOTuIBHAjJuCZ]kN;9W$`s'"N*!>(4\gZ.:=4l2?a3>RJb^Upqkpg;tb%o_i^)?mrL)UG[&[gZ:)le+p\VQc@;1`*Re:aa4A*_Sl'&Gc(!-caV-^@eD</5-s@%Y]s[*p7Tlrgc^'=#d*j1.NBnDQ$&[lWg^Za%BMDj-1Bf/f9bW2($mLN\M0&UG=R4*PMI&''=qu7t<8'k/"k+qLKW>F%DijhshH;GfXDAtND%c??FIS5./VT2.0#$tNZ!hRY<7rb:%%+:iFf=3&PN!B<q#'$8EoSZ..#'.kU?V33Qich7EUH-.a>g,9*r[b*c.9Fi&Eol1Sp6:s#9N6Y4dqtd>laC+TQdNATlS9Zc81dVl%b:Vn,pJlAAF>_7u/PaJC9!IAHY)$+_f(DIY&Q4-,m,bpM[4l7_i9n4=0>INJ92c?Wd$(@mToV:5n%1I0>ZQP4cmqf2C=&8j7nf2<%]dirc/q,hSmZ&rl2rM-C$C'6]eC0X:D,GW'b;Tr]^I#TUQE,r&')>c*cnGu4'oYBt#+dm8)SQ&P(GhJU<Htj(B4%0Fc&,BmBNFgr%.68\0eWW5(id(K8$!s8fm4:uXY?L6jR4W*#75.W1&[`Sn_m?&<X6f8J<3RKF-CjGISg]#%eUgp$olbK#REY"kd8Y^/IS7,?an6E3%A4eT_#\#$VeM:'bo+t9MibHk"m+9K\a>O<P"r"U%.heY_]s`"[H<gdYIWWEU2%P,FI>@KDTi117+EdH8Ljk8S].:2-LoIU_X8\Mh%Bd3*R3@^E*k,l%L]u@4RI\58S*/jXljKcJsgo-%0?Z!Ycl&<<ljfStYk1s0\DPlBnfq?C$Kng=7.aV[3jMjUNCd0^+Y2:/iNC!hu%;M"1o06!Nk3H9<B!`AatX>n)dnFKZJ)<nkDiSnDPMn;DRe9JN*rr$W6%L)1lo'af8p]?$LYj]ENQ@;5KepL]q/CgrlKc5.Nk=.OP%R[,VlH!R/9"Z#%&`GN;YIQL=\MPs&7/.!4%8oVB+p"Q!AWQApWoqDS7*dMa*s"(t+@O+raGs@3sqn2HZ<\XS6&!ei9Ia+dN+&:GO%8S]u'7d@5WgX&I$G20ki.p1RAaP6*VlH+!8^^YB.c[:=GB/J]"Q_OP(M^]OZJU[(k*/gkiI=$[?9L3=\7#@$bkOc(IMr/g/@T;m<%@8s5LRDmr[g6#mZdrg)@?f-b^Ls%]H>if_7CYY!r^HQ[o?Go<ndi[S\S3G/86KbC9<+V@bNaBa8T%1s[8N?a1IUS%i8Wb.6h0p\T%4=b(8bC?"Lr-RI>VJpj(O=@VC0ogfn5*N`42RQo+4GY*X)U7@3]lka;1U7!2n#]9g4L(:lBg#$bFs(<cXX)&T(,Ah_^T3c3Xa$!X%3:1:UHWsHg\I<Pt;/HP+Q]GR\5f]2t)hsI#3"Bo\5Yf6t+J4qNDo<.7?I>uAUIb4uX@(5Sk*K0mT_Wc#QW"B![ljhX^^=M0M^s@!%\5f8mVQr/0=D7)]:Hcut=l2`G1m%5@s8M"m>Uj/*I-ik>r7*s]6t\]2)]2!*k_t=95,c=R-BIW\6>\+2mc*6Z^tf6TPUl4bAk!^'%\'+R6:N7I=c\DmV9eWO_qSIsHY-lQK0l?mYim7ONm>I2p?Qd"(%__BOFI"#A@/\;;DJbSE?R_IQ#fBbNq0)YX(OdBh_]1'&9bUrk%R,n_AFRV9DiiQI@j3g-(&B/&QmX0+b->_q_SNSg,<p[PIE1!gT#+Y")2/qa0C-2+BEkA`cE$X%A`D:)H`;FH66CurF31IVX+YJ/]%GNX.Tg";Qm[>RsGrks>oG[O#SNE$bp8$,S0FT/F"1"\(ZGNGGEa`OGN/CW_QQq+:f<ET4AFEgY=&nl[\CVfL+aE2)gN)1Uh9W*/I%Y1+cI5EP-SMl3<B.siDJ'BC>m*?L"Q2u0bLR"C'<56<97XhbA.W,oE;gk<_MOBB%u-@!7b$>i5sb/CQ0P'1H&[bBVid:-6`h.9Y[%DGV,u7(9kBd%7LDWg-;Bk`1(5au/]TM=+Kf*Scn^'&?f5LC^LPEed^\=`fSF\CV?CATH6N\o0\9,dJ_mZl#ksb2Uf/2C$5iI7oGH%EV79ZXU8+VoA4O5n?EJgWg7n?FXb#=<PE=YQXIY2As1Rr-7=`9c(,U>7AhGZI&hZn8o+%s3&06uPfB(gP*kZ;8upo*,,N2J.>HeK%OC#S'Y^S1:q?AC^A=noJZH(q[)bf`o;A6r"CdY/KP?M!l5NdrpR*.VEAM<h@\F"n_@!?^-Be<KAMCCfg+]i9pQ!@LH2;sk/G&RK&%0:on#obTXK.p%D]-S<kYIWWN7qk+BI>%7'qr&i/K$s][4'HPT$XV\-UZAUAA2OVn+p52n9'aVhe?&c%!n@=p_bS\aRbB[X,,'PEo%^q=@/f\LhWg>EU->?O2fHBr=]Suk$Kcbf3U\KbY#<(DmJB7GUJr;Lj/bOs1K@;B`*rVH4=PZ#+W3q?"&`%fH(*1oIMoRe"Ir7T(_%Vu:J@nRFb,gUbY9Cs?WW'?)oBU=PR(8.eUpQlI:ZX&/,2U`Q:n=4[5_6Y#H`Y/_bUO#Y9LZ7ff$I=2TBkC4l8f'd6Ic]j@>Nai")%e73jOQHQ8leY>\t6:PApL0+,`G]&2<BP:^3:\Nkdd1:IArLbpn99Oe#?5[h#B`EP:-.@R3iIYdt9>=kT-(IH!Ts;VfO4cl/:2@^U%F^b[r3Q\JiLH-A@[t(f:UCfrXltO"W.%K2n^*0[Qf,++F_fsaZf.->qZ]QiUXZ6VRAuTS<($aeBj)<"Y:SA2b6Sd%#Y]DDd`0tjD%To:,d$1U`G;G@D5Bf>.5C6?jG*<g:g9'Y.8%$[eY"DmnrCAPgr<>b`E+08*cD,KY.+aC5#oMb,n)dJUW]Q#et/:2E(-B@G*Pm,_%%r#*I)eTb//4'+tRR"%hf/%N$eA3cJj^3bKGc[M_t8nf2dnr1r;?`R'aaiG2#Z4c1k](B-D$Q4.P/&eg(qRZGVMe19HfYb4<F0dER%3W#hJZO[Gc@MpB'T8?D-_Gp4>VEK[_ZNJkqp774^d]t>WLYYj`qH^WN5k-X/_U5Z)!p(5.,l(`Br;2g.Y5Y'6K%?R.5/Xqt7rlT_%";oHTIPucad+Qq![*7h54XD>5]n[/cgf\k!jlrhYq+MsMXpZb_^94em[V9r5EiIM`#Vh$fq(RKsR`YTNDEnbP()@j]+nShHefK`$%[f]Fb6huF\,-.[#2M;Ii1AU\@*(6D3Jq.PZ1,AP9]OC(]d?j[?ANL:W0#h@q0,/ba>e#ih0=bJ1*kSqR*2_/h&$.Ed_X.\%6;P=r%:PK8VOK-@h_!R7OU-n85:*CI("V:DCfsZGJ`[+.]H?@D2iUO$7g"FI9iJQ/nVT7H+g%76D@?RP/Y]dK$*glAAh"96OQ%N\QWjI#c%<tDUi"K8!TipXK!nf^Z.@8@'U@i68KHY\3T*WCKsQ7C3N0)TYmIG$5#9Vh=2`SBgP[QEnP08HkZ4k0#NR*`ElF#)e:NndWSOf,'F%F3g2C-24ne4BhMb/2Gn0fL:\^:AW(-A,PkAHt[?!r)R(FfDX;AH+2%`?Z2fQDTL8LdIaD3m$Q*^N5KE>:ClMsB0LOS1>c8TbK\'%%PN+6D\MuWdX]0a8f#c0kb[-Fb,"jT0(L+cMB6.bQm_8L6<;\QF=%nPG(W8O"/MU6TmtUK@=2`=_YaVas2U;PkZRU#jU6SS&b%XHF%27rAPI:9=joQ&A>)&a1=?7sFCQY9%k\^r93=#*Q.V1cT#OMC%LB;OC.e*3c8YnO:6YlRV1@OGFGm#F9,>d0Ek)<G`io?)&cchcG0%o(/mp`d&jWIqc1X*j9,cNJ)u"?g:k+QUffnVhBQ+R\TPI^=P*V[_t@&5CSc-K,Ys'8NJ\or%+,f`d=7qa53sS5"63'm7j1lS0[KF%m@&"7::DCQ/"CSAi(B()SE6@))(n``5K2)9_]])Rp*p!W1]2'p..m.=aC8eE?@%K9cE>;HU8f?ZLLIPj$"mXY22<rH0U2Xti/c>b%aTIH">qo2I6)r"^kg3EBBh"fE^V*lr>A)!G+9O*mP)P!\Kp^H;T$I]a*u7eWGk=%NK<,%J'ou\Q4+aeVdR^sI9ZkYBR=O*5l[h*k%Uk?@k1<h4<*YR(P3k4=HK/>9-81niVnfgFSEPqG\d:qr6p:t]DJ'@^DLZE5.Qi_jrKJHk9VUrAlkSAc/k9X&]:g=Ke2RaK([GDL<%+'?A?1/ZiG8it,Ze21E3YRRbhjQF+n\-r\jmb.\Q-H7]`_O,/`9QY+Jnu0unlP;0Dr,/HKhXnZq1ZucEq.&pG9X*q2m_9@$,u#E1%N1!4FA74KC/i8U2L?6j`qT/tNTT3"34Q4@fmd*^A)D*Y=)pLHW90]kr@Kk^PL3P=d^cW[6TS*J2?VB@O*k79B\UEu\*'G'B'&U\k%O-L[o!2:jY1)aM>VYP1L1Q,r+9!CtR0dGT&<qq,k#^K%/V)8N1CkRq,bL./R4N\B;5-Ka(L7OHP#Y46u\+1V3<dL?f35ntonW*BF%N$Y4Pkoc7j==YF[o$\(J\e_6YY>A'nZ93T!aWEOP;#3G.(7UC45;&He=bRcj*0u'hR9u[ll.e2.=j.T3lFZ!00sh,$./EVW6BIBW%>ksd*=_Nf!6VX9m99]^I$dpol1T:j[T=)#!U/alJ'@#kNMQOlG@l&/d:WSme5?e?O2560)(pW<K?=W%+ca`jG;@k\uDPV;n,NX"(%,c2rj_)672.bK;a5%,\h"pN3imqIEkCM*Lj_fY_a$MrH?/<?e(futgeAdki-Fh_]W]D9sMno5\k%?K4?2dbXsU\F9rDSCuLmbXu1%>`Ue\<'=M/D4])!^dC2M]Kc_lj:@U@qHfg&f#9gTUAO!Q*UF$#Plh]S?(7@$giQbaoi:nKq5Rt1TG-TT9Q`@"r8Y-=#I'&s;ATCd%jf,9(=N<'["I;QKe,)lL:)e>n]]8Gk;C")F8<\Wb9ULLI;nh)U/<]Wu\\.ZW\RlWnSsR'TpXH`ms6fGahQSeInB6/V*QlSYV@W:_%QM3Wb3]T0B@<QRj**M.1GgD&*?D1f10VH&S%)O)%D=)XoOf+4INULX'pEkQ_(.8CZ4Ud;f3QHYAKb%frNeKWJ9gUZ)JK?m.L3CNN%Cg^q#"qDkl6[F\3<WA1<S$'+L\R,)IZ[@+>e:OHVVRdGIie6+-12[J<_Y%;jG9T_A$I527>.9R*+"iq)%!l6*GaC&(!%]`+N,9#9%!YIMBORpWO[kc$a%.X9b9I]/srmJ*$D9*HmNt\joBj&eiQGmfB=;^Y(Bj$St!pdojopAM^s6Ini`5o"+aakf<HksK`Re^+`]pRDq%<K^l1)G:br0:D?_F6Ab!.cCD/GNOr5:PQkkU6+[3q>TK6'R@OR-M"g-*l<pOFR0pSh=8ad9mKWh4'sVc=k@j*2;1Jel9Xh"pq2%e%,K&IHUb63UE1kk?>7>`1X&3-GOZ*Z>kiBAIgSc3Op1<cfeVem<kAGa5+L%Gkqdjh](LG_Ya`D(Pk&UTR_V7SX#b:f,;msGZ:2[F<%TJaFh@i+NeBZA.6KEH"/-J+ar/-3n(E<2PSW:%f`;`K_H*n2*=4Qe8W$0&LFEaBN(YA]\ErIl#?QRh'1[-Q#jjK*\%H1tUdgN$D\%G:!1"*DH,2EE>>8-EZVDlk;UqrX8UVp>N3E9_Q<;L[@?nRI'@.?^]]tf=O_bo'6@cCi<sl8%IM2$.$JL0ArHqQk*Dhm-MCp2;SMF%S@a.mVUc]Iil?Pp"A3k0a&i'$*Idf/PInMTKC@.FY;7"<DDJbh^Ft-.mGl<0A>#SobpQ=d'XYKs0:>j&,Fc>#V^u'`q#337Lf,g?%aE;%bPZ+34<Rh^O0U6=)1O<4`P",ktX9th/9,\<s"Y[M\^3endo$4a-c-S;.($!s)dOSeiZ$7=k(aJ]M<KHb(huLK-Gg;nh<i4T`%;Wd:SE-_VW9M#99A*YV6D5\Zge*llX6)OUAmFuFDip`LF.JJ+)It-Mugf2G'<(_,^bfo%Z'`P1-1pW<Ta7dNkIC'mZp-k'^X]B\A%PN(q!PN"40PHnG,?P:\+&\YH;)rM'+oI6*96KX;69rqN6([\l*OP'B@`gjHF>g6snPatAhb#Z65WkQ>iX9GSfp;BlP:f8AdM?GKV%CLXi\%2!$BU;)aAo=gopXp-uS\n8s9nniG`'pePD]Sc*IX?3!kD/k]MZ3?rfYC<^>5?IJ.d=P:iIY8_/QFI6fAY.>hoj?(aO?R04%]BJh/#b6NNJJZ`r_1(b4kCtKj+9kVY5("\&ibm4K45?#-?,!g+)boM>?)gfh6AEu5G&\`@p#YK*B(2`,kJMaCOM3CP8+:eC\X17p%FDD1<#-(!1hfbO/ffptBok%"L^%?0jSF"t"K:2M_o]<Q$5)c$(ZB$7N54[[o^2i!!*+!pe@sG7_I[3-(E$rcQ\9V#]n0ditr_C3p%+7(6*CGb-%1`_YG>kp-<k+&TeY.1Uu]#V)g4q^95J%lf!!nl8c*-fle=[;*DohF6$LQCnsMTTrD%4Umd0UER,`=p0H+]mqT@p`7P%i/>>Oo^;6L>9<=4"dBQa"oHH-o+sr0@[C+jI&p>Y\m\l_2d3NA:mr*"IB;+UcM8I*V1n:44g?KW#WS]%hHG:'j29)S74>1]17W3n%dQTRjV3UPInR*pXB!a?g:kI4.=4.F9>"OpQ"YaO,0-Y1G'A=0VhSR#)*I@=JY,$I5S(?!p\Sr8DG[fBrmF:N]^DWD0Ng,pF:Rj1u%lQVe),//A;C/ndr5/>:=b49s<fP@upCfb!mY_+PN"qhl$KI$^R&=\2=pKC-<CO;o+WQP1\YS%*A#oq^De*4g</>RH%$'KO=1!KQ`%JIQQ=p)s.<0`h07<`\<N<gPe5rgnt-cRlVK[^6ZXgf5M.,";n%UsV&I3/]:GF32<i%tdA_mF@l=UBbHZ*TptUSf8SHq/a;pkU`X-%PFVVg-=tMkCDe%kk?dRn!IJgrpg`:A88`+(.=Dpi]CS(Uqg3,KPeMo+]@-LSk;Vr&PESm_oOL%/<*$m3:&6+Se4"0`hZ1u@daZ7N%G(*AWW=lO"d]2prJ,-=2i<eo!B!.@'.%nJj5*LX@TR[O/a]1r.1&PkU*G/.Q3]TVMjei_"]AJjn;@IP,s(?E$6^@qf0"-3&rmA<E%ScP4)?#8plq++o`I*ms^Q7-lSW![!9S'b.9N5l1)kOi]2@7GpaZ+)WPXY8Wib:lSHg\UJ!2@WI,2$h*(dB,''qr'l/F&H(P0u;G-%NTV1I&teHRJ>]kaK!9X_g#=@u*h3?/hEsmtk/-LJb_?Z$c_SM*fZWsh,h&<K9I]MkhZ)@@i2G5-j^T)ii/I+!AIg3AgUU#"/#C#u%Xd'+:^n/k`C5OY,c+;r)a"sTpjRQKqUe4I3n#Kl#;qt4O8I#Roe0BLK\2:_NdDVPoq:;plc.jPNQ*b7%s'fkRmhUPD`Fh!kHHi4K%.jL\3V!E0"e?nu;UGMm5>Udp_gt)I"LJIVsF%=nel.rCF.h23j#];#AeP<M9lJS6N(chKq/<Mm.-*_EEU_@:n_GB5S0'##ud$E"L%e9*3$O?:3'G>KV6cA@\@PWH;7::KVUWjQ9jB(o`nS.&")_o+RXkEj6Q7Lpb(p^U*M/:/rJhs]Se)T`\jf"]*G?(78Af@c'U@H1`G%pm?Q7Igtu&+A!'Ke:(rk+BJLOo$uIRj2=a`Z'!A^s/_9u(EN_Vs(&Dc0AeRrajr0LjPM(bIi2eZjmO?-%h9+#9QcYRHp$r<?D)U:%,Q#6.>e%0a/T:4B$'(EjFlYAjiHY$EZ2JN_n$9KJI..s#r&R,AT(%(_;cqiBK_]l%pF]FW'r:Y^hgGY=-cJ;cq+U27Fp.C42@^M]%7u+o@B#9++nF9"tlE:%%jR<HgFs'F29`6K%B9's?QHTZ"R>7\+@\BZ7-.r2Fjtut>'(H1,+]km'![Pja(Y<Eb:tZA]i;Q$(UF;eh%E4">"OF%fm6)VC(5@,eq?C*>"hki?YkLLU?P*eermN;[Bp)7NimYjgCH%tlL2?C$-1F6I-;1pU2iCl-on5f*30'u,qrs0EAeri2=%]jh9,:='Ni?Z**jo)NPX0/+9V%+fiDmp;^<>J]Tai-Pp:C)`P2$Q?#03=SnBIkGS(P2djr:X1)<`oJ;]ZC,dq\"sOMk+SaNp.4hW%f+D]4ng>5ujAH5c-?Lp1/A(-^Gf!TrA:_d)COc*S=jXF;MQZcSHoi.*e2sdKo'pkMpPd$CI7$h/>`m4Oa9'],E@H/-_0PjR*Do16%#nrVG^Q^iTM7eBpAs+?^UM!8=Go0B,j?BN91"ls,n*Pbm,t#*+T@i5LEpPt<nJ(;3rmk?Rrfh.>'Kj:r4uff!B5+R%MbNZPqeu=2%T&A9$T&4MXiLt-p-m,%p]^_5g_5dK\?Cbsfm^B!N/R=cUiJg)1Us'sRs&Yt0X_n$lqbW\<SR.O`i5j>1]XL>DJZ(U3$?kspe"D<R%KYqc[Q90&)rmla)Ag99ejD=*r$3XHo4NHAr9'Ne'Eu,?=WQ=[u@E*N+=,/flN9itgPRM1Q=J>5VH%Ot1irmOi/!Z,*n&k<7OB8Bb%L+BDrbE[uU@2>],-%K+id*;EKg9;<&btZl+lW-YP.\*JXn=]k12uCEB!q[gUc[g_N$=BGl%6,lJ/q5G$X^J$cX$k102js(_cQ=Ze%!Q6*..mBYAq>!WVL>Ir,G<Af2(ED0]#ZuFo66[]7oQK6Y%4;[-f%Tgk9DC:Qe!-=jBCTEA&l(e%X3:)47FA2rV/a-:GB/m&WN>cH%RlO1.@C^S5VR.CT$`UrpYNdPhbM3UGGYn&I-MY06S6SB8_hf@"BQ#K<3@%,\;u!Yg=a7DY[[/d1i#2=[,W*#PK$<17/.'V>6GaAI%d;W5$efd2E#3RQ!cDQ9M>r!R)>lBPfDW`NZ1u'\f$VuKC<Y7BU-RYUnMp(_3K*c6$?@M&?8!1uIV8GZG6l-A/rlAs,_SaQL%b\4@%BZKXIFpa;.Y/ojd3iMn!*Hqm_3EE@rEUdj,_WC1C,W9nS]&CM@GR4.>coL3U,4JZq<#Pm?VQM>b\-f^G*@;.THW=2,Kq(I8bQ&:c%jljpX4<d=NE?S<1#^8:d)X4]'A$naX7dAWbmW7:XRJ?%1U::DWg+YIm@3WAdb9"":Vq:.'>]K#NS+&&4)'H-j3DQ</X3.`<`QOI*%c;u.uqnb#nT>\Q'S:ms5Y4CNs]N)hQN-l$)Q\EE:V;j>Q9[tp2%El+N`iojjK[hTZ==<K"Xg)YYefB7.D"i6G"SY8,4&Zmb][H5"%JnPZV\,rg^YiW8t%'Hs^G1U/mcGQ`q((C%!bm'o?K90B+]ps#@mc3BuG`-:W;hCW/_;K#.H)n0tn&qCGDFc-;Go]rPe4P3f0'U4U%hU4Hsf>Mc345[\(N62B`>iXS#Y.Pt$S(_oimfPOtSIR^Ilr<s)]D.?IGKgR8$',D_j$t5e=Um?9MB>o2<8i6NGUn?T,GpW"[1jWZ%o_?;J9MO[=\ZN3'e_h"fb9LfE*C%0+0h%Vn>m]2o`>eL>R%/!1"^Q^=RTAh;hig_*n6kG"W?+p1i'G_(6jI_DG2`[@(ApGlXqaOZ%9uHW&Yj_43FuZ(5(UkU!oik*WT>&H:4aB/E>UpMpoDDq,5.Z%mVX;Y$V>^5U?$X<Gd`_1FVO5cU_i]Z'_gK-Q\L5Aed$U?u$,cV-%/@.$;Y3dch\c0>#Y%O'GXNA]IF63++s"D*3#2V,qXY'"c^6Ri0mHni>&W*6JPuI5)j3ddfZSEm=9>%lTet0dgbQnHT[ToY63*uKf%,(?-:(&i=#_Dg+lA'a/,7oqT#4Se%4kD"@[NqS3re^N+2pTq1#@XKOcKCSqh8%)uN>56Q1PK0!1V-8#Aa;Oo`gD3#_pLTcDjj$f7%pmL8,&,CU0>D`4Vl0Jm;hXu#7LMBZ;&Jh>mDXq&B5omobS#mO\PpWgP\T7T&_HZVK2GZh/kuhaC*sO%`?Qji\S11$lJA\%kNfh+5%mJAppq8W_EJ;2&f9.G_kE;Wp?8<E]^5Iq&BEY:R6`.KFB!t1mT_2CqHBbB<e(VHFG*_&NU%NiDg[N&&=jO=>G^suAPAiDS0I%]^.%F.2U+3T5Q_YgE`;R?C@Na*1Nn\-N`r=AY^NH2V?-Umh^&5hAkdEipifJej%:9nJ#cHk=Y2\1^Ek<='2I$hqB7'+`Bc8m(g%lGs40%2^(Tp-u+Pj^3s5r?fWqa<.g$:'ncHZ.H9G?W?e<R0I%!LdEC?f@\-X-?Q0-[k_0eNiRs)eiV"3C(N^,HH_Gt5:8[Nn^2TEugV`<O%C_c">c3kA1\^SIMUO)@7eOQOqgWMKkU$4i1IUr,6:W%e![]U!App!t3.h(B#53U?IY!U`(?SXhCHf!KnoC-C<8oYCAh-9\#'i2I%%X[lpL]lap'bn&_*2I2F-Ar/f3f9VIeH2Q:@(uuDpWZTKPA1j!l9WDanpl6bI-H^_hIUY0`r3eP1Tg0IZNBbQfbU;[Ifg9!5,VZtg%?I-"YFLI8c^])-!iWI<+VrnfU.YP!=qtq,n_TecX2("1`fc;VJh!cL(/QH?W0RaBeX$BGp@1eZ`;ahg1^@uhoZU>D9.QXM-Ok<'a%i*?G5SWXmfPaLu&Ud'h<2T1u*YUV:'`aj1pm):ag%,sUVnWe%!pA.nd,].A4LSm''E%7UWGVJI/Qg]8=KY)tH)=*c,!+W.hJ_@H5%HEd9QK=Bm:I[^<OqtN#'m^HbUE2A9[GO=HAXh"8k$9>j[5:!#<<C9[2!Ts)Ti,T(#A:]Q(%QCuQlN$eQ9+NBoiVWD9<nbj`6Y-]c%YbjML=Dj@E>Pjm/VULP1q*)OfduHZHo0/PjNn*CIC$oO155#WWA(\a;m^!0o.hX$u'5`FsE#r2U;7/KrkLW*9DJk,p.N`S^\^l(=%L&"Kp[PZUlf&Z%XZT.hYNc&P0^H^P]Z8oZGqH.8*d=4hSKf<k^F2omTMPc?bTs5+eQ/uAC02JoE)JG"efV\\n``tLrA60+Ok/F^@%/C!=_ESOg-f6qh_a,afa\Ao]7CJM#h\L=$W2li$b<3rar)V'?!M7fFVh6V,9%l`7'/EaDgnm_-37GbW@:0qUBa%d\RHTA])ht=Y\%,O;cr2g8YVEZs5_9D^7Mn(qH1"g#GoH!5SOH!Bh$Wf2q`beUelUO-Kj&C,KI=D&AmYKSRm5u_n;m]`SDHf=$d-X6<+mds\-8`&TA%mE=M\@b5c0H$0G::oH\=$mj]KSL-H:G.B:ZU>Eb,=Ep&X*BErRa<L/UT*fYagS^r!I^K'LT)55iLnUdc,]Um2=8?_Z3#GN4^7k5]%?lP/O&7i\nr`i5'@rb=f>o7#"_d@kW#=A;<`UIBX$`j'1f6C4M[8dT%<QF*MnQ&_0cXS]2@u-+C$^rksqMLobe6FEM(S^Bec)NEt%koG2m@[t/HW@t\rr8JuLs,0l`Ss^iS7p]LMYV-jannJK^'IQ>9q^GHO@:ArW]D,jeQ60['_('BL$-'3,;c1P]'%V4[),_-?`Ok^.%bQYZ(=e;Ruocejj<JI!M+9;D$MN<+ig<&:4Pdc_/o#B9C\]"X<g$(.UF>P'Zhd&G4'OrmYIM<UAkL8J$!TQtm((9h3Y3Q3?1#rU1%*u>,[/NY0Y-FgFH92,WR-Eb*8Y$T@`_NEmJ^fEVoS&8U@G^oQ9ltD1;*`?t&45,Bn+8o*!lRu9.[(+a=LUY(<!=TO?3Ut^`*U]?0%3,tD[<C^<%MfVu!'qB-!QS(7$,C%Z3CCai.+i(rW=M`IT4OuEoIO&ekd<A2:!+b1^"lGX1;(b%5?_gA^1Ks=pb]=o`_F;/A??fg7%Z@?SAR4CTWb/&N#6TjhO^BCYO&o0NFOMl!\'`*@["CI\Cr<sd8pl@O1UG24B4>k[T/AqE>OOXZHrHb&*UH<b2pXb%E+3kM5`_A.]%MX'r$KsSDBQ0>u,p[e,(O)9tO^XZ+<K+6(g=br,]7S7)/I!I=Tca+'<?%;h1k"rHdGDBt:lOT>+hs[aU[U*iiDBFWA6W6A6euETU%4^L:Z?`pTI?2sY9n`fWCiVN(]\1q6+I9fr\Xndn,QVU]7_hG8c*qRPr"$Q4Mo'g/#Gh.>Dm^q%M1ba%N\:">Tc\:.?eg`f9a&B><%pY+VnX7rHaZ,ME^T?"7@n\>7!nct'fMneQ#G:R$DB?h<C=bk8iSCNJZDgrqXE!9];1)KNfdL3fVDI=VIYji9f`%p\d"<PHP33um?%X(GpZiE[k4lN?DG_X[3b6"P,rC1OLF2SD"MI_CoJjna#,/TVZ)IWQX#U=BK5>:Yu_7G`"K5WF1Z3BU0jH/k%,6L=/Riq\%1$9(q<%YC-!R_qlo@<05jSqA.phO;\l5AS5TR>BgsjgLKn:Lq:JoR9:q%/sK>?G$,:q_1Sh)5m<mFqus7Mhp:hNY"jJ'?PN;PWr#GRoeQR4%H%EDZg$FXYq7i$2[lMQIHeAe>7gf0P)t+-KJ5(3Kjp.B9Xl0".j:FEn2XTFGPZp\JrXQ./i[,2[mM(8F>`Mi(TpR6EKO`eKEQ3a*%PXB^F:DX4&=RG4qSugM.O.bD3ZuZ!U^)An2o]0^R7FSkfV(A.O0AT=1[P*,QA>G7k'nb#UR']-dj3>L(f'266:%\rAe[X(rM(Tt&%DH^E)7rO`C>X;8GQoS"CFcP?Tk1%\j',R97*^<ao9]<#(=n[JV'%Y'2I,-H2"0]HMH\.=;5b`[24YHHi"Q0UcEeD,/&/.""m7-4Y%8YOo"gV.[?oorb9TANb?ceZ@Ono85PBP`.>.Xd63p,n`Z*17'IBWF$7Q&ob#p/?2@*o,l-)4DqVJaU/kfcHL."qK)*Q<ohY$l8Dk%Tkk>[3d;da15ZK5^r\pf?ugfo:H4dVY0`&ri64L(;^ksU3t[?64Rba-,^:,ej+6J>j7j.4!>"J)k$P`.4lVdJouZ]+[kNOql$@S5%(&$ulE:9.g]mhh:?<itKZ@ieV=I+HA5&1u=.\cOjC^!0loC,>3N6q'dXmYC1>9)$Xps7Yn2LMfQY6Lpe@Zrrc7[HkXNH4b&<loR(%j5eh!IO)#d>(iHWn%m=Yfpp$ZV(M;)IDm\EW=!cAc/`oe>A66&=(@;L0/#+WPPRp;j9'NC%_EO_;>*g6><d4DYsR(m?SZ-_UPl.0%bAeT,O;6!+=Ts!G@+hFKK&f<+<:\7A<^)_i\';T4fgFj5<jGLO)nbl+YT:HBDmpeZmca<8R1-:@=In%;U!6p3VgJi0Wt0=5Vl(SZ%5n7MbWrr.^9CTpMrSAm]:?H96#/-YR\Pc%Oo=lZ6?JGq9j7@-XKjBjZatIegfqWncC`b3X5i#If^9T'=GOR4M&!+)5Y`Vl&<5+;l%GB97JfZ;M,8GgETU-9.N#TG$98qF2P)W]]?E51jVcUP[iVDD$/S@jp#$5R!`.d&'[]T6nDn[cglcD5f]mMSN$/,;X-@W_@BGgLf\%!@Q[kR5a]+HS%P&AJc><Y7BSG`,&r\/cCBrQHIEgk[Qmn%@^?P[m,/@W[JVBWt5s1aW>gH)G@"q*[93s%ukBk<Zi7VC_`%PfHZZU%Nu>"NCQsfY#ToX@hhRb74`j$s_Cpl0H`D)3%\+@0``61?:>@\<&'bL]h=H6K<F=AoNMhFN"&g@)KN_]M-Rdp;0Dh;b396;sJ*`j`%qBa'hcbcWB&B;Q?%=Hp>,S*6?j8ZD1(GcH,,5!T]EnUTdDb>%q>rG@UZ6TYh+j0gr8ZoamlX,k:h.llFOlZ)EI.R>#8Ij&_*tno'%"<*e^HM/Yc$>quc;1-2DBlu`\b^En5g@=Lt,!<s.)sctJg&7c=E%UPV<:/n4F"qp`'_4O4=[lW_Og7$CHDZ4:;c36/H+,Zsb?G2g%i=RR9piT`rHn+q2j)T/ldpKLjdngUbK0Yubed:m3A`7o@i^]Fo)mU>aHg.=\X_`(LNmEG/+jG1eKkl`V0CE?r#f^C0L+6WU,IBaL%$+O94R8e3V1QULh5RII/F(f<%$t;H!993.:mP?[X-7iN-hqk!a#QEucp!)l6kPUt<QQ^]8pn&l3#QIij_mWJ_G'mYEnA3hh(s60T%^YZ[g4[5I/hrTSSO$dETjjqW0ipGj^mF1+kb<NlR0HFtOp/Vub)oMO@VhVOp/*g0!&7=TCk]A::4WUh_>N3DMrs0uUcf2,[nXieo%*a#7"plaIipc?'qYWKLIrphbUH[V.mhpdD\4(O$TMo,LM%r:0c5Jm&b@;gC#pup?K^4LZTL\t>h<3[q0Y[=D0C3>%$@0lk4f,_5?%d,I$m;Uqa=P:C4N;9<04n%EsN(EWI=HHGnd6*=3>H$.jB=8Z7DodWtIFdUEn92<`P_1lMq2CeSs34%@l6c0-rQDeHk57Gf>Q0M,H%Wd3-q#HDTQkUX-rV4&c.*fRf[[p>8Q)Y]!O_qEi7_7h2,V_/%(gX&%cY/7Sf[FU$Y%U8[#DV_I/NAK7lBKqI-m?6RF*q]j^PgnBh%\YZn+<A_,n/MrhoaV_2Bs6_/'Nk"k,f<'kp;f^\t?%=rD;l[DD(JPo*3Rs;[<2E/$1mk4LH85e!r-u-6EJJj-<s>;fjH@$jlgiaH%]M*(F.bFigY+X[[I82)ukB]!lYqe&[<C)8:0.IQkW(_uL;2Hn;Pu02u>+C1:+5"%c:8MTiI+PFiMNs$DXpQ(@I8Pht6tJE$NCn;L%W/Q%jeD_0A<e,VQj]))j\-"k\%T"M7\LM8HogL/n&XDV-2(I!"U,)"F;N"IM=TeA?.]\m1e'm^bAR_73Jd,.\<$E#RR1<Mt&mZ\2%UL#:T3!GRi@,KNV4#Kgh!M4H>-kl2W'f;<SU(X/Ub&lhcQ08iX)>,ba`P#47g;(F6F"6MKa<7QXj>du4R/3NiTnpj5kaY7c$)ob+%RFL41<'%h/`Ll(_o8>]GF]cUr@\0WP##d`c&en63&m_7F>p:bn?7*'>"dL^EDq-k5_S%S\KdPrm.VLO/73t84Q0HXQ.a]Q:1?rFK%Mc3I:]A8Mgf5k?<jn4?Dk-lgP0_Il166[IL@;@]o6UYG6a8"6Z:1CmdC9>oto.X]Z2:;)&I]:^_8?*Y4g8PsbC9a$e+e]'DM60#Q%]A(k-C_u7uR4egQfYS0Ml!O^&GI\\n(5AWB),1!N3^gh[QO]KDS/e9H&bRlm[CpcFgP)]G.KQ?&pp7gj4IVYpWh@2X(QA\h4JkKt%Ld[ScaJbFs/P\U.Dg05NCsR\^\ouJcM0Z62)GGQVM,6TO3cp?RFGZrTHC<:B'NA+`I@$uS>>0cf\"[.dAR_73Jd,.\<$E#RR1<Mt%&mZ\2UL#:T3!GR)@,L'c$6)<SDFM0Rb/?DD"V%?CW'i&.1**qq-+ZKD7_MK1E=+2]^qQR,E$1,(<j^&I9[%QXcsZ-s8q\B<e"LPV%U.[mceB=X'VjL^nF^;fc(.@G8D%K_p2O@DI%Apk<6n"cb*P+/>7[Ie/*VD1e`@80<V:lrfE;`E'X;t#/m](jC;d\f/Th'X16eCrh%\jZBVl=EkO;c$U!c-ADId&l,fFu1qo_fAUI?T]MDnX'Mb@o<%h,XsmiC24.dlTi)"T/UZ4(L>qMY`t!TXU5t?IF3jI6t89"NC\/J%R#H?ZeDf>aoPD/:H/mKAU?h\[0LV>MF"CuYogL/n&XDV-3L/Y<;JGVUWPp<bFStRiNG!UoUG&('kGk2ke.7fIKiFp;f;M*(LruZ_%8M*\'V-ED[k'2ujTJ''7M0Z62)GGQVM,6TO3cp?RFGZrTHC<:B'NFp88XJS2kB:Wi1bm%gE`#J:4<b@,Qj-c);>ER)7Qa@ZCC1P%%2>tW-:m!^PR[Dj0TY]+oNIFq3lldsl7O5Q59Lc]hC2jS1CT]8i"BJM,PkaI#-K_igBJB*J,si3/l-M:;d3YMBl=EkO;c"oqT"ap2%WPK"XWf=a8`&q*)%Apk<6n"cb*P+]d\jTLe]hE0\mo9-=VWm\SODhrD^W&cN1m-s'csZ-o8qKAZ;ke=_aX*b2i+5fE;c"oqRQb*K%nnjcQfD$JI-K_igBJB*J,si3/l-M:;d3YMBl=EkO;c">72>N,rn%]@Hc3Ic71!`icK;gLR&W3M\LTXL2/eO@G09]S0K$*L@-X]5.%WNP%Xb/?E'7URH`I>UXM+tD'8CK,JtC`c>W-FGf:Pqo:@jbXa.j3k($7i[tbkGk2ke/+AU79$-Of;M*(LruZ_8M*\'V$q*>[Du$B%pu5HS&Vh^q\LM8HogL/n&XDV-M+Vdoq(VT2eD@PmVli6hYtMKTa<9<Eih38<-3+<,]s46H6j8'Sn<ful^f3WE"&gOIZRTWB`Ib'?%4pIl^p)'/PZ'nZYK..R0jgd*"Q.3ghP_mql$5uUC?pQ-,_nf=+(B[S_<jO8h0ZASH\Pfl\_,OkX"&gPH)%.?VZ!`Yf,[=ed60aQP%*CLRA=VWc\@_j2E7QA]0A9*[I3s_9Wc)RGQ'FQ7o;CpZjJfGJRR?`KVX,7cgYu!1UDcJf^N4-@2H_?5GX9ok>EF>.O6=;:<KSh/c%eVhBTVH>73@mNp@UOn@O$`d>D1RMXF<#,Of;CMhZ9:8o,Wh@0B$`;M>)44TlB4/m#C/tKIVH>O[P0Le,hI0g7`+i<V%Am5][FWO:%eA<g?;^PPO.VLNTK#uP>Qeu5]oZ=n5M:J[7)GID'YZri'Zjn8r#:nRq1pQRO'f;:e_1E+Dg(5fZQh]8GXA#^-<R>-2*BiK+P;_8&%lV-%"JgNBTW.G4P/=9\4d0)b>&u1N^b/A$q"V%=gY[I:Dk2St9<hTg$1f;M"csV_7P6$,f5GQ,04tE?YXBnoN@#BZ$!H<gT+$m9g%k?O[:eZ9)r9X.t\:s<j`+=caLmY`DmEEFi.M+*SY<,M+1U8A[^T?tM+<Wrr0fNV$@=0F6*i,KJO>*oSuLlocZBnA9Q_,;upQuJ;D%,oi/f==\.BLa<O$$!+o?6C2Xf%:cLgF!Hu1*2QXA7ql5F5p;2pU;Dmlic(,U,oe4L#mW=Aer&HF@YqoeKh=<sfb+e;?WAW@g5%$b%7u:0_5uEOd8GQ_s-tsol3#nbf#tO5__ElS-[A'+L=Q4:a-mbB[b7]bs]3$Effn^pa7B'-N;(@l>;!MMlW*pp:(`\d7LnbY8(-n"_%l6Q0DZ,E=a'oFD3]OCok[ob"-f8(^_7EJ=l;6lHp:toH]-s@j]3#nbW#tHFF_Eh=_[A$ue=Q4:akTh,o<XB!G/_5eW2.DE[;0nFF%PYNME'XLmlWmlhN%S')b_GLr2E)=SaXXI!jQFIN+WD(0+lBH6a_W#fsg,*8q_bgK!7SkC)B`pltMRB00NEG2[!i7J_/5Ve"`W?jW%GithGNEG1ZPcQ,M,tA7H2(R78@PhPN_*LL]3(f#?%a%dO/*YE:,n<Ge8]4IU'FUR1`B$kJ7P&O-8k0MOd[pYp+r+l^obk$QiIiD<%@$L:/(t>HcWD]>DL,]a@*XP97:-q6\MNspuN*,(W*@2cG:g:7hT;te"@PZGc;b1Z;VE1J!.N"pK)42&.$k1Z8eVqp4C5N0n16R2;%ouY!GU/K775GP)X0Vp'5R$+*N%!=&MN$:)nM?Qq1P(>&&b.piT;U)..US^")<0[kcM,=J3MA9nR3>scoJgkD*@&QVq%*;PM))Z-X%'FUf1,m.)OP_#NOV4(8K7SU-q8nKi_:n09lV-g3.<2WSl/<j&$$q^h*L4q+CC.=$u28t-?i$:!&;lL$P=fds3C=Eq*V,Sg..BQ32%:sMtP-s!+?==>IX)3iRM$k#KUeVoACC5N0nlB?cJdE97$fi$'C>GJ&t0I9"&Qr:'q%-9(kN7p.(M?Qp>P^t:Zb.pj6;U$UtUS_-I%,t8c>d]a,gKeCo7.Q2%!*J0P#ARJ-O1,)\>1u=skNLF=mPUpB5YYqfD#Y)p/25?b&RUSbtV+oY,Td23/4](n$:k>?!C5N0n!gS<c%?-C#[r)1e<Cnmje0N>"[9SlsXL'ec5-@$Of`I]PD8mk9N;@umE<%i"AW$rKSku@qaA1kbd/PJ$sd#FK'_*ZhtYa!^M==B!)@O64C%Q<5E/>T&b=]F5-I0ia0q2en5``KYJP7=Fj?;rp%WD+k5iU.3O)CbC'o2C]Z@KfL?JPXL=@A$ofLP:[Q4:)tNH3`(VDdDfqAZ6id,%+s"rrLii%p+ejtHNb(qn=@=HJ3?fJ>6\oDc[:<@'/Ii@M/OuU8>R1pY<'-@&fjYPYY[rV=M-2:5Z.cIaaVKf5e1F0i\sO_:NRa&#%9t".l-#u"TW/`m219nEqUraC1VfXQ3;[SopU5d]`APKTm7!?9K,1>-^=9qW#2jH5Q@e&X^$,iUV+g;NH=P[*-A;eF%Eu#%BN_gi`%['A>iXN;698B2;R,+UPULhL;+@p,!I(6Ne-'-\`H&gH%3m9%qMMaaGdm=\%-ed2q*XEH.1ZGe";.EiB<HT*+BNRa&#9t&\/>j5[W%W0B,/6lR)KZ)l%_Ml9#u+2aA6k$pC)=RB5AA;_IHPVVC]NRH=(]KmJU>Hk3N(5o-P0h53[RNnPdeW+38[Q$\)a;e'VCQ=3/Wh%;$%CpAdg.PjJhYur5,Z+@39aVKf4e2#'C3h$5GNRa&#9t"0B:c*5Y-+5fVg0!I:W50/UVfX`8;i7()ToE'4APKVc>7lRq-^7]7k%[4f%fshS0:ZT)uf6,JXYYj(5+jLWrF>H;tk>XO"DM'MV&VW#.7+'6j8Xr`H,e=Gn=@<kK$kYoe6R6YH[?Kf4fO>Fi3&<r:h$fFa3Rpm!%gL,q,,iQrY;04T^''E@Y'AWjs/0YF666srQV3j6?g.?B*CpAdES/EN.DMC^AS8'G!D6Uu'U3("'8p)pTeE0^hM/Iqt((Z*T_aDhr%!(i\Zm3K7P[Q$[<c@h"RRgP99a1@]&2V;L/:c]72Wbs:Sg77FTd;?,,ih:='GUU-@+Gk0>SOBs'(5n!cR3A<gAr%_XWHJp1#$WW&%$>5*LU73<h32bJ%F;o&$La\c2,)U8m8E-.S-dce8`?M$qAr%kH)'XoYWguPe_%o+eUMsh$.(U9?M/sT=8TYnfZ%sfufbfaDRuQAP%cDbt"h$.*MG_<l$NAi8sfm#mDSAl<Wh$.(7+pqt;Ln^@^OuTAn8TYnfEJPm1)'XrUL.L;DCM0Br@#IHAktHo3\u?6TF/k]t\%ri<%LVfJ<U$-*=,gNB4'&<ar/>A<Q$kPid"!hk]Q)!W)RUY5P3&<Z2h$f@_3E8hKgL,rQ'i?s&iZ>,LC75]82D2p2Y>hP_>"5gF7V1V5%3($*]bn*I:;sbjA%CTA,'[@+!75mRZEDEp*kVh(&&Q(MD6knGcOi091:86KNMa^%mbRdWn1IMl=<',qSK.RRqKJPt`dEN4oS7Cq[%F;o&$La\c"O[M-n@cEnm-dce8`?M$qAr%kH)'XoYWguPe_%qrbd[;7.e]e(kRoA,g\dc)M4;?'L%n/DZ,]QSePNXpWiXe[B'-aGo%.R_u1lXlmG@#MukktH?#\u?6TF/k]t\%ri<LVfJ<U$-*=,gNB4'&<ar/0YF6L5;Rn+d+g_g.?B*CpAdES/EN.DMC^AS8'G!D6Uu'%U2X_#.(U9?M0#\f7(9uJMho6<+en14La:9FFqWU8>O32e_O2RAk[oVrc=sp<d;?,,,,0$g@lT?`2MRDTVqO^a)f2e>%16`+hOs(E%isgid)I#aS)f2d8.%D/!MJe/>igaa2d;?,,+d-eVLa]hP,)LBBSV_6:/J\qp1EiLXVF%*'WGW@)#$WW"$>5*KU721H32bJ%F;o&$%Le9]a5SW#_OMj.ZNiG0UMM4FVbj\GN1HZ<5<&oeQK.RT'itF`>CBdXCMc%M.P*!k0AR]C[oJ"=,*%oGE-7\fD(V'R2BPcM)E//a,%<s@hWDW"F#<3n]t65T;MWPtlFT<E:R=U!hg9h6,$19kGjJd,.\4<kR1S.;*7-AR[6K9&UkrIAI.G.J<"7&5uh<3NThf3$7)lA%j/%"?W!EhKTR1iTN)GR][C<gODJ^d[W_!;QJlOZ7mP(b[B^o6A:(50c`/j3&sBn,O/cdCK'jm-)2?78qF<pQ&5==$5uTdd>1W;@le^k%89B]EN-^oAiY5@lq#R6g9eBJdb/?DD"V%?CW'i&.1**qq-+ZKD7_MK1E=+2G`.q3hk"MjcAR_73Jd,.\<$E#RR1<Mt&mZ\2UL#:T%3!GR^7`VH,P<i6S1,7*T6%c-i.M7Q:9S]cJM(TC*;(n,:S:X?j<Fo.0=Y?aWR@*0;TY]+oPmBfXVF/t67$i_PW0^(-m[Zt?K/5"-%oUT!`9MDmoJd,.\<$E#RR1<NOlf\uGor+3K/KU-_=-3`bf2^1LkuVG*bu+]SVS;[`6BPSMLT^0+/eQE,09]S0U<DO/N`@ZVFkb<0%KTqHL#mjCtY&bM@2CdJ%4O^`SV7KUS[r1j'JL[_F2*jpe4K$1HS&TW?CoV<?(PaeQEKQ10NAf>h/8MQa`@JXDRs7ZpJ]93CM-#>5%a_ahi.k\js??%ETeVuK<!\A,mou/GpesgnYm=E8-=c$44YK:WW_(.-!11"t:P1>OMecIC<ZLu0e^#PT,:$mMO.p7^1K<NC6:VeP6%XYO4&=dITt2V%p\CU3WP/%tGAGYRRV`[b2K=+d]uD==#s>!Q]4io2bp)f=(+.Vl?_`@JY#Rs7Zp!U#_NO]RaMa_ahi.k[#!YI)5C%Fd%fm!6^gIrU<Em`+sZ01g\9r]Gc/lDYj[Op8VaS;h1!j=U#9OD6/"ben"*)F@9W7VtNA#SZG5j_:RbV%uPI&QXHVi9FHTU9WW59%dU_[%EWsH":Q)Cg:0&Roi+Z*$#=UT6MD2Urc\18ONAV3hRV[BaNbFCAe/i:fPEdOTpmU"3h?Rl>M'61[SVF.6'DYEM9t#LQAM9<=%%SS`-q+2!V$#*/j)LdBd>^p10@_*-HM'dt3,u(h^pf(YN8Q4Yj#+1[YO29;@G,OPtR+&tj`I'(72;4Gt=Oq$KMc4p@4HZ)d"-$<d%&uu4DPM;[\=3TH/]OKG.WuGoW"^'>dl\ehj2*CDtg&m=9Z4a>F?^'69Jlg/lA%Z8g)ljopX9D_WAF#.THCGK9Rb@k'=0`IB#%*SK%Sq:%f_IL5f"s9lbD6*nCen"*)=*eRCnXA/6NE<CuY6J?tgRa!ubV`qD@\+dE)f;Y[=Oq$KMcY4W4Rnlo"-$Bf'!DLHPM;ZQFFtHr%N*"6CA9FZ,"\Gr"ajq93LrO[6m=?%a+Y/7a%)+'t4U&$V2p+HGQugEe(MI;1^p5:k?_JE,A"fCA*b`3LQ$>1]Rb[U&9trB)Q;,+J%m?UI4d)ICn=Oq$KC\i`uD#0FN")[m'<gnITHqeMUTLd,i@7E:i*]%32Z0#ItPH?Ld&WMpEg&m=VZ4cC+?^'5.+OV]iRZWWPf*iL5%e3#3rZLpXIU+t(pHb`3c<[?M^CNA/7765%C'Btm7::OtHNPgo+><e>s(bqU#?R))B7(C(^Uim9+DG6a:FCY/1_aPM[*0rJ8qB?p,%(uqSYcmU7l;/Yk\\a>"n?0rkESDt(^L5Rt@3`X[;lAKZ#@Z75'fD%f[d2hm9\^c=A)`LVJ\o@fV"%F5F)jWA7qB?p,(u_GWcmU7l%EGk8'\a>"n]bV'+H<!$^SK]"g?7d(EN7R_PdLhJ$T%X:+oNF'OC@X6mm=QTg7^G8Vfia6Q#g()TLLj2g^.>Frj.kj%cq#N7O`'YG%\a9JCh3W+t:O@]i('J?Og/pj'C*&Wtg%lk_d"q>d*cTPq'hL@[Rb[U&OY3Ea>%#mi+b3MASg@oWX]%XtVS3m;/B2p,I#W&$'&?DL%P?U0u[Ung[f:JYL"*'m#p(SYhCE&Qsg%lm4d2:iA4jYT).rfIr27`+,,$bDmI4]-rHP#hKkrf#`XEdq!AF#.q6t<$jp-9jnX@0Y9%fAsB<#T@0TDREfN=S`VmTo!FIf):b9\)mTZ/8;Cud=.7ClZUCuhY#PXHr*^::khfSmo?^tAO?h7-<2fqH8<m)fsk!;R[EPGdU_[!%:'+@9VM8`*U5dP<FYg;M.Hn^o>bVmqE2dG+1#K73ajpun"K(BV%F=6+)l#4SAn%N6d"r(>6mq-R;U&la^10`uXWKS19[T7HT$`BQ%7VC5q`($Yt'D$1":/&3pRaK'$a-%cR5BIO*U,+YhUD%L'cD[4hNUE?49"uZ51"2G'7MGSm,u(gskThiNB52[cPAEXb_9KnfVk=^0%DNR[dYf3'Q`-fUg-<hR619ckco^If7ZnXV:DC.:<"$4mY)AC_i=%fc2@L^5<-<i]>':@c?2*Bn;D2deZRu*+G'\A^b93eNf>!c4)%egr@bZLu*l@O\&#Jhs"G`d!M)RF'kXZ&GZi`%krP&h9>PZ`p7Iedp(0VMItVc^70@@lime@\\8lN%&6Pl,6h2X;EPM3L)DRqB1tO%U#m:D:2l@7:O\)cVJZZFQ<oc2O[`$771[e_OKb7sedmar'm@^Ki7)kSYtG^P182N5qBP.K&s8P29,44YH&a1F[XP/#0Z@U<GXa%6%(n"5['-!Ko:/%-'3\a!fC.8m.*D;i;rQn,DMU'`@N)$`73hpR>2ED#4Qn:sQ@U^n=N$d[KQ8I:kTp*8+SZ1QcSS2MT7bpaSF:(&`%8XASYHs!Bd:!@f4BsRD!-\3^-;o:CPdDkC/\s_47'Qdf%/CB;gYZ*EIR."/*AF#"G!`O3<L1bV&NR8Vd1U5=VU*uBA96=Y:/(KS*%(:(`=-<i]V&t#CL2*?ekTT)B;U2D;93X)(A#tn,09R<Oc!h,MF=OLaG-]15u.Z0B-T$`BQ7VC5q`'t8PP(X.G1eGPh=.1e8M9SSq%Urh36,`0=d,UkT5Rj=\e9p25g-8p0H>[uV@EK)EM"H+VX0J$qDotrY<.BZUe1To-F\;n.gf]W?U:$Jh!2.j90/=NMG<75=CLMHri%>c3<(Y/s.<)r+,'oUr_69NU9nZW[qU/Z`)Wc=H6nBu146:(>Kn7N:AJl=<56#K8GF[h?lOa%E:D@a2cQ-<i\s':9t)2*>@eD2d_X%Ru*+G'\=h@Q)M\J<^K4gCR6Ma0_Idi5q/O,Jhrj\M6S%?0sS9A+rO<^M.On7-!3"/<aeR`XWO,@9_"VkShZ3_7Wm5*`'t8plWPS!%8BIk7M^I#Z=u>jfWNEqb?0"%(4QF!gNBA-79Pj?o\AlHeijon^d?08C$qm%*rGZ'.%SWaTB3_3kE?00XZ-`[5RdsI@CJ%;i=>Eak%W2.Pd#M0A8j>oFdED8@Ng>HRPUBecG8ld7<0e\egdDXb8$5uV:&5>uYk`k"aAn>F&7pJ`(m\!+jlr7F3'2]&O9rq>sdU_[!B*)!o%VhShXUQ&+kFYg;MKAmf5;Mf255:'DgZ%c[YPH>q0#u#?0)P1r.2TBmhc,<'^MJK.\84Y?.\a#EZSpn`ofiX[tQ8R@l8q'5dQMd9,%"%n#S2G@I9H(*OZhG^&GDX,&?%:)XaZ0m2i9fB*YpN2BZcTHCCe6]/8:)<,rL:/?_6RCp-?cSs2VG"':>3B"*WT)UI4&:Hi$^s+e%ZKieIE\TUScsWT"T1Lk@PuLD!0i=6fj@HsU5,s4iD80U]lZW,j:dLYj+<(Qkg,O./LgjGr=(n>N<Oo')0A[6gFSR(#2K(&@K9m_G%@8^=o$:J%g`<C3q)Jq5R,5u%OTnsc.Jd,.<`"<[rQP,if7kPs/"tu0DS4$[P0^R;(S3.\QY^KgmR`JP]BJB*H*^Lrp.FC/$j:[Vg%n1pu^8`Y^_;EiSIGqsJMHb:gbOfqm6@-WM0JjT$+U3#nH,p^gpAQ"GMaK'ZMkCed_k[Q<8aB'p+0_IdS5p:M&d>9u+#T5>kR+0t<%l=@ibEOEDZ`cmu22?Ju"S>EM<><i%j>-Pc/C/4Jeg<I9#?IQA3l$4dh\rPre4@0>*d<[d@=T)@MAF#.B"N+Q5)P=L,GstfRi+Z*$%'Dj!/m#G/p3/#Y[;g#Ljd)J2fZ6id_/.rlKR+_Y%8+MR_2#*Npp-^7dhKO@,8;Ol=<W/qjNOc-J)GGS,86A8i8plUdFG`&:qO-.(%6jb*SlM-sj+iI<MRPsYuNB)r/9t%c<,W&sb[0IV2j;/DBn27cDaeB^Kp2sdLd8Hm>lQiiW)6:oKCjh.-66gW?g&kVdUL-]$7t"*L%HQnXb,BYKi6Uleu]+dB\R*SmcAF#.F66dgUH_<)bIM%bJ?^'69a<ZF(2;o+$=e3,^gldZmN+G_l^6g0&@PY=r)O'4u0kp,7\a>5I%69_LEOFj,QA0G.1=@"k-1R9oOqI5W7Lrn-fBM=Rr`2(6$jL-Ek#sg<5=VXEj>Y?.hd)LIQZ6id_9G/6uRG%aPP'MadQon)\\XCJZ%g8.[LK,$PJgCGN"[c`@:47'<K_ies1UETn@;!OC;XU<si?3h*E@2n,@oGK0Q+pO72=6B!6iB"POEBLXs_Q(+VlS)Pf.9.k35MT[Y%9f=Ku/')mV_X/3aMG-+?_?>bcQXlj0WN=4=TtnBfa/Wi%E.ELNBtko4WtEODC`Gl],.23/NWNF5/+o@KIn;PuOij,/)@GP&g7H;$%A@jmF?i)/&=H-G6AE,(Ynmjg77tFfWXfc_<2QDn^RVWs48e>4EW/%E"*!:%WT.1_dB_B7cBN6pm@!0\nl)^&-eV@^12NC*e>7;+H%=0H:]MR)b6`O8CQ(rWho_ITFIr(\CL\h!!2A>:'BXN@?5@*`F5GZQR5[':OSXNAIZW+QbNh%fQTZ;HT\en!6+Y\,a+]IOg+g/s>:%en!ehe?]I8mL&e:fr.@iCU.poe[l\'hA$G$D,d,W)7=/NA'ZJ)\h!!2A7P:@=d(GcL[D*hpTeShIb9@.gGYK]bZ"oDm]_9I',LK\%KIT*fN_`"o<[7no1>p'2Pqq%B'/<%e_+/9#B=7"^WgjK"&M%FuWQHSs+gUblLpKOV_PO)DXVRj+[##A_bj9^aPkQJa/L6PTOm`<`%*lpJf7I$0pHoWHh22Mt"3nu(IXOcJGWMn&KROY>@MX(M5MI-CH.;fSjPa%!H@h7j.OEK)(<oBuZ$V"$t-5`]4@Vh<-V&#)ecm5Y5%A+N*hW]&Qj*KmKe+fU!n)D(J\KP6O"eJ_[,?OYNY\jN>)RDc4-Z,6`V<RPEQU;);\P5Yk%0+=u5C]Q./F%,82CNX7$+8RGp\5FBb%\$.b6^9-(SN?u@eL(3qJ4"B<K<Ur7SUCd?J^(Vo*Y>k,3:l@4[6GF3Z[^]G2p.Jsq^D*\M)SJaCT':tVVe"D-2uK3pj>dtRLM5__%'KB)c35U/:2Qb79aKLhCY$dZ+Mq7Y<hs8/A5=?Ij-/u.9P)]F'c\Wuqc$I3rQV,Bn?r6U:k['P8MPl,E6`P9Bl7eD5j&Oj9L[u$r%jdd6X\1)eaa=S!b[ONC:D60i0`+06]\I\,!4dkn\E&CT$)f>n/]Z5bb4t+DOBN#'U',LT'Oai"=iD8*ul5*nHXnsEB$B[NR!_eot%9HA#NKce3!>p$'*cMZ$kCXkXTHG&O5s)\-:/-_a0YA\;#V+!3tp`HjbriO%O[W':^ie%cmcG`V'F(qo7hCUC0b7/Y:LW3*4Xd?N9%gWR(\VoSCqItenM3nWZ_XY()BL>ga^s)m%nm9TO;:hj`)gKM"e;c-<f-oYBB-)SV10UR[r%fS7`(>mm(Y5eAGC9rZ<m?d/)]uR0$%nOr]Br8Dtpn`otcij1jSrqc?\nrNW02)Jit/J'f<,<i2c5Q1r;ItkYqNT$XBC\S6%G.Xqun!K[Qo94=I#$@3T^q-U5qDH@:gd*tZ%8B.Y3XK+P#\srfP<>d(X+$4'QZGs?!Dm$jgSDW1]!UJn@r-tl)cQ=7$hTk#]T>`b,2_WddU=SYhfABC(!K/A#IQfZu[+-5oJ''!6qu~>%AI9_PrivateDataEnd